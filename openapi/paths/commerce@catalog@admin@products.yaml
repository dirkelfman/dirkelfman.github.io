get:
  tags:
    - Product
  summary: >-
    Retrieves a list of products according to any specified filter criteria and
    sort options.
  parameters:
    - name: startIndex
      in: query
      description: >-
        Used to page results from a query. Indicates the zero-based offset in
        the complete result set where the returned entities begin. For example,
        with a PageSize of 25, to get the 51st through the 75th items,
        startIndex=3. The default value is 0.
      schema:
        type: integer
        description: >-
          Used to page results from a query. Indicates the zero-based offset in
          the complete result set where the returned entities begin. For
          example, with a PageSize of 25, to get the 51st through the 75th
          items, startIndex=3. The default value is 0.
        format: int32
        default: 0
        nullable: true
    - name: pageSize
      in: query
      description: >-
        Used to page results from a query. Indicates the maximum number of
        entities to return from a single query. The default value is 20 and the
        maximum value is 200.
      schema:
        type: integer
        description: >-
          Used to page results from a query. Indicates the maximum number of
          entities to return from a single query. The default value is 20 and
          the maximum value is 200.
        format: int32
        default: 0
        nullable: true
    - name: sortBy
      in: query
      description: >-
        The element to sort the results by and the order in which the results
        appear. Either ascending or descending order. For example, to sort the
        results by “ID” ascending then by “CreateDate” descending, use: id
        asc,createdate desc.
      schema:
        type: string
        description: >-
          The element to sort the results by and the order in which the results
          appear. Either ascending or descending order. For example, to sort the
          results by “ID” ascending then by “CreateDate” descending, use: id
          asc,createdate desc.
        nullable: true
    - name: responseGroups
      in: query
      description: >-
        Used to get more specific information from the request. For example to
        get discounts applied to a product use the AppliedProducts response
        group. Available response groups: ApplicableDiscounts, VariationOptions,
        and BaseProductCode.
      schema:
        type: string
        description: >-
          Used to get more specific information from the request. For example to
          get discounts applied to a product use the AppliedProducts response
          group. Available response groups: ApplicableDiscounts,
          VariationOptions, and BaseProductCode.
        nullable: true
    - name: filter
      in: query
      description: >-
        A set of filter expressions representing the search parameters for a
        query: eq=equals, ne=not equals, gt=greater than, lt = less than or
        equals, gt = greater than or equals, lt = less than or equals, sw =
        starts with, or cont = contains. Optional.
      schema:
        type: string
        description: >-
          A set of filter expressions representing the search parameters for a
          query: eq=equals, ne=not equals, gt=greater than, lt = less than or
          equals, gt = greater than or equals, lt = less than or equals, sw =
          starts with, or cont = contains. Optional.
        nullable: true
    - name: q
      in: query
      schema:
        type: string
        nullable: true
    - name: qLimit
      in: query
      schema:
        type: integer
        format: int32
        nullable: true
    - name: noCount
      in: query
      schema:
        type: boolean
        nullable: true
  responses:
    '200':
      description: Success
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ProductCollection.yaml
        text/json:
          schema:
            $ref: ../components/schemas/ProductCollection.yaml
        text/plain:
          schema:
            $ref: ../components/schemas/ProductCollection.yaml
post:
  tags:
    - Product
  summary: >-
    Creates a new product. You supply a product name, product code, price and
    other product characteristics such as its attributes, categories where the
    product belongs, whether the product has configurable options, stand-alone
    options, and so on.
  requestBody:
    description: >-
      Properties of the new product. Required properties: ProductCode,
      Content.ProductName, and Price.ListPrice.
      Mozu.ProductAdmin.Contracts.Product
    content:
      application/json:
        schema:
          $ref: ../components/schemas/Product.yaml
  responses:
    '200':
      description: Success
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Product.yaml
        text/json:
          schema:
            $ref: ../components/schemas/Product.yaml
        text/plain:
          schema:
            $ref: ../components/schemas/Product.yaml
