openapi: 3.0.1
info:
  title: Kibo API Services Documentation
  version: v1
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  description: The Kibo Commerce platform HTTP API provides an interface for programmatic access to the data stored on the platform and associated functionality. While the API can be used directly, for experimentation or custom integration solutions, we recommend taking a look at the available client libraries and SDKs, which provide a more comfortable development experience.

servers:
  - url: https://{domain}/api
    description: relative
    variables:
      domain:
        default: mydomain.com
        description: Domain of the client's site
  - url: https://t{tenantId}.{environment}.mozu.com/api
    description: Production Tenant Api
    variables:
      tenantId:
        default: "0"
        description: Id of the Tenant
      environment:
        description: Enviroment
        enum:
          - sandbox
          - tp1
          - tp2
          - tp3
          - tp4
          - tp5
          - stg1
        default: sandbox
  - url: https://t{tenantId}-s{siteId}.{environment}.mozu.com/api
    description: Production Site Api
    variables:
      tenantId:
        default: "0"
        description: Id of the Tenant
      siteId:
        default: "0"
        description: Id of the Site
      environment:
        enum:
          - sandbox
          - tp1
          - tp2
          - tp3
          - tp4
          - tp5
          - stg1
        default: sandbox
  - url: https://t{tenantId}.sb.mozu.com/api
    description: Sandbox Tenant  Api
    variables:
      tenantId:
        default: "0"
        description: Id of the Tenant  
paths:
  "/platform/adminuser/authtickets/wsfed/auth/{id}":
    post:
      tags:
        - TenantAuthTicket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: scopeid
          in: query
          schema:
            type: integer
            format: int32
        - name: scopeType
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TenantAdminUserAuthTicket"
            text/json:
              schema:
                $ref: "#/components/schemas/TenantAdminUserAuthTicket"
            text/plain:
              schema:
                $ref: "#/components/schemas/TenantAdminUserAuthTicket"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/adminuser/authtickets/wsfed/SignOut/{id}":
    get:
      tags:
        - TenantAuthTicket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: redirect
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/adminuser/authtickets/wsfed/challenge/{id}":
    get:
      tags:
        - TenantAuthTicket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: scopeid
          in: query
          schema:
            type: integer
            format: int32
        - name: scopeType
          in: query
          schema:
            type: string
        - name: redirect
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/adminuser/authtickets/tenants:
    post:
      tags:
        - TenantAuthTicket
      summary: Authenticates a user for a particular tenant given a set of user
        credentials adn a tenantId
      parameters:
        - name: tenantId
          in: query
          description: Optional tenant Id parameter
          schema:
            type: integer
            format: int32
      requestBody:
        description: User's email address and password.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAuthInfo"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TenantAdminUserAuthTicket"
            text/json:
              schema:
                $ref: "#/components/schemas/TenantAdminUserAuthTicket"
            text/plain:
              schema:
                $ref: "#/components/schemas/TenantAdminUserAuthTicket"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - TenantAuthTicket
      summary: Reauthenticates the current user for a different tenant
      parameters:
        - name: tenantId
          in: query
          description: The tenant to authenticate the user in
          schema:
            type: integer
            format: int32
      requestBody:
        description: An existing valid auth ticket containing the refresh token.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TenantAdminUserAuthTicket"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TenantAdminUserAuthTicket"
            text/json:
              schema:
                $ref: "#/components/schemas/TenantAdminUserAuthTicket"
            text/plain:
              schema:
                $ref: "#/components/schemas/TenantAdminUserAuthTicket"
      description: If the user does not have access to the tenant, the operation fails.
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/adminuser/authtickets:
    delete:
      tags:
        - TenantAuthTicket
      summary: Logs out a user by deleting the refresh token
      parameters:
        - name: refreshToken
          in: query
          description: The refresh token to delete.
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Logs out a user by deleting the refresh token
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/adminuser/accounts/{userId}/tenants":
    get:
      tags:
        - TenenantUser
      summary: Get tenant scope for users
      parameters:
        - name: userId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TenantCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/TenantCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/TenantCollection"
      description: Get tenant scope for users
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/adminuser/accounts/{userId}":
    get:
      tags:
        - TenenantUser
      summary: Retrieves the details of a user specified by user ID
      parameters:
        - name: userId
          in: path
          description: Unique identifier of the user whose details you want to view.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            text/json:
              schema:
                $ref: "#/components/schemas/User"
            text/plain:
              schema:
                $ref: "#/components/schemas/User"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - TenenantUser
      summary: Modifies user information for a specified user
      parameters:
        - name: userId
          in: path
          description:
            Unique identifier of the user whose login information you want to
            change.
          required: true
          schema:
            type: string
      requestBody:
        description: "Details of the new user account. Required properties:
          EmailAddress, FirstName, LastName, and Password. Note that the site ID
          is passed in the request header."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            text/json:
              schema:
                $ref: "#/components/schemas/User"
            text/plain:
              schema:
                $ref: "#/components/schemas/User"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - TenenantUser
      summary: Removes a user account from the site
      parameters:
        - name: userId
          in: path
          description: Unique identifier of the user account to delete.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/adminuser/accounts/{userId}/userbyid":
    get:
      tags:
        - TenenantUser
      summary: Retrieves the details of a user specified by user ID
      parameters:
        - name: userId
          in: path
          description: Unique identifier of the user whose details you want to view.
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            text/json:
              schema:
                $ref: "#/components/schemas/User"
            text/plain:
              schema:
                $ref: "#/components/schemas/User"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/adminuser/accounts:
    get:
      tags:
        - TenenantUser
      summary:
        Retrieves a list of Admin users for a specified site according to any
        specified filter criteria and sort options
      parameters:
        - name: emailAddress
          in: query
          description: ""
          schema:
            type: string
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: responseGroups
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - TenenantUser
      summary: Creates a new user
      requestBody:
        description: The user to be created
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            text/json:
              schema:
                $ref: "#/components/schemas/User"
            text/plain:
              schema:
                $ref: "#/components/schemas/User"
      description: Creates a new user
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/adminuser/accounts/{userId}/roles":
    get:
      tags:
        - TenenantUser
      summary: Retrieves all the roles for a specified user on the specified tenant
      parameters:
        - name: userId
          in: path
          description: Unique identifier of the user.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminUserUserRoleCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/AdminUserUserRoleCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/AdminUserUserRoleCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/adminuser/accounts/{userId}/roles/{roleId}":
    post:
      tags:
        - TenenantUser
      summary: Adds a role to the specified user's Admin account
      parameters:
        - name: userId
          in: path
          description: Unique identifier of the user who receives the role.
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          description: Unique identifier of the role to add.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - TenenantUser
      summary: Removes a role from the specified Admin account
      parameters:
        - name: userId
          in: path
          description: Unique identifier of the user with the role to delete.
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          description: Unique identifer of the role to delete.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/adminuser/accounts/{userId}/Change-Password":
    post:
      tags:
        - TenenantUser
      summary: Changes a user's password
      parameters:
        - name: userId
          in: path
          description: Unique identifier of the user for whom to change the password.
          required: true
          schema:
            type: string
      requestBody:
        description: Old password and new password.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUserPasswordInfo"
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/adminuser/accounts/{userId}/Change-User-Password":
    post:
      tags:
        - TenenantUser
      summary: Changes a user's password to the provided new password
      parameters:
        - name: userId
          in: path
          description: Unique identifier of the user for whom to change the password.
          required: true
          schema:
            type: string
      requestBody:
        description: New password info for this user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeUserPasswordInfo"
      responses:
        "200":
          description: Success
      description: Changes a user's password to the provided new password
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/adminuser/accounts/Reset-Password:
    post:
      tags:
        - TenenantUser
      summary: Resets the password for a user specified by email address
      requestBody:
        description:
          "Email address of the user who has requested a password reset. \r

          \            Note that the site ID is passed in the request
          header."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminUserResetPasswordInfo"
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/developer/authtickets:
    post:
      tags:
        - DeveloperAuthTicket
      summary: Authenticates a user for a particular tenant given a set of user
        credentials adn a tenantId
      parameters:
        - name: developerAccountId
          in: query
          description: The users developer account Id
          schema:
            type: integer
            format: int32
      requestBody:
        description: User's email address and password.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAuthInfo"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeveloperAdminUserAuthTicket"
            text/json:
              schema:
                $ref: "#/components/schemas/DeveloperAdminUserAuthTicket"
            text/plain:
              schema:
                $ref: "#/components/schemas/DeveloperAdminUserAuthTicket"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - DeveloperAuthTicket
      summary: Reauthenticates the current user for a different tenant
      parameters:
        - name: developerAccountId
          in: query
          description: The users developer account Id
          schema:
            type: integer
            format: int32
      requestBody:
        description: An existing valid auth ticket containing the refresh token.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeveloperAdminUserAuthTicket"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeveloperAdminUserAuthTicket"
            text/json:
              schema:
                $ref: "#/components/schemas/DeveloperAdminUserAuthTicket"
            text/plain:
              schema:
                $ref: "#/components/schemas/DeveloperAdminUserAuthTicket"
      description: If the user does not have access to the tenant, the operation fails.
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - DeveloperAuthTicket
      summary: Logs out a user by deleting the refresh token
      parameters:
        - name: refreshToken
          in: query
          description: The refresh token to delete.
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Logs out a user by deleting the refresh token
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/adminuser/roles:
    get:
      tags:
        - TenantRole
      summary: Retrieves a list of all roles defined for this tenant
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 25
        - name: filter
          in: query
          description: Optional filter param to filter the roles
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/RoleCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/RoleCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/applications/authtickets:
    post:
      tags:
        - AppAuthTickets
      summary: Authenticates an application using shared secret and application id
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppAuthInfo"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/AuthTicket"
            application/json:
              schema:
                $ref: "#/components/schemas/AuthTicket"
            text/json:
              schema:
                $ref: "#/components/schemas/AuthTicket"
      description:
        The method returns a set of authentication tokens used to manage
        application authentication.
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/applications/authtickets/oauth:
    post:
      tags:
        - AppAuthTickets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OauthAuthRequest"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/OAuthAccessTokenResponse"
            application/json:
              schema:
                $ref: "#/components/schemas/OAuthAccessTokenResponse"
            text/json:
              schema:
                $ref: "#/components/schemas/OAuthAccessTokenResponse"
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/applications/authtickets/refresh-ticket:
    put:
      tags:
        - AppAuthTickets
      summary: Returns the AppAuthTicket with a refreshed AccessToken
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthTicketRequest"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/AuthTicket"
            application/json:
              schema:
                $ref: "#/components/schemas/AuthTicket"
            text/json:
              schema:
                $ref: "#/components/schemas/AuthTicket"
      description: Returns the AppAuthTicket with a refreshed AccessToken
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/applications/authtickets/{refreshToken}":
    delete:
      tags:
        - AppAuthTickets
      summary:
        "This method is used to expire an application's current refresh token
        which \r

        will force the application to reauthenticate once the current
        access token expires"
      parameters:
        - name: refreshToken
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/appdev/filebasedpackage/packages/{applicationKey}":
    get:
      tags:
        - FilebasedPackage
      parameters:
        - name: applicationKey
          in: path
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/AppDevHttpResponseMessage"
            application/json:
              schema:
                $ref: "#/components/schemas/AppDevHttpResponseMessage"
            text/json:
              schema:
                $ref: "#/components/schemas/AppDevHttpResponseMessage"
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/appdev/apppackages/project:
    post:
      tags:
        - Package
      summary: ""
      parameters:
        - name: projectId
          in: query
          description: ""
          schema:
            type: integer
            format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppDevPackage"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
            application/json:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
            text/json:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/appdev/apppackages/{applicationKey}":
    put:
      tags:
        - Package
      summary: ""
      parameters:
        - name: applicationKey
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppDevPackage"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
            application/json:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
            text/json:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Package
      summary: "Use this operation to retrieve the package for the requested\r

        package and its associated application core information"
      parameters:
        - name: applicationKey
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: includeChildren
          in: query
          description: ""
          schema:
            type: boolean
            default: false
        - name: skipDevAccountCheck
          in: query
          description: ""
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
            application/json:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
            text/json:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Package
      summary: Use thi operatin to logically delete a package
      parameters:
        - name: applicationKey
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/appdev/apppackages/collection:
    get:
      tags:
        - Package
      summary: ""
      parameters:
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
        - name: filter
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApplicationSummaryCollection"
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationSummaryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ApplicationSummaryCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/appdev/apppackages/apps/{appId}":
    get:
      tags:
        - Package
      summary: ""
      parameters:
        - name: appId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApplicationSummary"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApplicationSummary"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApplicationSummary"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/appdev/apppackages/{applicationKey}/clone/{packageName}":
    post:
      tags:
        - Package
      summary: Use this operation to clone an existing package
      parameters:
        - name: applicationKey
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: packageName
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
            application/json:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
            text/json:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/appdev/apppackages/applications/{applicationKey}/packages":
    get:
      tags:
        - Package
      summary: Use this operation to retieve all packages for a given applicationKey
      parameters:
        - name: applicationKey
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 50
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
        - name: filter
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PackageCollection"
            application/json:
              schema:
                $ref: "#/components/schemas/PackageCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/PackageCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/appdev/apppackages:
    get:
      tags:
        - Package
      summary: Get all packages for a given Developer Account
      parameters:
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
        - name: filter
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PackageSummaryCollection"
            application/json:
              schema:
                $ref: "#/components/schemas/PackageSummaryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/PackageSummaryCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/appdev/apppackages/create:
    post:
      tags:
        - Package
      summary:
        Save as new version of the application core with only a release package
        included
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackageRequest"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
            application/json:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
            text/json:
              schema:
                $ref: "#/components/schemas/AppDevPackage"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/developer/packages/{applicationKey}/files/{filepath}":
    post:
      tags:
        - PublicApplication
      summary: ""
      parameters:
        - name: applicationKey
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: filepath
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: lastModifiedTime
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/FileMetadata"
            application/json:
              schema:
                $ref: "#/components/schemas/FileMetadata"
            text/json:
              schema:
                $ref: "#/components/schemas/FileMetadata"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - PublicApplication
      summary: ""
      parameters:
        - name: applicationKey
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: filepath
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/developer/packages/{applicationKey}/files_rename":
    post:
      tags:
        - PublicApplication
      summary: ""
      parameters:
        - name: applicationKey
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RenameInfo"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/FileMetadata"
            application/json:
              schema:
                $ref: "#/components/schemas/FileMetadata"
            text/json:
              schema:
                $ref: "#/components/schemas/FileMetadata"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/developer/packages/{applicationKey}/metadata":
    get:
      tags:
        - PublicApplication
      summary: ""
      parameters:
        - name: applicationKey
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/FolderMetadata"
            application/json:
              schema:
                $ref: "#/components/schemas/FolderMetadata"
            text/json:
              schema:
                $ref: "#/components/schemas/FolderMetadata"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/developer/packages/{applicationKey}/filemetadata/{filepath}":
    get:
      tags:
        - PublicApplication
      summary: ""
      parameters:
        - name: applicationKey
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: filepath
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/FileMetadata"
            application/json:
              schema:
                $ref: "#/components/schemas/FileMetadata"
            text/json:
              schema:
                $ref: "#/components/schemas/FileMetadata"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/developer/applications/versions/{nsAndAppId}":
    get:
      tags:
        - PublicApplication
      summary: ""
      parameters:
        - name: nsAndAppId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ApplicationVersionsCollection"
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationVersionsCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ApplicationVersionsCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/developer/applications/{applicationKey}/packagenames":
    get:
      tags:
        - PublicApplication
      summary: ""
      parameters:
        - name: applicationKey
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PackageNamesCollection"
            application/json:
              schema:
                $ref: "#/components/schemas/PackageNamesCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/PackageNamesCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/carts/summary:
    get:
      tags:
        - Cart
      summary:
        Retrieves the number of items in the active cart, total cost of items
        in the cart, and whether the cart has expired
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartSummary"
            text/json:
              schema:
                $ref: "#/components/schemas/CartSummary"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartSummary"
      description: (Carts of anonymous shoppers expire in 14 days.)
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/user/{userId}/summary":
    get:
      tags:
        - Cart
      summary:
        Retrieves the number of items in the active cart, total cost of items
        in the cart, and whether the cart has expired.
      description: Shoppers are not allowed to execute this call. If this ever
        changes, then auth logic will need to be added
      parameters:
        - name: userId
          in: path
          description: Unique identifier of the user.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartSummary"
            text/json:
              schema:
                $ref: "#/components/schemas/CartSummary"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartSummary"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/{cartId}/summary":
    get:
      tags:
        - Cart
      summary:
        Retrieves the number of items in the specified cart, total cost of
        items in the cart, and whether the cart has expired.
      description: Shoppers are not allowed to execute this call. If this ever
        changes, then auth logic will need to be added
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartSummary"
            text/json:
              schema:
                $ref: "#/components/schemas/CartSummary"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartSummary"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/user/{userId}":
    get:
      tags:
        - Cart
      summary: Retrieves the details of the user's cart specified by user ID.
      description: Shoppers are not allowed to execute this call. If this ever
        changes, then auth logic will need to be added
      parameters:
        - name: userId
          in: path
          description: Unique identifier of the user.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/plain:
              schema:
                $ref: "#/components/schemas/Cart"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Cart
      summary:
        Get the current cart or create a new cart for the user specified by
        user ID.
      description: Shoppers are not allowed to execute this call. If this ever
        changes, then auth logic will need to be added
      parameters:
        - name: userId
          in: path
          description: Unique identifier of the user.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/plain:
              schema:
                $ref: "#/components/schemas/Cart"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Cart
      summary: Updates the cart of the user specified by user ID.
      description: Shoppers are not allowed to execute this call. If this ever
        changes, then auth logic will need to be added
      parameters:
        - name: userId
          in: path
          description: Unique identifier of the user.
          required: true
          schema:
            type: string
      requestBody:
        description: "All properties of the cart to update. Required property:
          Product.ProductCode."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cart"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/plain:
              schema:
                $ref: "#/components/schemas/Cart"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/carts/current:
    get:
      tags:
        - Cart
      summary: Retrieves a cart's contents for the current shopper
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/plain:
              schema:
                $ref: "#/components/schemas/Cart"
      description: |-

        If the shopper does not have an active cart on the site, one is created.
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Cart
      summary: Updates the cart of the current shopper
      requestBody:
        description: "All properties of the cart to update. Required property:
          Product.ProductCode."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cart"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/plain:
              schema:
                $ref: "#/components/schemas/Cart"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Cart
      summary: Deletes the cart of the current shopper
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/{cartId}":
    get:
      tags:
        - Cart
      summary: Retrieves the details of the cart specified by cart ID
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/plain:
              schema:
                $ref: "#/components/schemas/Cart"
      description: >-

        This is useful for managing carts, for example, locating abandoned carts.
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Cart
      summary: Updates the cart specified by cart ID.
      description: Shoppers are not allowed to execute this call. If this ever
        changes, then auth logic will need to be added
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart.
          required: true
          schema:
            type: string
      requestBody:
        description: "All properties of the cart to update. Required property:
          Product.ProductCode."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cart"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/plain:
              schema:
                $ref: "#/components/schemas/Cart"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Cart
      summary: Deletes the cart specified by its cart ID.
      description: Shoppers are not allowed to execute this call. If this ever
        changes, then auth logic will need to be added
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/{userId}":
    delete:
      tags:
        - Cart
      summary: Deletes the cart for the user specified by user ID.
      description: Shoppers are not allowed to execute this call. If this ever
        changes, then auth logic will need to be added
      parameters:
        - name: userId
          in: path
          description: Unique identifier of the user.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/{cartId}/rejectautodiscount/{discountId}":
    post:
      tags:
        - Cart
      parameters:
        - name: cartId
          in: path
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/plain:
              schema:
                $ref: "#/components/schemas/Cart"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/{cartId}/coupons/{couponCode}":
    put:
      tags:
        - Cart
      summary: Apply a coupon to the cart
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart with which to associate the coupon.
          required: true
          schema:
            type: string
        - name: couponCode
          in: path
          description: Coupon code that the customer supplies to get the discounted price.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/plain:
              schema:
                $ref: "#/components/schemas/Cart"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/{cartId}/coupons":
    delete:
      tags:
        - Cart
      summary: Removes all coupons that had been previously applied to the cart
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart with the coupon you want to remove.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/plain:
              schema:
                $ref: "#/components/schemas/Cart"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/{cartId}/coupons/{couponcode}":
    delete:
      tags:
        - Cart
      summary: Removes a coupon that had been previously applied to the cart
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart with the coupon you want to remove.
          required: true
          schema:
            type: string
        - name: couponCode
          in: path
          description: Coupon code to remove.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/plain:
              schema:
                $ref: "#/components/schemas/Cart"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/carts/current/extendedproperties:
    get:
      tags:
        - Cart
      summary: Get extended properties on a cart
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
      description: Get extended properties on a cart
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Cart
      summary: Adds extended properties
      requestBody:
        description: Extended properties
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ExtendedProperty"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
      description: Adds extended properties
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Cart
      summary: Updated extended properties
      parameters:
        - name: upsert
          in: query
          description: Allow insert or update
          schema:
            type: boolean
            default: false
      requestBody:
        description: Extended properties
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ExtendedProperty"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
      description: Updated extended properties
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Cart
      summary: Delete extended properties
      requestBody:
        description: Extended properties.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Success
      description: Delete extended properties
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/current/extendedproperties/{key}":
    put:
      tags:
        - Cart
      summary: Updated extended property
      parameters:
        - name: key
          in: path
          description: Unique identifier of the cart item
          required: true
          schema:
            type: string
        - name: upsert
          in: query
          description: Extended property
          schema:
            type: boolean
            default: false
      requestBody:
        description: Extended property
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtendedProperty"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedProperty"
            text/json:
              schema:
                $ref: "#/components/schemas/ExtendedProperty"
            text/plain:
              schema:
                $ref: "#/components/schemas/ExtendedProperty"
      description: Updated extended property
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Cart
      summary: Removes a particular extended property
      parameters:
        - name: key
          in: path
          description: Unique identifier of the extended property
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Removes a particular extended property
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/carts/current/items:
    get:
      tags:
        - Cart
      summary:
        "Retrieves the details of each cart item such as the product name,
        stock count, unit price, discounts, quantity ordered, and total price\r

        for the current shopper"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItemCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CartItemCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartItemCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Cart
      summary: Clears all cart items from the cart of a current shopper
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/plain:
              schema:
                $ref: "#/components/schemas/Cart"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Cart
      summary: Adds a product or other item to the cart of the current shopper
      requestBody:
        description: "All properties of the new cart item. Required property:
          Product.ProductCode."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartItem"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartItem"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/{cartId}/items":
    get:
      tags:
        - Cart
      summary:
        "Retrieves the details of each cart item such as the product name,
        stock count, unit price, discounts, quantity ordered, and total price\r

        for the cart specified by the cart ID"
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItemCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CartItemCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartItemCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Cart
      summary: Clears all cart items from the cart specified by the cart ID
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/json:
              schema:
                $ref: "#/components/schemas/Cart"
            text/plain:
              schema:
                $ref: "#/components/schemas/Cart"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Cart
      summary: Adds a product or other item to the cart specified by the cart ID
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart.
          required: true
          schema:
            type: string
      requestBody:
        description: "All properties of the new cart item. Required property:
          Product.ProductCode."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartItem"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartItem"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/current/items/{cartItemId}":
    get:
      tags:
        - Cart
      summary:
        Retrieves an individual cart item from the cart of the current shopper
        specified by its cart ID
      parameters:
        - name: cartItemId
          in: path
          description: Unique identifier of the cart item.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartItem"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Cart
      summary: Updates a particular cart item in the cart of the current shopper
      parameters:
        - name: cartItemId
          in: path
          description: Unique identifier of the cart item.
          required: true
          schema:
            type: string
      requestBody:
        description:
          "All properties of the updated cart item. Required property:
          Product.ProductCode."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartItem"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartItem"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Cart
      summary: Removes a particular cart item from the cart of the current shopper
      parameters:
        - name: cartItemId
          in: path
          description: Unique identifier of the cart item.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/{cartId}/items/{cartItemId}":
    get:
      tags:
        - Cart
      summary: Retrieves an individual cart item from the cart specified by the cart ID
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart.
          required: true
          schema:
            type: string
        - name: cartItemId
          in: path
          description: Unique identifier of the cart item.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartItem"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Cart
      summary: Updates a particular cart item in the cart specified by the cart ID
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart.
          required: true
          schema:
            type: string
        - name: cartItemId
          in: path
          description: Unique identifier of the cart item.
          required: true
          schema:
            type: string
      requestBody:
        description:
          "All properties of the updated cart item. Required property:
          Product.ProductCode."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartItem"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartItem"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Cart
      summary: Removes a particular cart item from the cart specified by the cart ID
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart.
          required: true
          schema:
            type: string
        - name: cartItemId
          in: path
          description: Unique identifier of the cart item.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/carts/current/bulkitems:
    post:
      tags:
        - Cart
      summary: Adds multiple items to the cart of the current shopper
      parameters:
        - name: throwErrorOnInvalidItems
          in: query
          description:
            When set to true none of the items will be added when some items
            are invalid. when set to false valid items are added and invalid
            items are removed
          schema:
            type: boolean
      requestBody:
        description: The items to add to the cart
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CartItem"
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/{cartId}/bulkitems":
    post:
      tags:
        - Cart
      summary: Adds multiple items to the cart specified by the cart ID
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart.
          required: true
          schema:
            type: string
        - name: throwErrorOnInvalidItems
          in: query
          description:
            When set to true none of the items will be added when some items
            are invalid. when set to false valid items are added and invalid
            items are removed
          schema:
            type: boolean
      requestBody:
        description: The items to add to the cart
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CartItem"
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/current/items/{cartItemId}/{quantity}":
    put:
      tags:
        - Cart
      summary:
        Updates the quantity of an individual cart item in the cart of the
        current shopper
      parameters:
        - name: cartItemId
          in: path
          description: Unique identifier of the cart item.
          required: true
          schema:
            type: string
        - name: quantity
          in: path
          description: New quantity for the specified cart item.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartItem"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/{cartId}/items/{cartItemId}/{quantity}":
    put:
      tags:
        - Cart
      summary:
        Updates the quantity of an individual cart item in the cart specified
        by the cart ID
      parameters:
        - name: cartId
          in: path
          description: Unique identifier of the cart.
          required: true
          schema:
            type: string
        - name: cartItemId
          in: path
          description: Unique identifier of the cart item.
          required: true
          schema:
            type: string
        - name: quantity
          in: path
          description: New quantity for the specified cart item.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/json:
              schema:
                $ref: "#/components/schemas/CartItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartItem"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/carts/current/messages:
    get:
      tags:
        - Cart
      summary: Retrieves messages to and from the current shopper
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartChangeMessageCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CartChangeMessageCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartChangeMessageCollection"
      description:
        "These are messages supplied by the system to notify the shopper \r

        of price increases or decreases or product unavailability."
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Cart
      summary: Removes all messages associated with the cart of the current shopper
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/carts/current/messages/{messageId}":
    delete:
      tags:
        - Cart
      summary: Removes a single message associated with the cart of the current shopper
      parameters:
        - name: messageId
          in: path
          description: Unique identifier of the message to delete.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/channels:
    get:
      tags:
        - Channel
      summary:
        Retrieves a list of channels according to any specified filter criteria
        and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            "Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. \r

            \            For example, with a PageSize of 25, to get
            the 51st through the 75th items, startIndex=3. The default value is
            0. Optional."
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the channel in which the
            results appear. Either ascending (a-z) or descending (z-a) channel.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, \r

            \            gt = greater than or equals, lt = less than
            or equals, sw = starts with, or cont = contains. Optional."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ChannelCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ChannelCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Channel
      summary: Creates a new channel
      requestBody:
        description: All properties of the channel to place.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
            text/json:
              schema:
                $ref: "#/components/schemas/Channel"
            text/plain:
              schema:
                $ref: "#/components/schemas/Channel"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/channels/{code}":
    get:
      tags:
        - Channel
      summary: Retrieves the details of an channel specified by the channel ID
      parameters:
        - name: code
          in: path
          description: Unique identifier of the channel whose details you want.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
            text/json:
              schema:
                $ref: "#/components/schemas/Channel"
            text/plain:
              schema:
                $ref: "#/components/schemas/Channel"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Channel
      summary: Updates a channel
      parameters:
        - name: code
          in: path
          description: ID of the channel to update.
          required: true
          schema:
            type: string
      requestBody:
        description: All properties of the channel to place.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
            text/json:
              schema:
                $ref: "#/components/schemas/Channel"
            text/plain:
              schema:
                $ref: "#/components/schemas/Channel"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Channel
      summary: Updates a channel
      parameters:
        - name: code
          in: path
          description: ID of the channel to update.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/channelgroups:
    get:
      tags:
        - ChannelGroup
      summary:
        Retrieves a list of channel groups according to any specified filter
        criteria and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            "Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. \r

            \            For example, with a PageSize of 25, to get
            the 51st through the 75th items, startIndex=3. The default value is
            0. Optional."
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the channel in which the
            results appear. Either ascending (a-z) or descending (z-a) channel.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, \r

            \            gt = greater than or equals, lt = less than
            or equals, sw = starts with, or cont = contains. Optional."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelGroupCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ChannelGroupCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ChannelGroupCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - ChannelGroup
      summary: Creates a new channel
      requestBody:
        description: All properties of the channel group to place.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChannelGroup"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelGroup"
            text/json:
              schema:
                $ref: "#/components/schemas/ChannelGroup"
            text/plain:
              schema:
                $ref: "#/components/schemas/ChannelGroup"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/channelgroups/{code}":
    get:
      tags:
        - ChannelGroup
      summary: Retrieves the details of an channel group specified by the channel ID
      parameters:
        - name: code
          in: path
          description: Unique identifier of the channel whose details you want.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelGroup"
            text/json:
              schema:
                $ref: "#/components/schemas/ChannelGroup"
            text/plain:
              schema:
                $ref: "#/components/schemas/ChannelGroup"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - ChannelGroup
      summary: Updates a channel
      parameters:
        - name: code
          in: path
          description: ID of the channel to update.
          required: true
          schema:
            type: string
      requestBody:
        description: All properties of the channel group to place.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChannelGroup"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelGroup"
            text/json:
              schema:
                $ref: "#/components/schemas/ChannelGroup"
            text/plain:
              schema:
                $ref: "#/components/schemas/ChannelGroup"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - ChannelGroup
      summary: Updates a channel
      parameters:
        - name: code
          in: path
          description: ID of the channel to update.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/attributes":
    post:
      tags:
        - Checkout
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/OrderAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Checkout
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Checkout
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: removeMissing
          in: query
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/OrderAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}":
    get:
      tags:
        - Checkout
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Checkout
      summary: Updates the details of a checkout specified by the checkout ID
      parameters:
        - name: checkoutId
          in: path
          description: Unique identifier of the checkout whose details you want.
          required: true
          schema:
            type: string
      requestBody:
        description: Checkout that needs update
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Checkout"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/checkouts:
    get:
      tags:
        - Checkout
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: qLimit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckoutCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CheckoutCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CheckoutCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Checkout
      summary: Creates a new checkout from an existing cart, that is, when the
        customer chooses to proceed to checkout
      parameters:
        - name: cartId
          in: query
          description:
            Unique identifier of the cart. This is the original cart ID
            expressed as a GUID.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/shippingMethods":
    get:
      tags:
        - Checkout
      summary: Retrieves available shipping methods for groupings
      parameters:
        - name: checkoutId
          in: path
          description:
            Unique identifier of the checkout whose shipping methods you want
            to get.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CheckoutGroupRates"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CheckoutGroupRates"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CheckoutGroupRates"
      description:
        Typically used to display available shipping method options on the
        checkout page.
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Checkout
      summary: Sets the shipping method for specified groupings
      parameters:
        - name: checkoutId
          in: path
          description:
            Unique identifier of the checkout whose shipping methods you want
            to set.
          required: true
          schema:
            type: string
      requestBody:
        description: Pairings of checkout group to shipping method
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CheckoutGroupShippingMethod"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/actions":
    get:
      tags:
        - Checkout
      summary: Retrieves available actions which depends on the status of the checkout
      parameters:
        - name: checkoutId
          in: path
          description:
            Unique identifier of the checkout whose available actions you want
            to get.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
            text/plain:
              schema:
                type: array
                items:
                  type: string
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Checkout
      summary: Perform an action on the checkout
      parameters:
        - name: checkoutId
          in: path
          description: Unique identifier of the checkout.
          required: true
          schema:
            type: string
      requestBody:
        description: The action to perform
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckoutAction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description:
        Available actions depend on the current state of the checkout. If
        in doubt, get a list of available checkout actions first.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/digitalWallet/{digitalWalletType}":
    put:
      tags:
        - Checkout
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: digitalWalletType
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DigitalWallet"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/priceList":
    put:
      tags:
        - Checkout
      summary: Changes the pricelist associated with a checkout
      parameters:
        - name: checkoutId
          in: path
          description: Unique identifier of the checkout to change
          required: true
          schema:
            type: string
      requestBody:
        description: The code for the pricelist to apply
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description: |-

        The desired price list code should be specified on the ApiContext.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/email/resend":
    post:
      tags:
        - Checkout
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/coupons/{couponCode}":
    put:
      tags:
        - Checkout
      summary: Apply a coupon to the Checkout
      parameters:
        - name: checkoutId
          in: path
          description: Unique identifier of the Checkout with which to associate the coupon.
          required: true
          schema:
            type: string
        - name: couponCode
          in: path
          description: Coupon code that the customer supplies to get the discounted price.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/coupons":
    delete:
      tags:
        - Checkout
      summary: Removes all coupons that had been previously applied to the checkout
      parameters:
        - name: checkoutId
          in: path
          description: Unique identifier of the order with the coupon you want to remove.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/coupons/{couponcode}":
    delete:
      tags:
        - Checkout
      summary: Removes a coupon that had been previously applied to the checkout
      parameters:
        - name: checkoutId
          in: path
          description: Unique identifier of the checkout with the coupon you want to remove.
          required: true
          schema:
            type: string
        - name: couponCode
          in: path
          description: Coupon code to remove.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/destinations/{destinationId}":
    get:
      tags:
        - Checkout
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: destinationId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeDestination"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeDestination"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeDestination"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Checkout
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: destinationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeDestination"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeDestination"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeDestination"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeDestination"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Checkout
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
        - name: destinationId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/destinations":
    get:
      tags:
        - Checkout
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeDestination"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeDestination"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeDestination"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Checkout
      parameters:
        - name: checkoutId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeDestination"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeDestination"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeDestination"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeDestination"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/items":
    post:
      tags:
        - Checkout
      summary: Adds a product or other item to the checkout of the current shopper
      parameters:
        - name: checkoutId
          in: path
          description: ID of the checkout to add an item to.
          required: true
          schema:
            type: string
      requestBody:
        description: "All properties of the new item. Required property:
          Product.ProductCode."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeOrderItem"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/items/{itemId}":
    delete:
      tags:
        - Checkout
      summary: Removes a particular item from the checkout of the current shopper
      parameters:
        - name: checkoutId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: Unique identifier of the item.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/items/{itemId}/split":
    post:
      tags:
        - Checkout
      summary: Splits an existing item into two
      parameters:
        - name: checkoutId
          in: path
          description: ID of the checkout containing the item to split
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: The ID of the item to split
          required: true
          schema:
            type: string
        - name: quantity
          in: query
          description: What quantity to split off. Defaults to 1.
          schema:
            type: integer
            format: int32
            default: 1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description: "The new item's quantity will be !:quantity, and the original
        item's\r

        quantity will be reduced accordingly."
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/items/{itemId}/destination/{destinationId}":
    put:
      tags:
        - Checkout
      summary: Associate an item to a destination
      parameters:
        - name: checkoutId
          in: path
          description: ID of the checkout
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: ID of the item to update
          required: true
          schema:
            type: string
        - name: destinationId
          in: path
          description: ID of the destination
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/items/destinations":
    post:
      tags:
        - Checkout
      summary: Associate an items to destinations in bulk
      parameters:
        - name: checkoutId
          in: path
          description: ID of the checkout
          required: true
          schema:
            type: string
      requestBody:
        description: Pairings of destination IDs with their associated items by ID
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ItemsForDestination"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/payments/actions":
    post:
      tags:
        - Checkout
      summary: Sets the action of the specified payment transaction interaction
      parameters:
        - name: checkoutId
          in: path
          description:
            Unique identifier of the checkout whose payment action you want to
            change.
          required: true
          schema:
            type: string
      requestBody:
        description: Action to be performed, along with any metadata.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentAction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description:
        "Available actions depend on the current status of the payment
        transaction. \r

        If in doubt, get a list of available payment actions first."
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/checkouts/{checkoutId}/payments/{paymentId}/actions":
    post:
      tags:
        - Checkout
      summary: Sets the action of the specified payment transaction interaction
      parameters:
        - name: checkoutId
          in: path
          description:
            Unique identifier of the checkout whose payment action you want to
            change.
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: Action to be performed, along with any metadata.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentAction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/json:
              schema:
                $ref: "#/components/schemas/Checkout"
            text/plain:
              schema:
                $ref: "#/components/schemas/Checkout"
      description:
        "Available actions depend on the current status of the payment
        transaction. \r

        If in doubt, get a list of available payment actions first."
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/payments/{paymentId}/actions":
    post:
      tags:
        - Order
      summary: Sets the action of the specified payment transaction interaction
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifier of the order whose payment action you want to
            change.
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: Action to be performed, along with any metadata.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentAction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description:
        "Available actions depend on the current status of the payment
        transaction. \r

        If in doubt, get a list of available payment actions first."
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Order
      summary:
        Retrieves available payment actions which depends on the status of the
        order's payment transaction
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifier of the order whose available payment actions you
            want to get.
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
            text/plain:
              schema:
                type: array
                items:
                  type: string
      description: "\r

        Possible actions can be \"Create,\" \"Capture,\" \"Void,\"
        \"AuthCapture,\" or \"ReceiveCheck.\""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/payments/{paymentId}":
    get:
      tags:
        - Order
      summary: Retrieves a specific payment transaction from the order
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifier of the order whose payment transaction you want
            to get.
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: Unique identifier of the payment transaction you want to get.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
            text/json:
              schema:
                $ref: "#/components/schemas/Payment"
            text/plain:
              schema:
                $ref: "#/components/schemas/Payment"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/payments":
    get:
      tags:
        - Order
      summary: Retrieves payment transactions for an order
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifier of the order whose payment transactions you want
            to get.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/PaymentCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/PaymentCollection"
      description: Allows filtering and sorting.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/payments/autocapture":
    post:
      tags:
        - Order
      summary: Attempts to capture payments for any fulfilled shipments.
      description: Amount to capture is total of fulfilled shipments - order
        adjustment - amount already captured.
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order you want to auto capture.
          required: true
          schema:
            type: string
        - name: forceCapture
          in: query
          description:
            Also capture unfulfilled shipments (excluding backorder). Used when
            credit card auths are about to expire.
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/pickups":
    post:
      tags:
        - Order
      summary: Apply a pickup to the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the pickup.
          required: true
          schema:
            type: string
      requestBody:
        description: Pickup to create and add to the order
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pickup"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pickup"
            text/json:
              schema:
                $ref: "#/components/schemas/Pickup"
            text/plain:
              schema:
                $ref: "#/components/schemas/Pickup"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/pickups/{pickupId}":
    put:
      tags:
        - Order
      summary: Delete an order pickup
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the pickup.
          required: true
          schema:
            type: string
        - name: pickupId
          in: path
          description: Pickup to update on the order
          required: true
          schema:
            type: string
      requestBody:
        description: Pickup content to update on the order
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pickup"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pickup"
            text/json:
              schema:
                $ref: "#/components/schemas/Pickup"
            text/plain:
              schema:
                $ref: "#/components/schemas/Pickup"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Order
      summary: Delete an order pickup
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the pickup.
          required: true
          schema:
            type: string
        - name: pickupId
          in: path
          description: Pickup to remove from the order
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Order
      summary: Get an order pickup
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the pickup.
          required: true
          schema:
            type: string
        - name: pickupId
          in: path
          description: Pickup to remove from the order
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pickup"
            text/json:
              schema:
                $ref: "#/components/schemas/Pickup"
            text/plain:
              schema:
                $ref: "#/components/schemas/Pickup"
      description: Get an order pickup
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/pickups/{pickupId}/actions":
    get:
      tags:
        - Order
      summary: Retrieves available fulfillment actions
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifier of the order on which to get a list of available
            actions.
          required: true
          schema:
            type: string
        - name: pickupId
          in: path
          description: Pickup ID to get fulfillment actions for.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
            text/plain:
              schema:
                type: array
                items:
                  type: string
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/refunds":
    post:
      tags:
        - Order
      summary: Apply a refund to the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the package.
          required: true
          schema:
            type: string
      requestBody:
        description: Refund to create on the order
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Refund"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Refund"
            text/json:
              schema:
                $ref: "#/components/schemas/Refund"
            text/plain:
              schema:
                $ref: "#/components/schemas/Refund"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/refunds/{refundId}":
    put:
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
        - name: refundId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/orders/refunds/refundreasons:
    get:
      tags:
        - Order
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefundReasonCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/RefundReasonCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/RefundReasonCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/returnableitems":
    get:
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderReturnableItemCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderReturnableItemCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderReturnableItemCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/shipments":
    post:
      tags:
        - Order
      summary:
        Creates a shipment by grouping together multiple packages into logical
        shipments
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order which is ready to be shipped.
          required: true
          schema:
            type: string
      requestBody:
        description: Package ids to use in creating shipments.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimePackage"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimePackage"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimePackage"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/shipments/{shipmentId}":
    delete:
      tags:
        - Order
      summary: Deletes an existing order shipment
      parameters:
        - name: orderId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: shipmentId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Deletes an existing order shipment
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Order
      summary: Allows a shipment to be retrieved for the order
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: string
        - name: shipmentId
          in: path
          description: Shipment ID of the order.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/shipments/methods":
    get:
      tags:
        - Order
      summary: Retrieves available shipping methods
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifier of the order whose shipping methods you want to
            get.
          required: true
          schema:
            type: string
        - name: draft
          in: query
          description: Gets a draft copy of the order if one is available.
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeShippingRate"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeShippingRate"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeShippingRate"
      description:
        Typically used to display available shipping method options on the
        checkout page.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/shipments/{shipmentNumber}/reprice":
    post:
      tags:
        - Order
      parameters:
        - name: shipmentNumber
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepriceShipmentObject"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/shipments/{shipmentNumber}/adjustments":
    post:
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
        - name: shipmentNumber
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShipmentAdjustment"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/orders/{orderId}/shipments/{shipmentNumber}/item/{itemId}/adjustments"
  : post:
      tags:
        - Order
      parameters:
        - name: shipmentNumber
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShipmentItemAdjustment"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/shipments/{shipmentNumber}/split":
    post:
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
        - name: shipmentNumber
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SplitShipmentsObject"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeShipment"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeShipment"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeShipment"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/validationresults":
    put:
      tags:
        - Order
      summary: Adds a validation result from an external system to an order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order to which you want to add a note.
          required: true
          schema:
            type: string
      requestBody:
        description: The order validation result.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderValidationResult"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderValidationResult"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderValidationResult"
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderValidationResult"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Order
      summary: Adds a validation result from an external system to an order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order to which you want to add a note.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderValidationResult"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderValidationResult"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderValidationResult"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/adjustment":
    put:
      tags:
        - Order
      summary: Apply a coupon to the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the coupon.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Allows different update behaviors to impact the original or the
            draft.
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      requestBody:
        description: Adjustment to apply to the order
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Adjustment"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: " coupon?"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Order
      summary: Removes a coupon that had been previously applied to the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with the coupon you want to remove.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Allows different update behaviors to impact the original or the
            draft.
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: coupon?
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/adjustment/shipping":
    put:
      tags:
        - Order
      summary: Apply a coupon to the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the coupon.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Allows different update behaviors to impact the original or the
            draft.
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      requestBody:
        description: Adjustment to apply to the order
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Adjustment"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: " coupon?"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Order
      summary: Removes a coupon that had been previously applied to the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with the coupon you want to remove.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Allows different update behaviors to impact the original or the
            draft.
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: coupon?
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/adjustment/handling":
    put:
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          schema:
            type: string
        - name: version
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Adjustment"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          schema:
            type: string
        - name: version
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/attributes":
    post:
      tags:
        - Order
      summary: Adds a attributeSet to the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order to which you want to add a
            attributeSet.
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes to upsert.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/OrderAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
      description:
        This is an internal attributeSet that the merchant might want to
        add to an order.
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Order
      summary: Retrieves a list of all attributeSets for an order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order whose attributeSets you want to get.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Order
      summary: Updates a specific order attributeSet for an order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order whose attributeSet you want to update.
          required: true
          schema:
            type: string
        - name: removeMissing
          in: query
          description: Indicates that items missing from the collection should be removed.
          schema:
            type: boolean
            default: false
      requestBody:
        description: Attributes to upsert.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/OrderAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderAttribute"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/billinginfo":
    get:
      tags:
        - Order
      summary:
        Retrieves the customer's billing address, and, if paying by credit
        card, the card's number, expiration date, card holder's name and billing
        address
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifer of the order whose customer's payment source you
            want to get.
          required: true
          schema:
            type: string
        - name: draft
          in: query
          description:
            Determines whether the draft version should be retrieved if one
            exists.
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/BillingInfo"
            text/plain:
              schema:
                $ref: "#/components/schemas/BillingInfo"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Order
      summary: Adds a payment source to the order
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifier of the order whose payment source you want to
            update.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Allows different update behaviors to impact the original or the
            draft.
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      requestBody:
        description: All the properties that you want the payment source object to contain.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BillingInfo"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/BillingInfo"
            text/plain:
              schema:
                $ref: "#/components/schemas/BillingInfo"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/orders/cancel/reasons:
    get:
      tags:
        - Order
      parameters:
        - name: category
          in: query
          schema:
            type: string
            default: SHOPPER
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelReasonCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CancelReasonCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CancelReasonCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/cancel/{orderId}":
    put:
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeCanceledReason"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/orders:
    get:
      tags:
        - Order
      summary:
        Retrieves a list of orders according to any specified filter criteria
        and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            "Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. \r

            \            For example, with a PageSize of 25, to get
            the 51st through the 75th items, startIndex=3. The default value is
            0. Optional."
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, \r

            \            gt = greater than or equals, lt = less than
            or equals, sw = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: q
          in: query
          description: Text to perform a search on
          schema:
            type: string
        - name: qLimit
          in: query
          description: Limit of the records to include in a search, used for global search
          schema:
            type: integer
            format: int32
        - name: includeBin
          in: query
          description: Whether to include BIN numbers on credit card payments
          schema:
            type: boolean
            default: false
        - name: responseGroups
          in: query
          description: Response groups to return or filter the order graph
          schema:
            type: string
        - name: mode
          in: query
          description: "'synthesized' to provide a synthesized order from shipment data"
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Order
      summary: Creates a new order for no-cart quick-ordering scenarios
      parameters:
        - name: cartId
          in: query
          description:
            Unique identifier of the cart. This is the original cart ID
            expressed as a GUID.
          schema:
            type: string
      requestBody:
        description: All properties of the order to place.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/users":
    put:
      tags:
        - Order
      summary: Changes the User ID associated with an order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order to change.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: (This will probably not be exposed.)
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/priceList":
    put:
      tags:
        - Order
      summary: Changes the pricelist associated with an order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order to change
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Allows different update behaviors to impact the original or the
            draft.
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      requestBody:
        description: The code for the pricelist to apply
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: |-

        The desired price list code should be specified on the ApiContext.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/email/resend":
    put:
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderAction"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}":
    get:
      tags:
        - Order
      summary: Retrieves the details of an order specified by the order ID
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order whose details you want.
          required: true
          schema:
            type: string
        - name: draft
          in: query
          description: Gets a draft copy of the order if one is available
          schema:
            type: boolean
        - name: includeBin
          in: query
          description: Whether to include BIN numbers on credit card payments
          schema:
            type: boolean
            default: false
        - name: mode
          in: query
          description: "'synthesized' to provide a synthesized order from shipment data"
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Order
      summary: Updates the billing and/or shipping information of an existing order
      parameters:
        - name: orderId
          in: path
          description: The order ID to update.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Allows different update behaviors to impact the original or the
            draft.
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      requestBody:
        description: All properties of the order to place.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/digitalWallet/{digitalWalletType}":
    put:
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
        - name: digitalWalletType
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DigitalWallet"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/draft":
    put:
      tags:
        - Order
      summary: Deletes a draft version of an order
      parameters:
        - name: orderId
          in: path
          description: The order ID to update.
          required: true
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/actions":
    post:
      tags:
        - Order
      summary: Set an action on the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order.
          required: true
          schema:
            type: string
      requestBody:
        description: Action to perform, which can be "Create," "Submit,"
          "SetAsProcessing," "Close," or "Cancel."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderAction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description:
        Available actions depend on the current status of the order. If in
        doubt, get a list of available order actions first.
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Order
      summary:
        Retrieves available order actions which depends on the status of the
        order
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifier of the order whose available order actions you
            want to get.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
            text/plain:
              schema:
                type: array
                items:
                  type: string
      description: "\r

        Possible actions can be \"Create,\" \"Submit,\"
        \"SetAsProcessing,\" \"Close,\" or \"Cancel.\""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/taxableorders":
    get:
      tags:
        - Order
      summary:
        Gets an order divided up into "TaxableOrders" based on the source and
        delivery locations of the order items
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order whose taxable orders you want to get.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PricingTaxableOrder"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PricingTaxableOrder"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PricingTaxableOrder"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/discounts/{discountId}":
    put:
      tags:
        - Order
      summary: Apply a coupon to the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the coupon.
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          description: Identifies the discount to be updated.
          required: true
          schema:
            type: integer
            format: int32
        - name: updateMode
          in: query
          description:
            Allows different update behaviors to impact the original or the
            draft.
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      requestBody:
        description: Discount information to use as the update source.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeAppliedDiscount"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/orders/price:
    post:
      tags:
        - Order
      parameters:
        - name: refreshShipping
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/sms/optout/{siteId}":
    put:
      tags:
        - Order
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/coupons/{couponCode}":
    put:
      tags:
        - Order
      summary: Apply a coupon to the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the coupon.
          required: true
          schema:
            type: string
        - name: couponCode
          in: path
          description: Coupon code that the customer supplies to get the discounted price.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Allows different update behaviors to impact the original or the
            draft.
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/coupons":
    delete:
      tags:
        - Order
      summary: Removes all coupons that had been previously applied to the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with the coupon you want to remove.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Allows different update behaviors to impact the original or the
            draft.
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/coupons/{couponcode}":
    delete:
      tags:
        - Order
      summary: Removes a coupon that had been previously applied to the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with the coupon you want to remove.
          required: true
          schema:
            type: string
        - name: couponCode
          in: path
          description: Coupon code to remove.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Allows different update behaviors to impact the original or the
            draft.
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/digitalpackages":
    post:
      tags:
        - Order
      summary: Apply a digital package to the order
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifier of the order with which to associate the digital
            package.
          required: true
          schema:
            type: string
      requestBody:
        description: Digital Package to create and add to the order
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DigitalPackage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DigitalPackage"
            text/json:
              schema:
                $ref: "#/components/schemas/DigitalPackage"
            text/plain:
              schema:
                $ref: "#/components/schemas/DigitalPackage"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/digitalpackages/{digitalPackageId}":
    put:
      tags:
        - Order
      summary: Delete an order package
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the package.
          required: true
          schema:
            type: string
        - name: digitalPackageId
          in: path
          description: Package to update on the order
          required: true
          schema:
            type: string
      requestBody:
        description: Package content to update on the order
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DigitalPackage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DigitalPackage"
            text/json:
              schema:
                $ref: "#/components/schemas/DigitalPackage"
            text/plain:
              schema:
                $ref: "#/components/schemas/DigitalPackage"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Order
      summary: Delete an order digital package
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the package.
          required: true
          schema:
            type: string
        - name: digitalPackageId
          in: path
          description: Digital package to remove from the order
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Order
      summary: Get an order digital package
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the package.
          required: true
          schema:
            type: string
        - name: digitalPackageId
          in: path
          description: Digital Package Id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DigitalPackage"
            text/json:
              schema:
                $ref: "#/components/schemas/DigitalPackage"
            text/plain:
              schema:
                $ref: "#/components/schemas/DigitalPackage"
      description: Get an order digital package
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/digitalpackages/{digitalPackageId}/actions":
    get:
      tags:
        - Order
      summary: Retrieves available fulfillment actions
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifier of the order on which to get a list of available
            actions.
          required: true
          schema:
            type: string
        - name: digitalPackageId
          in: path
          description: Package ID to get fulfillment actions for.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
            text/plain:
              schema:
                type: array
                items:
                  type: string
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/extendedproperties":
    get:
      tags:
        - Order
      summary: Get extended properties on an order
      parameters:
        - name: orderId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: draft
          in: query
          description: ""
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
      description: Get extended properties on an order
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Order
      summary: Adds extended properties
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order item.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Determines the update strategy for this update (ApplyAndCommit,
            ApplyToOriginal, ApplyToDraft)
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      requestBody:
        description: Extended properties.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ExtendedProperty"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
      description: Adds extended properties
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Order
      summary: Updated extended properties
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order item
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Determines the update strategy for this update (ApplyAndCommit,
            ApplyToOriginal, ApplyToDraft)
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
        - name: upsert
          in: query
          description: Allow insert or update
          schema:
            type: boolean
            default: false
      requestBody:
        description: Extended properties
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ExtendedProperty"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExtendedProperty"
      description: Updated extended properties
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Order
      summary: Delete extended properties
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order item
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Determines the update strategy for this update (ApplyAndCommit,
            ApplyToOriginal, ApplyToDraft)
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      requestBody:
        description: Keys of extended properties
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Success
      description: Delete extended properties
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/extendedproperties/{key}":
    put:
      tags:
        - Order
      summary: Updated extended property
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order item
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: Key
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Determines the update strategy for this update (ApplyAndCommit,
            ApplyToOriginal, ApplyToDraft)
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
        - name: upsert
          in: query
          description: Allow insert or update
          schema:
            type: boolean
            default: false
      requestBody:
        description: Extended property
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtendedProperty"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedProperty"
            text/json:
              schema:
                $ref: "#/components/schemas/ExtendedProperty"
            text/plain:
              schema:
                $ref: "#/components/schemas/ExtendedProperty"
      description: Updated extended property
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Order
      summary: Removes a particular order item from the order of the current shopper
      parameters:
        - name: orderId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: key
          in: path
          description: Unique identifier of the order item.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Determines the update strategy for this update (ApplyAndCommit,
            ApplyToOriginal, ApplyToDraft)
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/fulfillment/actions":
    post:
      tags:
        - Order
      summary: Sets the fulfillment action to "Ship
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order which is ready to be shipped.
          required: true
          schema:
            type: string
      requestBody:
        description:
          Action to perform along with metadata about which packages, digital
          packages, or pickups to perform the action on
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FulfillmentAction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: " To ship an order, the order must have a customer name, the
        \"Open\" or \"OpenAdProcessing\"\r

        status, full shipping address, and shipping method."
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/fulfillment/email/resend":
    post:
      tags:
        - Order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FulfillmentAction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/fulfillmentinfo":
    get:
      tags:
        - Order
      summary: Retrieves an order's fulfillment information specified by order ID
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order.
          required: true
          schema:
            type: string
        - name: draft
          in: query
          description:
            Determines whether the draft version should be retrieved if one
            exists.
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FulfillmentInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/FulfillmentInfo"
            text/plain:
              schema:
                $ref: "#/components/schemas/FulfillmentInfo"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Order
      summary: Modifies an order's fulfillment information
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifier of the order whose fulfillment information you
            want to change.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Allows different update behaviors to impact the original or the
            draft.
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      requestBody:
        description:
          All properties that you want the updated fulfillment information to
          have.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FulfillmentInfo"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FulfillmentInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/FulfillmentInfo"
            text/plain:
              schema:
                $ref: "#/components/schemas/FulfillmentInfo"
      description:
        For example, to update the fulfillment address, estimated delivery
        date, or the merchant's fulfillment cost.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/items":
    get:
      tags:
        - Order
      summary: Retrieves the details of all items in an order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order whose items you want to get.
          required: true
          schema:
            type: string
        - name: draft
          in: query
          description: Gets a draft copy of the order if one is available
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderItemCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderItemCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderItemCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Order
      summary: Adds a product or other item to the cart of the current shopper
      parameters:
        - name: orderId
          in: path
          description: ID of the order to add an item to.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Determines the update strategy for this update (ApplyAndCommit,
            ApplyToOriginal, ApplyToDraft)
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
        - name: skipInventoryCheck
          in: query
          description:
            Determines wheter or not to check inventory on an item when adding
            an item to the order or when placing an order
          schema:
            type: boolean
      requestBody:
        description: "All properties of the new cart item. Required property:
          Product.ProductCode."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeOrderItem"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/items/{orderItemId}":
    get:
      tags:
        - Order
      summary: Retrieves the details of a single order item
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order whose item you want to get.
          required: true
          schema:
            type: string
        - name: orderItemId
          in: path
          description: Unique identifier of the order item whose details you want to get.
          required: true
          schema:
            type: string
        - name: draft
          in: query
          description: Gets a draft copy of the order if one is available
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeOrderItem"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeOrderItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeOrderItem"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Order
      summary: Removes a particular order item from the order of the current shopper
      parameters:
        - name: orderId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: orderItemId
          in: path
          description: Unique identifier of the order item.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Determines the update strategy for this update (ApplyAndCommit,
            ApplyToOriginal, ApplyToDraft)
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/items/{lineId}":
    get:
      tags:
        - Order
      summary: Retrieves the details of a single order item via its line id
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order whose item you want to get.
          required: true
          schema:
            type: string
        - name: lineId
          in: path
          description: Line ID of the order item whose details you want to get.
          required: true
          schema:
            type: integer
            format: int32
        - name: draft
          in: query
          description: Gets a draft copy of the order if one is available
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeOrderItem"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeOrderItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeOrderItem"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/items/{orderItemId}/price/{price}":
    put:
      tags:
        - Order
      summary:
        Updates the quantity of an individual cart item in the order of the
        current shopper
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order item.
          required: true
          schema:
            type: string
        - name: orderItemId
          in: path
          description: Unique identifier of the order item.
          required: true
          schema:
            type: string
        - name: price
          in: path
          description: Price to update the item product to.
          required: true
          schema:
            type: number
            format: double
        - name: updateMode
          in: query
          description:
            Determines the update strategy for this update (ApplyAndCommit,
            ApplyToOriginal, ApplyToDraft)
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: Quantity?
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/items/{orderItemId}/quantity/{quantity}":
    put:
      tags:
        - Order
      summary:
        Updates the quantity of an individual cart item in the order of the
        current shopper
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order item.
          required: true
          schema:
            type: string
        - name: orderItemId
          in: path
          description: Unique identifier of the order item.
          required: true
          schema:
            type: string
        - name: quantity
          in: path
          description: New quantity for the specified order item.
          required: true
          schema:
            type: integer
            format: int32
        - name: updateMode
          in: query
          description:
            Determines the update strategy for this update (ApplyAndCommit,
            ApplyToOriginal, ApplyToDraft)
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/items/{orderItemId}/dutyAmount/{dutyAmount}":
    put:
      tags:
        - Order
      summary:
        Updates the quantity of an individual cart item in the order of the
        current shopper
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order item.
          required: true
          schema:
            type: string
        - name: orderItemId
          in: path
          description: Unique identifier of the order item.
          required: true
          schema:
            type: string
        - name: dutyAmount
          in: path
          description: Duty amount to update the item product to.
          required: true
          schema:
            type: number
            format: double
        - name: updateMode
          in: query
          description:
            Determines the update strategy for this update (ApplyAndCommit,
            ApplyToOriginal, ApplyToDraft)
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: Quantity?
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/items/{orderItemId}/fulfillment":
    put:
      tags:
        - Order
      summary:
        Updates the fullfillment method and/or location of an individual order
        item in the order of the current shopper
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order item.
          required: true
          schema:
            type: string
        - name: orderItemId
          in: path
          description: Unique identifier of the order item.
          required: true
          schema:
            type: string
        - name: updateMode
          in: query
          description:
            Determines the update strategy for this update (ApplyAndCommit,
            ApplyToOriginal, ApplyToDraft)
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      requestBody:
        description: The order item containing fulfilment information to update.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeOrderItem"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/items/{orderItemId}/discounts/{discountId}":
    put:
      tags:
        - Order
      summary: Update a discount on the order item to ignore or unignore it
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the coupon.
          required: true
          schema:
            type: string
        - name: orderItemId
          in: path
          description: Unique identifier of the order item.
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          description: Identifies the discount to be updated.
          required: true
          schema:
            type: integer
            format: int32
        - name: updateMode
          in: query
          description:
            Allows different update behaviors to impact the original or the
            draft.
          schema:
            type: string
        - name: version
          in: query
          description:
            Determines whether or not to check versioning of items for
            concurrency purposes.
          schema:
            type: string
      requestBody:
        description: Discount information to use as the update source.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeAppliedDiscount"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/notes":
    post:
      tags:
        - Order
      summary: Adds a note to the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order to which you want to add a note.
          required: true
          schema:
            type: string
      requestBody:
        description: Text of the note. Maximum 256 characters.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderNote"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderNote"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderNote"
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderNote"
      description: This is an internal note that the merchant might want to add to an order.
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Order
      summary: Retrieves a list of all notes for an order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order whose notes you want to get.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderNote"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderNote"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderNote"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/notes/{noteId}":
    get:
      tags:
        - Order
      summary: Retrieves a specific order note from an order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order whose note you want to get.
          required: true
          schema:
            type: string
        - name: noteId
          in: path
          description: Unique identifier of the note whose text you want to get.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderNote"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderNote"
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderNote"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Order
      summary: Updates a specific order note for an order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order whose note you want to update.
          required: true
          schema:
            type: string
        - name: noteId
          in: path
          description: Unique identifier of the note whose text you want to update.
          required: true
          schema:
            type: string
      requestBody:
        description: Text of the note.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderNote"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderNote"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderNote"
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderNote"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Order
      summary: Deletes a specific order note on an order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order whose note you want to delete.
          required: true
          schema:
            type: string
        - name: noteId
          in: path
          description: Unique identifier of the note whose text you want to delete.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/packages":
    post:
      tags:
        - Order
      summary: Apply a package to the order
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the package.
          required: true
          schema:
            type: string
      requestBody:
        description: Package to create and add to the order
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimePackage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/packages/{packageId}":
    put:
      tags:
        - Order
      summary: Delete an order package
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the package.
          required: true
          schema:
            type: string
        - name: packageId
          in: path
          description: Package to update on the order
          required: true
          schema:
            type: string
      requestBody:
        description: Package content to update on the order
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimePackage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Order
      summary: Delete an order package
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the package.
          required: true
          schema:
            type: string
        - name: packageId
          in: path
          description: Package to remove from the order
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Order
      summary: Get an order package
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the package.
          required: true
          schema:
            type: string
        - name: packageId
          in: path
          description: Package to remove from the order
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
      description: Get an order package
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/packages/{packageId}/label":
    get:
      tags:
        - Order
      summary: Get an order package label
      parameters:
        - name: orderId
          in: path
          description: Unique identifier of the order with which to associate the package.
          required: true
          schema:
            type: string
        - name: packageId
          in: path
          description: Package to remove from the order
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Get an order package label
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/packages/{packageId}/actions":
    get:
      tags:
        - Order
      summary: Retrieves available fulfillment actions
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifier of the order on which to get a list of available
            actions.
          required: true
          schema:
            type: string
        - name: packageId
          in: path
          description: Package ID to get fulfillment actions for.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
            text/plain:
              schema:
                type: array
                items:
                  type: string
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/{orderId}/payments/actions":
    post:
      tags:
        - Order
      summary: Sets the action of the specified payment transaction interaction
      parameters:
        - name: orderId
          in: path
          description:
            Unique identifier of the order whose payment action you want to
            change.
          required: true
          schema:
            type: string
      requestBody:
        description: Action to be performed, along with any metadata.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentAction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description:
        "Available actions depend on the current status of the payment
        transaction. \r

        If in doubt, get a list of available payment actions first."
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/orders/attributedefinition/attributes:
    get:
      tags:
        - OrderAttribute
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttributeCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttributeCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttributeCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - OrderAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/orders/attributedefinition/attributes/{attributeFQN}/VocabularyValues"
  : get:
      tags:
        - OrderAttribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAttributeVocabularyValue"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAttributeVocabularyValue"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAttributeVocabularyValue"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/orders/attributedefinition/attributes/{attributeFQN}":
    get:
      tags:
        - OrderAttribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - OrderAttribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
  /ordervalidationcapability:
    post:
      tags:
        - OrderValidationCapability
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderValidationResult"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderValidationResult"
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderValidationResult"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/quotes/{quoteId}":
    get:
      tags:
        - Quote
      summary: Retrieves the details of a quote specified by the quote ID
      parameters:
        - name: quoteId
          in: path
          description: Unique identifier of the quote whose details you want.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"
            text/json:
              schema:
                $ref: "#/components/schemas/Quote"
            text/plain:
              schema:
                $ref: "#/components/schemas/Quote"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Quote
      summary: Update quote
      parameters:
        - name: quoteId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Quote"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"
            text/json:
              schema:
                $ref: "#/components/schemas/Quote"
            text/plain:
              schema:
                $ref: "#/components/schemas/Quote"
      description: Update quote
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Quote
      summary: Deletes a quote
      parameters:
        - name: quoteId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Deletes a quote
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/quotes:
    get:
      tags:
        - Quote
      summary:
        Retrieves a list of Quotes according to any specified filter criteria
        and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            "Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. \r

            \            For example, with a PageSize of 25, to get
            the 51st through the 75th items, startIndex=3. The default value is
            0. Optional."
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, \r

            \            gt = greater than or equals, lt = less than
            or equals, sw = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: q
          in: query
          description: Text to perform a search on
          schema:
            type: string
        - name: qLimit
          in: query
          description: Limit of the records to include in a search, used for global search
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuoteCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/QuoteCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/QuoteCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Quote
      summary: Create quote
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Quote"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"
            text/json:
              schema:
                $ref: "#/components/schemas/Quote"
            text/plain:
              schema:
                $ref: "#/components/schemas/Quote"
      description: Create quote
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/quotes/customers/{customerAccountId}/{quoteName}":
    get:
      tags:
        - Quote
      summary: Retrieves quote by name
      parameters:
        - name: customerAccountId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: quoteName
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"
            text/json:
              schema:
                $ref: "#/components/schemas/Quote"
            text/plain:
              schema:
                $ref: "#/components/schemas/Quote"
      description: Retrieves quote by name
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/quotes/{quoteId}/items":
    get:
      tags:
        - Quote
      summary: Returns a listing of Quotes
      parameters:
        - name: quoteId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
        - name: filter
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeOrderItem"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeOrderItem"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeOrderItem"
      description: Returns a listing of Quotes
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Quote
      summary: Adds an item to the Quote of the current shopper
      parameters:
        - name: quoteId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeOrderItem"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"
            text/json:
              schema:
                $ref: "#/components/schemas/Quote"
            text/plain:
              schema:
                $ref: "#/components/schemas/Quote"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/quotes/customers/{customerAccountId}/{quoteName}/items":
    get:
      tags:
        - Quote
      summary: Returns a listing of Quotes
      parameters:
        - name: customerAccountId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: quoteName
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
        - name: filter
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeOrderItem"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeOrderItem"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeOrderItem"
      description: Returns a listing of Quotes
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/quotes/{quoteId}/items/{quoteItemId}":
    get:
      tags:
        - Quote
      summary: Retrieves an individual Quote item from a Quote
      parameters:
        - name: quoteId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: quoteItemId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeOrderItem"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeOrderItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeOrderItem"
      description: Retrieves an individual Quote item from a Quote
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Quote
      summary: Update Quote item
      parameters:
        - name: quoteId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: quoteItemId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeOrderItem"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"
            text/json:
              schema:
                $ref: "#/components/schemas/Quote"
            text/plain:
              schema:
                $ref: "#/components/schemas/Quote"
      description: Update Quote item
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Quote
      summary: Delete / remove Quote item
      parameters:
        - name: quoteId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: quoteItemId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Delete / remove Quote item
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/returns:
    get:
      tags:
        - Return
      summary: Provides a paged, collection of returns for a Site
      parameters:
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
        - name: filter
          in: query
          description: ""
          schema:
            type: string
        - name: q
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ReturnCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ReturnCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Return
      summary: Creates a new Return for an order or product list
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Return"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/plain:
              schema:
                $ref: "#/components/schemas/Return"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/returns/email/resend:
    put:
      tags:
        - Return
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnAction"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/returns/reasons:
    get:
      tags:
        - Return
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReasonCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ReasonCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ReasonCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}":
    put:
      tags:
        - Return
      summary: Updates a return
      parameters:
        - name: returnId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Return"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/plain:
              schema:
                $ref: "#/components/schemas/Return"
      description: Updates a return
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Return
      summary: ""
      parameters:
        - name: returnId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Return
      summary: Allows for retrieval for a return given only the return Id
      parameters:
        - name: returnId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/plain:
              schema:
                $ref: "#/components/schemas/Return"
      description: " Further manipulation of that returns must be done off of the order."
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/returns/actions:
    post:
      tags:
        - Return
      summary: Allows for batch processing of Returns easily
      requestBody:
        description:
          A ReturnAction instance that takes the name of the action to be
          performed and a list of Return Ids upon which to perform the action.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnAction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ReturnCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ReturnCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/ship":
    post:
      tags:
        - Return
      summary: Creates a child order for the return for processing replacments
      parameters:
        - name: returnId
          in: path
          description: The ID of the parent return
          required: true
          schema:
            type: string
      requestBody:
        description: Optionally specify which items to include and in what quantities
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ReturnItemSpecifier"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/json:
              schema:
                $ref: "#/components/schemas/Order"
            text/plain:
              schema:
                $ref: "#/components/schemas/Order"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/actions":
    get:
      tags:
        - Return
      summary: ""
      parameters:
        - name: returnId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
            text/plain:
              schema:
                type: array
                items:
                  type: string
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/payments":
    get:
      tags:
        - Return
      summary: ""
      parameters:
        - name: returnId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/PaymentCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/PaymentCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/payments/{paymentId}":
    get:
      tags:
        - Return
      summary: ""
      parameters:
        - name: returnId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
            text/json:
              schema:
                $ref: "#/components/schemas/Payment"
            text/plain:
              schema:
                $ref: "#/components/schemas/Payment"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/payments/actions":
    post:
      tags:
        - Return
      summary: Sets the action of the specified payment transaction interaction
      parameters:
        - name: returnId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description:
          Action to specify. Possible actions can be "Create," "Capture,"
          "Void," "AuthCapture," or "ReceiveCheck."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentAction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/plain:
              schema:
                $ref: "#/components/schemas/Return"
      description:
        "Available actions depend on the current status of the payment
        transaction. \r

        If in doubt, get a list of available payment actions first."
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/payments/{paymentId}/actions":
    post:
      tags:
        - Return
      summary: Sets the action of the specified payment transaction interaction
      parameters:
        - name: returnId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description:
          Action to specify. Possible actions can be "Create," "Capture,"
          "Void," "AuthCapture," or "ReceiveCheck."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentAction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/plain:
              schema:
                $ref: "#/components/schemas/Return"
      description:
        "Available actions depend on the current status of the payment
        transaction. \r

        If in doubt, get a list of available payment actions first."
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Return
      summary:
        Retrieves available payment actions which depends on the status of the
        order's payment transaction
      parameters:
        - name: returnId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
            text/plain:
              schema:
                type: array
                items:
                  type: string
      description: "\r

        Possible actions can be \"AuthorizePayment\", \"RequestCheck\",
        \"CapturePayment\", \"CreditPayment\", \"DeclineCheck\",
        \"VoidPayment\", \"AuthAndCapture\", or \"ReceiveCheck\"."
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/restock":
    post:
      tags:
        - Return
      summary: API to restock return item
      parameters:
        - name: returnId
          in: path
          description: Return ID
          required: true
          schema:
            type: string
      requestBody:
        description: List of return items with quantity to be restocked
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/RestockableReturnItem"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/plain:
              schema:
                $ref: "#/components/schemas/Return"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/shipping/label":
    get:
      tags:
        - Return
      parameters:
        - name: returnId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierServiceGenerateLabelResponse"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierServiceGenerateLabelResponse"
            text/plain:
              schema:
                $ref: "#/components/schemas/CarrierServiceGenerateLabelResponse"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/items":
    get:
      tags:
        - Return
      summary: Retrieves the details of all return items in an order
      parameters:
        - name: returnId
          in: path
          description: Unique identifier of the return whose items you want to get.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnItemCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ReturnItemCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ReturnItemCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Return
      summary: Adds a return item to the return
      parameters:
        - name: returnId
          in: path
          description: ID of the order to add an item to.
          required: true
          schema:
            type: string
      requestBody:
        description: All properties of the new return item.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnItem"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/plain:
              schema:
                $ref: "#/components/schemas/Return"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/items/{returnItemId}":
    get:
      tags:
        - Return
      summary: Retrieves the details of a single return item
      parameters:
        - name: returnId
          in: path
          description: Unique identifier of the return whose item you want to get.
          required: true
          schema:
            type: string
        - name: returnItemId
          in: path
          description: Unique identifier of the return item whose details you want to get.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnItem"
            text/json:
              schema:
                $ref: "#/components/schemas/ReturnItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/ReturnItem"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{orderId}/items/{orderItemId}":
    delete:
      tags:
        - Return
      summary: Removes a particular order item from the order of the current shopper
      parameters:
        - name: returnId
          in: query
          description: ""
          schema:
            type: string
        - name: returnItemId
          in: query
          description: Unique identifier of the order item.
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          schema:
            type: string
        - name: orderItemId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/json:
              schema:
                $ref: "#/components/schemas/Return"
            text/plain:
              schema:
                $ref: "#/components/schemas/Return"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/notes":
    post:
      tags:
        - Return
      summary: Adds a note to the return
      parameters:
        - name: returnId
          in: path
          description: Unique identifier of the return to which you want to add a note.
          required: true
          schema:
            type: string
      requestBody:
        description: Text of the note. Maximum 256 characters.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderNote"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderNote"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderNote"
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderNote"
      description: This is an internal note that the merchant might want to add to a return.
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Return
      summary: Retrieves a list of all notes for a return
      parameters:
        - name: returnId
          in: path
          description: Unique identifier of the return whose notes you want to get.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderNote"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderNote"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderNote"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/notes/{noteId}":
    get:
      tags:
        - Return
      summary: Retrieves a specific note from a return
      parameters:
        - name: returnId
          in: path
          description: Unique identifier of the return whose note you want to get.
          required: true
          schema:
            type: string
        - name: noteId
          in: path
          description: Unique identifier of the note whose text you want to get.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderNote"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderNote"
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderNote"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Return
      summary: Updates a specific note for a return
      parameters:
        - name: returnId
          in: path
          description: Unique identifier of the return whose note you want to update.
          required: true
          schema:
            type: string
        - name: noteId
          in: path
          description: Unique identifier of the note whose text you want to update.
          required: true
          schema:
            type: string
      requestBody:
        description: Text of the note.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderNote"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderNote"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderNote"
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderNote"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Return
      summary: Deletes a specific note on a return
      parameters:
        - name: returnId
          in: path
          description: Unique identifier of the return whose note you want to delete.
          required: true
          schema:
            type: string
        - name: noteId
          in: path
          description: Unique identifier of the note whose text you want to delete.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/packages":
    post:
      tags:
        - Return
      summary: Apply a package to the return
      parameters:
        - name: returnId
          in: path
          description: Unique identifier of the return with which to associate the package.
          required: true
          schema:
            type: string
      requestBody:
        description: Package to create and add to the return
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimePackage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
      description: " package?"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/packages/{packageId}":
    put:
      tags:
        - Return
      summary: Delete an order package
      parameters:
        - name: returnId
          in: path
          description: Unique identifier of the return with which to associate the package.
          required: true
          schema:
            type: string
        - name: packageId
          in: path
          description: Package to update on the return
          required: true
          schema:
            type: string
      requestBody:
        description: Package content to update on the return
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimePackage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Return
      summary: Delete an order package
      parameters:
        - name: returnId
          in: path
          description: Unique identifier of the return with which to associate the package.
          required: true
          schema:
            type: string
        - name: packageId
          in: path
          description: Package to remove from the return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Return
      summary: Get an order package
      parameters:
        - name: returnId
          in: path
          description: Unique identifier of the return with which to associate the package.
          required: true
          schema:
            type: string
        - name: packageId
          in: path
          description: Package to remove from the return
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimePackage"
      description: Get an order package
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/packages/{packageId}/label":
    get:
      tags:
        - Return
      summary: Get an order package
      parameters:
        - name: returnId
          in: path
          description: Unique identifier of the return with which to associate the package.
          required: true
          schema:
            type: string
        - name: packageId
          in: path
          description: Package to remove from the return
          required: true
          schema:
            type: string
        - name: returnAsBase64Png
          in: query
          description: Return as base64 png
          schema:
            type: boolean
      responses:
        "200":
          description: Success
      description: Get an order package
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/shipments":
    post:
      tags:
        - Return
      summary:
        Creates a shipment by grouping together multiple packages into logical
        shipments
      parameters:
        - name: returnId
          in: path
          description: Unique identifier of the order which is ready to be shipped.
          required: true
          schema:
            type: string
      requestBody:
        description: Package ids to use in creating shipments.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimePackage"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimePackage"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimePackage"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/returns/{returnId}/shipments/{shipmentId}":
    delete:
      tags:
        - Return
      summary: Deletes an existing return shipment
      parameters:
        - name: returnId
          in: path
          description: ID of the return
          required: true
          schema:
            type: string
        - name: shipmentId
          in: path
          description: Shipment ID of the return.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Deletes an existing return shipment
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Return
      summary: Allows a shipment to be retrieved for the order
      parameters:
        - name: returnId
          in: path
          description: ID of the return
          required: true
          schema:
            type: string
        - name: shipmentId
          in: path
          description: Shipment ID of the return.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeShipment"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/wishlists:
    get:
      tags:
        - Wishlist
      summary: Retrieves a list of wishlists according to any specified filter
        criteria and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            "Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. \r

            \            For example, with a PageSize of 25, to get
            the 51st through the 75th items, startIndex=3. The default value is
            0. Optional."
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, \r

            \            gt = greater than or equals, lt = less than
            or equals, sw = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: q
          in: query
          description: Text to perform a search on
          schema:
            type: string
        - name: qLimit
          in: query
          description: Limit of the records to include in a search, used for global search
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WishlistCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/WishlistCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/WishlistCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Wishlist
      summary: Create wishlist
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Wishlist"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wishlist"
            text/json:
              schema:
                $ref: "#/components/schemas/Wishlist"
            text/plain:
              schema:
                $ref: "#/components/schemas/Wishlist"
      description: Create wishlist
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/wishlists/{wishlistId}":
    get:
      tags:
        - Wishlist
      summary: Retrieves the details of a wishlist specified by the wishlist ID
      parameters:
        - name: wishlistId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wishlist"
            text/json:
              schema:
                $ref: "#/components/schemas/Wishlist"
            text/plain:
              schema:
                $ref: "#/components/schemas/Wishlist"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Wishlist
      summary: Update Wishlist
      parameters:
        - name: wishlistId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Wishlist"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wishlist"
            text/json:
              schema:
                $ref: "#/components/schemas/Wishlist"
            text/plain:
              schema:
                $ref: "#/components/schemas/Wishlist"
      description: Update Wishlist
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Wishlist
      summary: Deletes a wishlist
      parameters:
        - name: wishlistId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Deletes a wishlist
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/wishlists/customers/{customerAccountId}/{wishlistName}":
    get:
      tags:
        - Wishlist
      summary: Retrieves wishlist by name
      parameters:
        - name: customerAccountId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: wishlistName
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wishlist"
            text/json:
              schema:
                $ref: "#/components/schemas/Wishlist"
            text/plain:
              schema:
                $ref: "#/components/schemas/Wishlist"
      description: Retrieves wishlist by name
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/wishlists/{wishlistId}/items":
    get:
      tags:
        - Wishlist
      summary: Returns a listing of wishlists
      parameters:
        - name: wishlistId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
        - name: filter
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WishlistItemCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/WishlistItemCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/WishlistItemCollection"
      description: Returns a listing of wishlists
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Wishlist
      summary: Clears all items in the wishlist
      parameters:
        - name: wishlistId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wishlist"
            text/json:
              schema:
                $ref: "#/components/schemas/Wishlist"
            text/plain:
              schema:
                $ref: "#/components/schemas/Wishlist"
      description: Clears all items in the wishlist
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Wishlist
      summary: Adds an item to the wishlist of the current shopper
      parameters:
        - name: wishlistId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WishlistItem"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WishlistItem"
            text/json:
              schema:
                $ref: "#/components/schemas/WishlistItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/WishlistItem"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/wishlists/customers/{customerAccountId}/{wishlistName}/items":
    get:
      tags:
        - Wishlist
      summary: Returns a listing of wishlists
      parameters:
        - name: customerAccountId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: wishlistName
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
        - name: filter
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WishlistItemCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/WishlistItemCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/WishlistItemCollection"
      description: Returns a listing of wishlists
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/wishlists/{wishlistId}/items/{wishlistItemId}":
    get:
      tags:
        - Wishlist
      summary: Retrieves an individual wishlist item from a wishlist
      parameters:
        - name: wishlistId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: wishlistItemId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WishlistItem"
            text/json:
              schema:
                $ref: "#/components/schemas/WishlistItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/WishlistItem"
      description: Retrieves an individual wishlist item from a wishlist
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Wishlist
      summary: Update wishlist item
      parameters:
        - name: wishlistId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: wishlistItemId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WishlistItem"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WishlistItem"
            text/json:
              schema:
                $ref: "#/components/schemas/WishlistItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/WishlistItem"
      description: Update wishlist item
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Wishlist
      summary: Delete / remove wishlist item
      parameters:
        - name: wishlistId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: wishlistItemId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Delete / remove wishlist item
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/wishlists/{wishlistId}/items/{wishlistItemId}/{quantity}":
    put:
      tags:
        - Wishlist
      summary: Updates the quantity of an item in the wishlist
      parameters:
        - name: wishlistId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: wishlistItemId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: quantity
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WishlistItem"
            text/json:
              schema:
                $ref: "#/components/schemas/WishlistItem"
            text/plain:
              schema:
                $ref: "#/components/schemas/WishlistItem"
      description: Updates the quantity of an item in the wishlist
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documentlists/files/documents/{documentId}/content":
    get:
      tags:
        - DocumentList
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    head:
      tags:
        - DocumentList
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - DocumentList
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
          application/json:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - DocumentList
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documentlists/{documentListName}/documents/{documentId}/content":
    get:
      tags:
        - DocumentList
      parameters:
        - name: documentListName
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    head:
      tags:
        - DocumentList
      parameters:
        - name: documentListName
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: includeInactive
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - DocumentList
      parameters:
        - name: documentListName
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
          application/json:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - DocumentList
      parameters:
        - name: documentListName
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documentlists/{documentListName}/documents/{documentId}/transform":
    get:
      tags:
        - DocumentList
      parameters:
        - name: documentListName
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: width
          in: query
          schema:
            type: integer
            format: int32
        - name: height
          in: query
          schema:
            type: integer
            format: int32
        - name: max
          in: query
          schema:
            type: integer
            format: int32
        - name: maxWidth
          in: query
          schema:
            type: integer
            format: int32
        - name: maxHeight
          in: query
          schema:
            type: integer
            format: int32
        - name: crop
          in: query
          schema:
            type: string
        - name: quality
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documentlists/files/documentTree/{documentName}/content":
    get:
      tags:
        - DocumentList
      parameters:
        - name: documentName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    head:
      tags:
        - DocumentList
      parameters:
        - name: documentName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - DocumentList
      parameters:
        - name: documentName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
          application/json:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - DocumentList
      parameters:
        - name: documentName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
          application/json:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/content/documentlists/{documentListName}/documentTree/{documentName}/content"
  : get:
      tags:
        - DocumentList
      summary: Retrieves the binary content for a specific Mozu
      parameters:
        - name: documentListName
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: documentName
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ontent.Contracts.Document
      security:
        - bearerAuth: []
          clientOauth2: []
    head:
      tags:
        - DocumentList
      parameters:
        - name: documentListName
          in: path
          required: true
          schema:
            type: string
        - name: documentName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - DocumentList
      summary: Updates a Mozu
      parameters:
        - name: documentListName
          in: path
          description: The Mozu.Content.Contracts.DocumentList in which the document resides
          required: true
          schema:
            type: string
        - name: documentName
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: Binary document content to store must be less than 16M
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
          application/json:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
      responses:
        "200":
          description: Success
      description: ontent.Contracts.Document
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - DocumentList
      summary: Updates a Mozu
      parameters:
        - name: documentListName
          in: path
          description: The Mozu.Content.Contracts.DocumentList in which the document resides
          required: true
          schema:
            type: string
        - name: documentName
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: Binary document content to store must be less than 16M
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
          application/json:
            schema:
              $ref: "#/components/schemas/AppDevHttpRequestMessage"
      responses:
        "200":
          description: Success
      description: ontent.Contracts.Document
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/content/documentlists/{documentListName}/documentTree/{documentName}/transform"
  : get:
      tags:
        - DocumentList
      summary: Retrieves the binary content for a specific Mozu
      parameters:
        - name: documentListName
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: documentName
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: width
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: height
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: max
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: maxWidth
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: maxHeight
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: crop
          in: query
          description: ""
          schema:
            type: string
        - name: quality
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: ontent.Contracts.Document
      security:
        - bearerAuth: []
          clientOauth2: []
  /content/documentlists/files/documents:
    post:
      tags:
        - DocumentList
      requestBody:
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/ContentDocument"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/ContentDocument"
          application/json:
            schema:
              $ref: "#/components/schemas/ContentDocument"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentDocument"
            text/json:
              schema:
                $ref: "#/components/schemas/ContentDocument"
            text/plain:
              schema:
                $ref: "#/components/schemas/ContentDocument"
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - DocumentList
      parameters:
        - name: filter
          in: query
          schema:
            type: string
        - name: sortBy
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentDocumentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ContentDocumentCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ContentDocumentCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documentlists/{documentListName}/documents":
    post:
      tags:
        - DocumentList
      summary: Creates a new Mozu
      parameters:
        - name: documentListName
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: The Mozu.Content.Contracts.Document to Add to the
          Mozu.Content.Contracts.DocumentList
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/Document"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/Document"
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/plain:
              schema:
                $ref: "#/components/schemas/Document"
      description: ontent.Contracts.Document within the specified
        Mozu.Content.Contracts.DocumentList
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - DocumentList
      summary: Retrieves a filtered Mozu
      parameters:
        - name: documentListName
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: filter
          in: query
          description:
            Mozu.Content.Contracts.PropertyType filter expression to match
            against document properties. <seealso
            cref="T:Mozu.Core.FilterParsing.FilterParser" />
          schema:
            type: string
        - name: sortBy
          in: query
          description: Sort expression.  <seealso
            cref="T:Mozu.Core.FilterParsing.SortParser" />
          schema:
            type: string
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          description: First item in the page to return from the total result set
          schema:
            type: integer
            format: int32
        - name: includeInactive
          in: query
          description:
            if this call should include a adocument that isn't active in the
            given preview date
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentCollection"
      description: ontent.Contracts.DocumentCollection of Mozu.Content.Contracts.Document
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documentlists/files/documents/{documentId}":
    get:
      tags:
        - DocumentList
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentDocument"
            text/json:
              schema:
                $ref: "#/components/schemas/ContentDocument"
            text/plain:
              schema:
                $ref: "#/components/schemas/ContentDocument"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - DocumentList
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/ContentDocument"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/ContentDocument"
          application/json:
            schema:
              $ref: "#/components/schemas/ContentDocument"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentDocument"
            text/json:
              schema:
                $ref: "#/components/schemas/ContentDocument"
            text/plain:
              schema:
                $ref: "#/components/schemas/ContentDocument"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - DocumentList
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documentlists/{documentListName}/documents/{documentId}":
    get:
      tags:
        - DocumentList
      summary: Retrieves a specific Mozu
      parameters:
        - name: documentListName
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: includeInactive
          in: query
          description:
            if this call should include a adocument that isn't active in the
            given preview date
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/plain:
              schema:
                $ref: "#/components/schemas/Document"
      description:
        "ontent.Contracts.Document within the specified ContentCollection
        using the specified document ID\r

        with the specified documentId, version, and status."
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - DocumentList
      summary: Updates a Mozu
      parameters:
        - name: documentListName
          in: path
          description: DocumentListName name where the document resides
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: Id of the document to update
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/Document"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/Document"
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/plain:
              schema:
                $ref: "#/components/schemas/Document"
      description: ontent.Contracts.Document
      security:
        - bearerAuth: []
          clientOauth2: []
    patch:
      tags:
        - DocumentList
      parameters:
        - name: documentListName
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/Document"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/Document"
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/plain:
              schema:
                $ref: "#/components/schemas/Document"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - DocumentList
      summary: Deletes a specific Mozu
      parameters:
        - name: documentListName
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ontent.Contracts.Document based on the specified documentId
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documentlists/files/documentTree/{documentName}":
    get:
      tags:
        - DocumentList
      parameters:
        - name: documentName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentDocument"
            text/json:
              schema:
                $ref: "#/components/schemas/ContentDocument"
            text/plain:
              schema:
                $ref: "#/components/schemas/ContentDocument"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documentlists/{documentListName}/documentTree/{documentName}":
    get:
      tags:
        - DocumentList
      summary: Retrieves a specific Mozu
      parameters:
        - name: documentListName
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: documentName
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: includeInactive
          in: query
          description:
            if this call should include a adocument that isn't active in the
            given preview date
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/json:
              schema:
                $ref: "#/components/schemas/Document"
            text/plain:
              schema:
                $ref: "#/components/schemas/Document"
      description:
        "ontent.Contracts.Document within the specified ContentCollection
        using the specified document name, unique within a specific folder\r

        with the specified documentId, version, and status."
      security:
        - bearerAuth: []
          clientOauth2: []
  /content/documentlists:
    post:
      tags:
        - DocumentList
      summary: Creates a new documentList
      requestBody:
        description: DocumentListName
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/DocumentList"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/DocumentList"
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentList"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentList"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentList"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentList"
      description: Creates a new documentList
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - DocumentList
      summary: Retrieve a paged documentListName of all document lists
      parameters:
        - name: pageSize
          in: query
          description: maximum number of items to return
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentListCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentListCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentListCollection"
      description: Retrieve a paged documentListName of all document lists
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documentlists/{documentListName}":
    get:
      tags:
        - DocumentList
      summary: Retrieves a specific documentList by name
      parameters:
        - name: documentListName
          in: path
          description: Name of document documentListName to retrieve
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentList"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentList"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentList"
      description: Retrieves a specific documentList by name
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - DocumentList
      summary: Updates a DocumentListName
      parameters:
        - name: documentListName
          in: path
          description: The name of the documentList to update
          required: true
          schema:
            type: string
      requestBody:
        description: Content Collection values to apply
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/DocumentList"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/DocumentList"
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentList"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentList"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentList"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentList"
      description: Updates a DocumentListName
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - DocumentList
      summary: Deletes the specified DocumentListName
      parameters:
        - name: documentListName
          in: path
          description: Name of content documentListName to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Deletes the specified DocumentListName
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documentlists/{documentListName}/views/{viewName}/documents":
    get:
      tags:
        - DocumentList
      parameters:
        - name: documentListName
          in: path
          required: true
          schema:
            type: string
        - name: viewName
          in: path
          required: true
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: sortBy
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
        - name: includeInactive
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documentlists/{documentListName}/facets/{propertyName}":
    get:
      tags:
        - DocumentList
      summary: Returns a List of Mozu
      parameters:
        - name: documentListName
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: propertyName
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ContentFacet"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ContentFacet"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ContentFacet"
      description:
        ontent.Contracts.Facets for the requested property provided the
        property is aggregatable.  If not, throws an
        Mozu.Core.Exceptions.VaeMissingOrInvalidParameterException
      security:
        - bearerAuth: []
          clientOauth2: []
  /content/documentlistTypes:
    post:
      tags:
        - DocumentListType
      summary: Creates a new documentListType
      requestBody:
        description: ""
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/DocumentListType"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/DocumentListType"
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentListType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentListType"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentListType"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentListType"
      description: Creates a new documentListType
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - DocumentListType
      parameters:
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentListTypeCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentListTypeCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentListTypeCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documentlistTypes/{documentListTypeFQN}":
    put:
      tags:
        - DocumentListType
      summary: Updates a DocumentListType
      parameters:
        - name: documentListTypeFQN
          in: path
          description: The name of the document documentListName to update
          required: true
          schema:
            type: string
      requestBody:
        description: Content Collection values to apply
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/DocumentListType"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/DocumentListType"
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentListType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentListType"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentListType"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentListType"
      description: Updates a DocumentListType
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - DocumentListType
      parameters:
        - name: documentListTypeFQN
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentListType"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentListType"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentListType"
      security:
        - bearerAuth: []
          clientOauth2: []
  /content/documentpublishing/draft:
    get:
      tags:
        - DocumentPublishing
      summary: Retrieve a paged collection of all draft documents
      parameters:
        - name: pageSize
          in: query
          description: maximum number of items to return
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: documentLists
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentDraftSummaryPagedCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentDraftSummaryPagedCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentDraftSummaryPagedCollection"
      description: Retrieve a paged collection of all draft documents
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - DocumentPublishing
      summary: Remove draft of each Mozu
      parameters:
        - name: documentLists
          in: query
          description: ""
          schema:
            type: string
      requestBody:
        description: ""
        content:
          text/plain:
            schema:
              type: array
              items:
                type: string
          application/octet-stream:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Success
      description:
        ontent.Contracts.Document associated with te id in documentIds.
        Send empty body to remove all drafts
      security:
        - bearerAuth: []
          clientOauth2: []
  /content/documentpublishing/active:
    put:
      tags:
        - DocumentPublishing
      summary: Publishes draft of each Mozu
      parameters:
        - name: documentLists
          in: query
          description: ""
          schema:
            type: string
      requestBody:
        description: ""
        content:
          text/plain:
            schema:
              type: array
              items:
                type: string
          application/octet-stream:
            schema:
              type: array
              items:
                type: string
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Success
      description:
        ontent.Contracts.Document associated with the id in documentIds.
        Send empty body to publish all drafts
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/publishsets/{code}/items":
    get:
      tags:
        - DocumentPublishSet
      summary: Retrieve a paged collection of publish set Items
      parameters:
        - name: code
          in: path
          description:
            code of the publish set.  Use UNASSIGNED or ALL to denote those
            special cases
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: maximum number of items to return
          schema:
            type: integer
            format: int32
            default: 100
        - name: startIndex
          in: query
          description: start index
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentDraftSummaryPagedCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentDraftSummaryPagedCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentDraftSummaryPagedCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - DocumentPublishSet
      summary: Adds a set of documents by id to a publish set
      parameters:
        - name: code
          in: path
          description:
            code of the publish set.  Use UNASSIGNED or ALL to denote those
            special cases
          required: true
          schema:
            type: string
      requestBody:
        description: documentId/doclist pairs to add to the publish set
        content:
          text/plain:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/AddOrDeletePublishItem"
          application/octet-stream:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/AddOrDeletePublishItem"
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/AddOrDeletePublishItem"
      responses:
        "200":
          description: Success
      description: Adds a set of documents by id to a publish set
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/publishsets/{code}":
    post:
      tags:
        - DocumentPublishSet
      summary: Adds a set of documents by id to a publish set
      parameters:
        - name: code
          in: path
          description:
            code of the publish set.  Use UNASSIGNED or ALL to denote those
            special cases
          required: true
          schema:
            type: string
        - name: shouldDiscard
          in: query
          description: should trash the drafts in the publish set as well
          schema:
            type: boolean
      responses:
        "200":
          description: Success
      description: Adds a set of documents by id to a publish set
      security:
        - bearerAuth: []
          clientOauth2: []
  /content/publishsets:
    get:
      tags:
        - DocumentPublishSet
      summary: Returns a List of current Publishing sets with counts of drafts in each
      parameters:
        - name: pageSize
          in: query
          description: maximum number of items to return
          schema:
            type: integer
            format: int32
            default: 100
        - name: startIndex
          in: query
          description: start index
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublishSetSummaryPagedCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/PublishSetSummaryPagedCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/PublishSetSummaryPagedCollection"
      description: Returns a List of current Publishing sets with counts of drafts in each
      security:
        - bearerAuth: []
          clientOauth2: []
  /content/documenttypes:
    post:
      tags:
        - DocumentType
      summary: Creates a new DocumentType
      requestBody:
        description: ""
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/DocumentType"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/DocumentType"
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentType"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentType"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentType"
      description: Creates a new DocumentType
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - DocumentType
      summary: Retrieves a paged list of DocumentTypes
      parameters:
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentTypeCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentTypeCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentTypeCollection"
      description: Retrieves a paged list of DocumentTypes
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/documenttypes/{documentTypeName}":
    get:
      tags:
        - DocumentType
      summary: Retrieves a specific DocumentType
      parameters:
        - name: documentTypeName
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentType"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentType"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentType"
      description: Retrieves a specific DocumentType
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - DocumentType
      summary: Updates a DocumentType
      parameters:
        - name: documentTypeName
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/DocumentType"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/DocumentType"
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentType"
            text/json:
              schema:
                $ref: "#/components/schemas/DocumentType"
            text/plain:
              schema:
                $ref: "#/components/schemas/DocumentType"
      description: Updates a DocumentType
      security:
        - bearerAuth: []
          clientOauth2: []
  /content/propertytypes:
    get:
      tags:
        - DocumentPropertyType
      summary: Retrieves a PagedCollection of Mozu
      parameters:
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 10
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PropertyTypeCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/PropertyTypeCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/PropertyTypeCollection"
      description: ontent.Contracts.PropertyTypes
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - DocumentPropertyType
      summary: Creates a new Mozu
      requestBody:
        description: ""
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/PropertyType"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/PropertyType"
          application/json:
            schema:
              $ref: "#/components/schemas/PropertyType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PropertyType"
            text/json:
              schema:
                $ref: "#/components/schemas/PropertyType"
            text/plain:
              schema:
                $ref: "#/components/schemas/PropertyType"
      description: ontent.Contracts.PropertyType
      security:
        - bearerAuth: []
          clientOauth2: []
  "/content/propertytypes/{propertyTypeName}":
    get:
      tags:
        - DocumentPropertyType
      summary: Retrieves a specific Mozu
      parameters:
        - name: propertyTypeName
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PropertyType"
            text/json:
              schema:
                $ref: "#/components/schemas/PropertyType"
            text/plain:
              schema:
                $ref: "#/components/schemas/PropertyType"
      description: ontent.Contracts.PropertyType
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - DocumentPropertyType
      summary: Updates a Mozu
      parameters:
        - name: propertyTypeName
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          text/plain:
            schema:
              $ref: "#/components/schemas/PropertyType"
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/PropertyType"
          application/json:
            schema:
              $ref: "#/components/schemas/PropertyType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PropertyType"
            text/json:
              schema:
                $ref: "#/components/schemas/PropertyType"
            text/plain:
              schema:
                $ref: "#/components/schemas/PropertyType"
      description: ontent.Contracts.PropertyType
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - DocumentPropertyType
      summary: Delete a specific Mozu
      parameters:
        - name: propertyTypeName
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ontent.Contracts.PropertyType
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/accountattributedefinition/attributes:
    get:
      tags:
        - AccountAttributeDefinition
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttributeCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttributeCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttributeCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - AccountAttributeDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/customer/accountattributedefinition/attributes/{attributeFQN}/VocabularyValues"
  : get:
      tags:
        - AccountAttributeDefinition
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAttributeVocabularyValue"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAttributeVocabularyValue"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAttributeVocabularyValue"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accountattributedefinition/attributes/{attributeFQN}":
    get:
      tags:
        - AccountAttributeDefinition
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - AccountAttributeDefinition
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/addressvalidation:
    post:
      tags:
        - AddressValidation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddressValidationRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressValidationResponse"
            text/json:
              schema:
                $ref: "#/components/schemas/AddressValidationResponse"
            text/plain:
              schema:
                $ref: "#/components/schemas/AddressValidationResponse"
      security:
        - bearerAuth: []
          clientOauth2: []
  /addressvalidationcapability:
    post:
      tags:
        - AddressValidationCapability
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeAddress"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAddress"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAddress"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAddress"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/authtickets:
    post:
      tags:
        - StorefrontAuthTicket
      summary: Authenticates a user for a particular site given a set of user
        credentials
      requestBody:
        description: User's email address and password.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerUserAuthInfo"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/authtickets/refresh:
    put:
      tags:
        - StorefrontAuthTicket
      summary: Refreshes a user's authentication
      parameters:
        - name: refreshToken
          in: query
          description: The user's refresh token.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/authtickets/anonymousshopper:
    get:
      tags:
        - StorefrontAuthTicket
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/b2baccounts/{accountId}/attributes":
    get:
      tags:
        - B2BAccount
      summary: Retrieves a list of notes added to an account according to any
        specified filter criteria and sort options
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account whose notes you want to
            retrieve.
          required: true
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
            default: ""
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
            default: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAttributeCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAttributeCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAttributeCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - B2BAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/b2baccounts/{accountId}/attributes/{attributeFQN}":
    get:
      tags:
        - B2BAccount
      summary: Retrieves the contents of a particular attribute attached to a
        specified account
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the b2b account that contains the attribute to
            retrieve.
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: Fully qualified name of the attribute that you want to retrieve.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - B2BAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - B2BAccount
      summary: Modifies an existing attribute for a b2b account
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account whose attribute you want to modify.
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The new content to replace the existing attribute.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/b2baccounts:
    get:
      tags:
        - B2BAccount
      summary:
        Retrieves a list of B2B accounts according to any filter criteria and
        sort options
      parameters:
        - name: startIndex
          in: query
          description:
            "Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.\r

            \            For example, applications can filter on
            UserId to get the single record of the current customer."
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: string
        - name: q
          in: query
          description:
            a quick filter which will search a predefined set of fields for a
            match
          schema:
            type: string
        - name: qLimit
          in: query
          schema:
            type: integer
            format: int32
        - name: responseGroups
          in: query
          description:
            "Used to refine the default information returned from a request. To
            reduce amount of customer account information returned, use the
            valid response groups: Contacts, CustomerAccountNotes, and
            OrderSummary. Optional."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/B2BAccountCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/B2BAccountCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/B2BAccountCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - B2BAccount
      summary: Creates a new B2B account
      requestBody:
        description: Properties of the new B2B account to create.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/B2BAccount"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/B2BAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/B2BAccount"
            text/plain:
              schema:
                $ref: "#/components/schemas/B2BAccount"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/b2baccounts/{accountId}":
    get:
      tags:
        - B2BAccount
      summary: Retrieves the details of a B2B account specified by its unique identifier
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the B2B account whose details you want to
            retrieve.
          required: true
          schema:
            type: integer
            format: int32
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/B2BAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/B2BAccount"
            text/plain:
              schema:
                $ref: "#/components/schemas/B2BAccount"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - B2BAccount
      summary: Modifies an existing B2B account
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the B2B account.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Properties of the B2B account to update.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/B2BAccount"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/B2BAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/B2BAccount"
            text/plain:
              schema:
                $ref: "#/components/schemas/B2BAccount"
      description: Modifies an existing B2B account
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/b2baccounts/{accountId}/user":
    post:
      tags:
        - B2BAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/B2BUserAndAuthInfo"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/B2BUser"
            text/json:
              schema:
                $ref: "#/components/schemas/B2BUser"
            text/plain:
              schema:
                $ref: "#/components/schemas/B2BUser"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/b2baccounts/{accountId}/users":
    get:
      tags:
        - B2BAccount
      summary:
        Retrieves a list of user for a B2B account according to any filter
        criteria and sort options
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          description:
            "Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.\r

            \            For example, applications can filter on
            UserId to get the single record of the current customer."
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: q
          in: query
          description:
            a quick filter which will search a predefined set of fields for a
            match
          schema:
            type: string
        - name: qLimit
          in: query
          description:
            limit on quick filter which will search a predefined set of fields
            for a match
          schema:
            type: integer
            format: int32
        - name: responseGroups
          in: query
          description:
            "Used to refine the default information returned from a request. To
            reduce amount of customer account information returned, use the
            valid response groups: Contacts, CustomerAccountNotes, and
            OrderSummary. Optional."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/B2BUserCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/B2BUserCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/B2BUserCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/b2baccounts/{accountId}/user/{userId}":
    put:
      tags:
        - B2BAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/B2BUser"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/B2BUser"
            text/json:
              schema:
                $ref: "#/components/schemas/B2BUser"
            text/plain:
              schema:
                $ref: "#/components/schemas/B2BUser"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/b2baccounts/{accountId}/user/{userId}/remove":
    put:
      tags:
        - B2BAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/b2baccounts/{accountId}/user/{userId}/roles":
    get:
      tags:
        - B2BAccount
      summary: Retrieves all the roles for a specified user of a b2b account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: path
          description: Unique identifier of the user.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerUserRoleCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerUserRoleCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerUserRoleCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/b2baccounts/{accountId}/user/{userId}/roles/{roleId}":
    post:
      tags:
        - B2BAccount
      summary: Adds a role to the specified User
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: path
          description: Unique identifier of the user who receives the role.
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          description: Unique identifier of the role to add.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - B2BAccount
      summary: Removes a role from the specified user
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: path
          description: Unique identifier of the user with the role to delete.
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          description: Unique identifer of the role to delete.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/credits/{code}/auditentries":
    get:
      tags:
        - Credit
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditAuditEntryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CreditAuditEntryCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CreditAuditEntryCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/credits:
    get:
      tags:
        - Credit
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CreditCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CreditCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Credit
      summary: Creates a new customer account
      parameters:
        - name: userId
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credit"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
            text/json:
              schema:
                $ref: "#/components/schemas/Credit"
            text/plain:
              schema:
                $ref: "#/components/schemas/Credit"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/credits/{code}":
    get:
      tags:
        - Credit
      summary: Get credit
      parameters:
        - name: code
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
            text/json:
              schema:
                $ref: "#/components/schemas/Credit"
            text/plain:
              schema:
                $ref: "#/components/schemas/Credit"
      description: Get credit
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Credit
      summary: Modifies an existing credit item
      parameters:
        - name: code
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credit"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
            text/json:
              schema:
                $ref: "#/components/schemas/Credit"
            text/plain:
              schema:
                $ref: "#/components/schemas/Credit"
      description: Modifies an existing credit item
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Credit
      summary: Delete credit
      parameters:
        - name: code
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Delete credit
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/credits/{code}/associate-to-shopper":
    put:
      tags:
        - Credit
      summary: Allows a shopper to associate a credit to themselves
      parameters:
        - name: code
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credit"
            text/json:
              schema:
                $ref: "#/components/schemas/Credit"
            text/plain:
              schema:
                $ref: "#/components/schemas/Credit"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/credits/{code}/Resend-Email":
    put:
      tags:
        - Credit
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/credits/{code}/transactions":
    get:
      tags:
        - Credit
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditTransactionCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CreditTransactionCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CreditTransactionCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Credit
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreditTransaction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditTransaction"
            text/json:
              schema:
                $ref: "#/components/schemas/CreditTransaction"
            text/plain:
              schema:
                $ref: "#/components/schemas/CreditTransaction"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/attributes":
    get:
      tags:
        - CustomerAccount
      summary: Retrieves a list of notes added to an account according to any
        specified filter criteria and sort options
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account whose notes you want to
            retrieve.
          required: true
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
            default: ""
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
            default: ""
        - name: userId
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAttributeCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAttributeCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAttributeCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CustomerAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/attributes/{attributeFQN}":
    get:
      tags:
        - CustomerAccount
      summary: Retrieves the contents of a particular attribute attached to a
        specified account
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the account that contains the attribute to
            retrieve.
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: Fully qualified name of the attribute that you want to retrieve.
          required: true
          schema:
            type: string
        - name: userId
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - CustomerAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CustomerAccount
      summary: Modifies an existing attribute for an account
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account whose attribute you want to modify.
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: query
          schema:
            type: string
      requestBody:
        description: The new content to replace the existing attribute.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAttribute"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/cards":
    get:
      tags:
        - CustomerAccount
      summary: "Retrieves a list of cards for the specified customer account "
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CardCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CardCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CustomerAccount
      summary: Creates a card on the specific customer account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Card"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Card"
            text/json:
              schema:
                $ref: "#/components/schemas/Card"
            text/plain:
              schema:
                $ref: "#/components/schemas/Card"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/cards/{cardId}":
    get:
      tags:
        - CustomerAccount
      summary: Retrieves a card for the specified customer account and card ID
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: cardId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Card"
            text/json:
              schema:
                $ref: "#/components/schemas/Card"
            text/plain:
              schema:
                $ref: "#/components/schemas/Card"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CustomerAccount
      summary: Updates a card on the specific customer account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: cardId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Card"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Card"
            text/json:
              schema:
                $ref: "#/components/schemas/Card"
            text/plain:
              schema:
                $ref: "#/components/schemas/Card"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - CustomerAccount
      summary: Removes a card from the specified customer account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: cardId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/contacts":
    get:
      tags:
        - CustomerAccount
      summary:
        Retrieves a list of contacts for a customer according to any specified
        filter criteria and sort options
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account whose CustomerContact
            information you want to retrieve.
          required: true
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: userId
          in: query
          description:
            If provided, the primary markings on the contacts will be based on
            the user's preferred primary overrides
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerContactCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerContactCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerContactCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CustomerAccount
      summary:
        Creates a new CustomerContact for a customer account, for example, a
        new shipping address
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account to contain the new
            CustomerContact.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description:
          "Properties of the new CustomerContact. Required properties:
          CustomerContact.Email, ContactType."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerContact"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerContact"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerContact"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerContact"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CustomerAccount
      summary: Creates a new CustomerContacts for a customer account in bulk to
        support adding multiple contacts in a multi-ship scenario
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account to contain the new
            CustomerContact.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: "List of CustomerContact objects : Properties of each new
          CustomerContact. Required properties: CustomerContact.Email,
          ContactType."
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CustomerContact"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerContactCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerContactCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerContactCollection"
      description:
        Creates a new CustomerContacts for a customer account in bulk to
        support adding multiple contacts in a multi-ship scenario
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/contacts/{contactId}":
    get:
      tags:
        - CustomerAccount
      summary:
        Retrieves the specified CustomerContact for a customer account, for
        example, a billing or shipping CustomerContact
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account whose CustomerContact
            information you want to retrieve.
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description:
            Unique identifier of the CustomerContact whose details you want to
            retrieve.
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: query
          description:
            If provided, the primary markings on the contact will be based on
            the user's preferred primary overrides
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerContact"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerContact"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerContact"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CustomerAccount
      summary:
        Updates a CustomerContact for a specified customer account, for example
        to update addresses or change which CustomerContact is the primary
        CustomerContact for billing
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account whose CustomerContact
            information you want to update.
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: query
          description:
            If provided, the primary markings on the contact will be stored as
            the user's preferred primary override
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerContact"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerContact"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerContact"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerContact"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - CustomerAccount
      summary: Deletes a CustomerContact for the specified customer account
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account whose CustomerContact you
            want to delete.
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/accounts:
    get:
      tags:
        - CustomerAccount
      summary:
        Retrieves a list of customer accounts according to any filter criteria
        and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            "Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.\r

            \            \r

            \            For example, applications can filter on
            UserId to get the single record of the current customer."
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            We added this test to demo new publishing @test@. Used to page
            results from a query. Indicates the maximum number of entities to
            return from a query. The default value is 20 and the maximum value
            is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: fields
          in: query
          schema:
            type: string
        - name: q
          in: query
          description:
            a quick filter which will search a predefined set of fields for a
            match
          schema:
            type: string
        - name: qLimit
          in: query
          schema:
            type: integer
            format: int32
        - name: isAnonymous
          in: query
          schema:
            type: boolean
        - name: responseGroups
          in: query
          description:
            "Used to refine the default information returned from a request. To
            reduce amount of customer account information returned, use the
            valid response groups: Contacts, CustomerAccountNotes, and
            OrderSummary. Optional."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAccountCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAccountCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAccountCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CustomerAccount
      summary: Creates a new customer account
      requestBody:
        description: Properties of the new customer account to create.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerAccount"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAccount"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAccount"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}":
    get:
      tags:
        - CustomerAccount
      summary:
        Retrieves the details of a customer account specified by its unique
        identifier
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account whose details you want to
            retrieve.
          required: true
          schema:
            type: integer
            format: int32
        - name: responseGroups
          in: query
          schema:
            type: string
        - name: userId
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAccount"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAccount"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CustomerAccount
      summary: Modifies an existing customer account, for example, to change the
        primary billing contact or change whether to accept marketing material
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the customer account.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Properties of the customer account to update.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerAccount"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAccount"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAccount"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - CustomerAccount
      summary: Deletes a customer account
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the customer account to delete.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description:
        A customer account cannot be deleted if any orders exist, past or
        present.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/transactions":
    get:
      tags:
        - CustomerAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CustomerAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Transaction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
            text/json:
              schema:
                $ref: "#/components/schemas/Transaction"
            text/plain:
              schema:
                $ref: "#/components/schemas/Transaction"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/transactions/{transactionId}":
    delete:
      tags:
        - CustomerAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/recomputelifetimevalue":
    post:
      tags:
        - CustomerAccount
      summary: Triggers event to recompute customer lifetime value
      parameters:
        - name: accountId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: " The lifetime value may not immediately be recalculated, but
        enters a queue."
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/notes":
    get:
      tags:
        - CustomerAccount
      summary:
        Retrieves a list of notes added to a customer account according to any
        specified filter criteria and sort options
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account whose notes you want to
            retrieve.
          required: true
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
            default: ""
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
            default: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerNoteCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerNoteCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerNoteCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CustomerAccount
      summary: Adds a new note to the specified customer account
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account for which to create the
            note.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contents of the new note.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerNote"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerNote"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerNote"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerNote"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/notes/{noteId}":
    get:
      tags:
        - CustomerAccount
      summary:
        Retrieves the contents of a particular note attached to a specified
        customer account
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account that contains the note to
            retrieve.
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: Unique identifier of a particular note that you want to retrieve.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerNote"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerNote"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerNote"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CustomerAccount
      summary: Modifies an existing note for a customer account
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account whose note you want to
            modify.
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: Unique identifier of the note to update.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: The new content to replace the existing note.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerNote"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerNote"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerNote"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerNote"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - CustomerAccount
      summary: Removes a note from the specified customer account
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the customer account that contains the note
            you want to delete.
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: Unique identifier of the note to delete.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/segments":
    get:
      tags:
        - CustomerAccount
      summary:
        Retrieves a list of segments for the specified account according to any
        specified filter criteria and sort options
      parameters:
        - name: accountId
          in: path
          description:
            Unique identifier of the account for which you want the list of
            groups.
          required: true
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          description:
            "The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order. \r

            \            Optional."
          schema:
            type: string
            default: ""
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
            default: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerSegmentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerSegmentCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerSegmentCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/AuditLog/Entries":
    get:
      tags:
        - CustomerAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAuditEntryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAuditEntryCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAuditEntryCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/purchaseOrderAccount":
    get:
      tags:
        - CustomerAccount
      summary: Gets a customer's purchase order account
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerPurchaseOrderAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerPurchaseOrderAccount"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerPurchaseOrderAccount"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CustomerAccount
      summary: Creates a customer's purchase order account
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerPurchaseOrderAccount"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerPurchaseOrderAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerPurchaseOrderAccount"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerPurchaseOrderAccount"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CustomerAccount
      summary: Updates a customer's purchase order account
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerPurchaseOrderAccount"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerPurchaseOrderAccount"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerPurchaseOrderAccount"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerPurchaseOrderAccount"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/internal/{accountId}/purchaseOrderAccount":
    delete:
      tags:
        - CustomerAccount
      summary: Updates a customer's purchase order account
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the account.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/PurchaseOrderTransaction":
    post:
      tags:
        - CustomerAccount
      summary: Creates a purchase order transaction log (for public api use)
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the customer account.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: transaction log that needs to be created
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PurchaseOrderTransaction"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrderTransaction"
            text/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrderTransaction"
            text/plain:
              schema:
                $ref: "#/components/schemas/PurchaseOrderTransaction"
      description: Creates a purchase order transaction log (for public api use)
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - CustomerAccount
      summary:
        Gets a collection of Purchase order transaction logs associated with a
        customer account id
      parameters:
        - name: accountId
          in: path
          description: Customer Account Id for which transaction logs need to be retreived
          required: true
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          description:
            "Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. \r

            \            For example, with a PageSize of 25, to get
            the 51st through the 75th items, startIndex=3. The default value is
            0. Optional."
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: "Used to page results from a query. \r

            \            Indicates the maximum number of entities to
            return from a query. The default value is 20 and the maximum value
            is 200. Optional."
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
            default: ""
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrderTransactionCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/PurchaseOrderTransactionCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/PurchaseOrderTransactionCollection"
      description:
        Gets a collection of Purchase order transaction logs associated
        with a customer account id
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/accounts/purchaseOrderAccounts:
    post:
      tags:
        - CustomerAccount
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          schema:
            type: string
            default: ""
        - name: accountType
          in: query
          schema:
            type: string
            default: B2C
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerPurchaseOrderAccountCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerPurchaseOrderAccountCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerPurchaseOrderAccountCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/accounts/loginstatebyusername:
    post:
      tags:
        - CustomerAccount
      summary: Retrieves the log-in status details of a shopper specified by userName
      parameters:
        - name: userName
          in: query
          description: Unique userName of the customer whose details you want to view.
          schema:
            type: string
        - name: customerSetCode
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginState"
            text/json:
              schema:
                $ref: "#/components/schemas/LoginState"
            text/plain:
              schema:
                $ref: "#/components/schemas/LoginState"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/accounts/loginstatebyemailaddress:
    post:
      tags:
        - CustomerAccount
      summary: Retrieves the log-in status details of a shopper specified by emailAdress
      parameters:
        - name: emailAddress
          in: query
          schema:
            type: string
        - name: customerSetCode
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginState"
            text/json:
              schema:
                $ref: "#/components/schemas/LoginState"
            text/plain:
              schema:
                $ref: "#/components/schemas/LoginState"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/loginstate":
    get:
      tags:
        - CustomerAccount
      summary: Retrieves the log-in status details of a shopper specified by emailAdress
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: query
          description: EmailAddress of the customer whose details you want to view.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginState"
            text/json:
              schema:
                $ref: "#/components/schemas/LoginState"
            text/plain:
              schema:
                $ref: "#/components/schemas/LoginState"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/Change-Password":
    post:
      tags:
        - CustomerAccount
      summary: Changes a shopper's password
      parameters:
        - name: accountId
          in: path
          description: Unique identifier of the shopper for whom to change the password.
          required: true
          schema:
            type: integer
            format: int32
        - name: unlockAccount
          in: query
          description:
            inidicates that the account should be unlocked on a successful
            password change.
          schema:
            type: boolean
            default: false
        - name: userId
          in: query
          schema:
            type: string
      requestBody:
        description: Old password and new password.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerPasswordInfo"
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/accounts/Change-Passwords:
    post:
      tags:
        - CustomerAccount
      summary: Changes a collection of shopper passwords
      requestBody:
        description: The collection of AccountPasswordInfo which are to be processed
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountPasswordInfoCollection"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangePasswordResultCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ChangePasswordResultCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ChangePasswordResultCollection"
      description: Changes a collection of shopper passwords
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/accounts/Reset-Password:
    post:
      tags:
        - CustomerAccount
      summary: Resets the password for a shopper specified by username or emailAddress
      requestBody:
        description: Username or EmailAddress of the shopper who has requested a
          password reset.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerResetPasswordInfo"
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/Create-Login":
    post:
      tags:
        - CustomerAccount
      summary: Creates a login for an existing customer and logs them in automatically
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerLoginInfo"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/accounts/Add-Account-And-Login:
    post:
      tags:
        - CustomerAccount
      summary: Creates a new customer account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerAccountAndAuthInfo"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAuthTicket"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/Set-Login-Locked":
    post:
      tags:
        - CustomerAccount
      summary: Sets a flag indicating whether the customers login is locked or unlocked
      parameters:
        - name: accountId
          in: path
          description: The customer account id to operate on.
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: query
          schema:
            type: string
      requestBody:
        description: True for locking the login. False for unlocking the login (default).
        content:
          application/json:
            schema:
              type: boolean
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/accounts/{accountId}/Set-Password-Change-Required":
    post:
      tags:
        - CustomerAccount
      summary:
        Sets a flag indicating whether the customers must change their password
        before logging in again
      parameters:
        - name: accountId
          in: path
          description: The customer account id to operate on.
          required: true
          schema:
            type: integer
            format: int32
        - name: userId
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/accounts/Bulk:
    post:
      tags:
        - CustomerAccount
      summary: Creates multiple new shopper accounts for a specified site
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/CustomerAccountAndAuthInfo"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerAccountCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerAccountCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerAccountCollection"
      description: Allows you to create a number of new shopper accounts at one time.
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/attributedefinition/attributes:
    get:
      tags:
        - CustomerAttributeDefinition
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttributeCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttributeCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttributeCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CustomerAttributeDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/customer/attributedefinition/attributes/{attributeFQN}/VocabularyValues"
  : get:
      tags:
        - CustomerAttributeDefinition
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAttributeVocabularyValue"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAttributeVocabularyValue"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAttributeVocabularyValue"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/attributedefinition/attributes/{attributeFQN}":
    get:
      tags:
        - CustomerAttributeDefinition
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CustomerAttributeDefinition
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/segments:
    get:
      tags:
        - CustomerSegment
      summary:
        Retrieves a list of all segments defined for the site according to any
        specified filter criteria and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            "Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. \r

            \            For example, with a PageSize of 25, to get
            the 51st through the 75th items, startIndex=3. The default value is
            0. Optional."
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: "Used to page results from a query. \r

            \            Indicates the maximum number of entities to
            return from a query. The default value is 20 and the maximum value
            is 200. Optional."
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
            default: ""
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
            default: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerSegmentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerSegmentCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerSegmentCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CustomerSegment
      summary: Creates a new segment
      requestBody:
        description: Name of the customer segment to create.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerCustomerSegment"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerCustomerSegment"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerCustomerSegment"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerCustomerSegment"
      description: "Merchants create segments of customers, for example, \r

        to offer discounts to particular groups or assign VIP status to
        a set of customers."
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/segments/{id}":
    get:
      tags:
        - CustomerSegment
      summary: Retrieves the name of a customer group specified the customer group ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerCustomerSegment"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerCustomerSegment"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerCustomerSegment"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CustomerSegment
      summary: Update the code, name, or description of an existing segment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerCustomerSegment"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerCustomerSegment"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerCustomerSegment"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerCustomerSegment"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - CustomerSegment
      summary: Deletes a segement specified by its unique code
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: Note that the group is deleted in all accounts that contain this segment.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/segments/{id}/accounts":
    post:
      tags:
        - CustomerSegment
      summary: Adds segments to an account
      parameters:
        - name: id
          in: path
          description: Unique identifer of the segment.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Unique identifiers of the accounts.
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/segments/{id}/accounts/{accountId}":
    delete:
      tags:
        - CustomerSegment
      summary: Removes single account from a segment
      parameters:
        - name: id
          in: path
          description: Unique identifer of the segment.
          required: true
          schema:
            type: integer
            format: int32
        - name: accountId
          in: path
          description: Unique identifiers of the account.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/customerSets:
    get:
      tags:
        - CustomerSet
      summary:
        Retrieves a list of all customerSets defined for the site according to
        any specified filter criteria and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            "Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. \r

            \            For example, with a PageSize of 25, to get
            the 51st through the 75th items, startIndex=3. The default value is
            0. Optional."
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: "Used to page results from a query. \r

            \            Indicates the maximum number of entities to
            return from a query. The default value is 20 and the maximum value
            is 200. Optional."
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
            default: ""
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerSetCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerSetCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerSetCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/customerSets/{code}":
    get:
      tags:
        - CustomerSet
      summary: Retrieves the name of a customer group specified the customer group ID
      parameters:
        - name: code
          in: path
          description: Unique identifier of a customer group.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerSet"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerSet"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerSet"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/customer/visits:
    post:
      tags:
        - CustomerVisit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Visit"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Visit"
            text/json:
              schema:
                $ref: "#/components/schemas/Visit"
            text/plain:
              schema:
                $ref: "#/components/schemas/Visit"
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - CustomerVisit
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VisitCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/VisitCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/VisitCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/customer/visits/{visitId}":
    put:
      tags:
        - CustomerVisit
      parameters:
        - name: visitId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Visit"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Visit"
            text/json:
              schema:
                $ref: "#/components/schemas/Visit"
            text/plain:
              schema:
                $ref: "#/components/schemas/Visit"
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - CustomerVisit
      parameters:
        - name: visitId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Visit"
            text/json:
              schema:
                $ref: "#/components/schemas/Visit"
            text/plain:
              schema:
                $ref: "#/components/schemas/Visit"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/instocknotifications:
    get:
      tags:
        - InStockNotificationSubscription
      summary:
        Retrieves a list of inventory back in stock notification subscriptions
        according to any filter criteria and sort options
      parameters:
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
        - name: filter
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InStockNotificationSubscriptionCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/InStockNotificationSubscriptionCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/InStockNotificationSubscriptionCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - InStockNotificationSubscription
      summary: Creates a new notification subscription
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InStockNotificationSubscription"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InStockNotificationSubscription"
            text/json:
              schema:
                $ref: "#/components/schemas/InStockNotificationSubscription"
            text/plain:
              schema:
                $ref: "#/components/schemas/InStockNotificationSubscription"
      description: Creates a new notification subscription
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/instocknotifications/{id}":
    get:
      tags:
        - InStockNotificationSubscription
      summary: Retrieves the details of an inventory back in stock notification
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InStockNotificationSubscription"
            text/json:
              schema:
                $ref: "#/components/schemas/InStockNotificationSubscription"
            text/plain:
              schema:
                $ref: "#/components/schemas/InStockNotificationSubscription"
      description: Retrieves the details of an inventory back in stock notification
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - InStockNotificationSubscription
      summary: Deletes an in stock notification subscription
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: Deletes an in stock notification subscription
      security:
        - bearerAuth: []
          clientOauth2: []
  /event/pull:
    get:
      tags:
        - Event
      summary:
        Retrieves a list of events according to any specified filter criteria
        and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/EventCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/EventCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/event/pull/{eventId}":
    get:
      tags:
        - Event
      summary: Retrieves the details of a single event
      parameters:
        - name: eventId
          in: path
          description: Unique identifier of the event. System-supplied and read-only.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventEvent"
            text/json:
              schema:
                $ref: "#/components/schemas/EventEvent"
            text/plain:
              schema:
                $ref: "#/components/schemas/EventEvent"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/event/push/subscriptions/{subscriptionId}/deliveryattempts":
    get:
      tags:
        - Subscription
      summary: Get delivery attempts
      parameters:
        - name: subscriptionId
          in: path
          description: Subscription Identifier.
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDeliverySummaryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/EventDeliverySummaryCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/EventDeliverySummaryCollection"
      description: Get delivery attempts
      security:
        - bearerAuth: []
          clientOauth2: []
  "/event/push/subscriptions/{subscriptionId}/deliveryattempts/{id}":
    get:
      tags:
        - Subscription
      summary: Get delivery attempt summary
      parameters:
        - name: subscriptionId
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: processId
          in: query
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDeliverySummary"
            text/json:
              schema:
                $ref: "#/components/schemas/EventDeliverySummary"
            text/plain:
              schema:
                $ref: "#/components/schemas/EventDeliverySummary"
      description: Get delivery attempt summary
      security:
        - bearerAuth: []
          clientOauth2: []
  /event/push/subscriptions:
    get:
      tags:
        - Subscription
      summary:
        Retrieves a list of events according to any specified filter criteria
        and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: responseGroups
          in: query
          description:
            "Used to get more specific information from the request.  Available
            response groups: SubscribingSites."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SubscriptionCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/SubscriptionCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/fulfillment/shipping/manifests:
    get:
      tags:
        - manifest-controller
      summary: getManifests
      parameters:
        - name: fromDays
          in: query
          description: fromDays
          schema:
            type: integer
            format: int32
        - name: fulfillmentLocationCode
          in: query
          description: fulfillmentLocationCode
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/CollectionModelOfManifest"
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfManifest"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfManifest"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getManifests
    post:
      tags:
        - manifest-controller
      summary: createManifest
      parameters:
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: manifestRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManifestRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfManifest"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfManifest"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfManifest"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: manifestRequestDto
      description: createManifest
  /commerce/fulfillment/shipping/manifests/eligibleShipments:
    get:
      tags:
        - manifest-controller
      summary: getEligibleShipments
      parameters:
        - name: carrier
          in: query
          description: carrier
          required: true
          schema:
            type: string
        - name: fromDays
          in: query
          description: fromDays
          schema:
            type: integer
            format: int32
        - name: fulfillmentLocationCode
          in: query
          description: fulfillmentLocationCode
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/CollectionModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfShipment"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getEligibleShipments
  "/commerce/fulfillment/shipping/manifests/{manifestId}":
    get:
      tags:
        - manifest-controller
      summary: getManifest
      parameters:
        - name: manifestId
          in: path
          description: manifestId
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfManifest"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfManifest"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfManifest"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getManifest
  "/commerce/fulfillment/shipping/notifications/{carrier}":
    post:
      tags:
        - shipping-notification-controller
      summary: handleCarrierNotification
      parameters:
        - name: carrier
          in: path
          description: carrier
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - paramMap
              properties:
                paramMap:
                  description: paramMap
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: handleCarrierNotification
  /commerce/fulfillment/storefront/shipments:
    get:
      tags:
        - storefront-controller
      summary: getShipments
      parameters:
        - name: filter
          in: query
          schema:
            type: string
        - name: isLate
          in: query
          schema:
            type: boolean
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: quickSearch
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: workflowTaskName
          in: query
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelOfEntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/PagedModelOfEntityModelOfShipment"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getShipments
  "/commerce/fulfillment/storefront/shipments/{shipmentNumber}":
    get:
      tags:
        - storefront-controller
      summary: getShipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getShipment
  /commerce/pickwaves:
    post:
      tags:
        - pick-wave-controller
      summary: createPickWave
      parameters:
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: createPickWaveDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePickWave"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfPickWave"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfPickWave"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfPickWave"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: createPickWaveDto
      description: createPickWave
  "/commerce/pickwaves/open/{fulfillmentLocationCode}":
    get:
      tags:
        - pick-wave-controller
      summary: getOpenPickWaves
      parameters:
        - name: fulfillmentLocationCode
          in: path
          description: fulfillmentLocationCode
          required: true
          schema:
            type: string
        - name: shipmentType
          in: query
          description: shipmentType
          schema:
            type: string
        - name: userDisplayName
          in: query
          description: userDisplayName
          schema:
            type: string
        - name: userId
          in: query
          description: userId
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/CollectionModelOfPickWave"
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfPickWave"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfPickWave"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getOpenPickWaves
  "/commerce/pickwaves/{pickWaveNumber}":
    get:
      tags:
        - pick-wave-controller
      summary: getPickWave
      parameters:
        - name: pickWaveNumber
          in: path
          description: pickWaveNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfPickWave"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfPickWave"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfPickWave"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getPickWave
  "/commerce/pickwaves/{pickWaveNumber}/closed":
    put:
      tags:
        - pick-wave-controller
      summary: closePickWave
      parameters:
        - name: pickWaveNumber
          in: path
          description: pickWaveNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: closePickWaveDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClosePickWave"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfPickWave"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfPickWave"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfPickWave"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: closePickWaveDto
      description: closePickWave
  "/commerce/pickwaves/{pickWaveNumber}/shipments":
    get:
      tags:
        - pick-wave-controller
      summary: getShipmentsInPickWave
      parameters:
        - name: pickWaveNumber
          in: path
          description: pickWaveNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/CollectionModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfShipment"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getShipmentsInPickWave
  "/commerce/processes/definitionImage/{containerIdOrAlias}/{processId}":
    get:
      tags:
        - workflow-process-controller
      summary: getDefinitionImage
      parameters:
        - name: containerIdOrAlias
          in: path
          description: containerIdOrAlias
          required: true
          schema:
            type: string
        - name: processId
          in: path
          description: processId
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: string
            application/svg+xml:
              schema:
                type: string
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getDefinitionImage
  /commerce/processes/definitions:
    get:
      tags:
        - workflow-process-controller
      summary: getWorkflowProcesses
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/PagedModelOfEntityModelOfWorkflowProcess"
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelOfEntityModelOfWorkflowProcess"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/PagedModelOfEntityModelOfWorkflowProcess"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getWorkflowProcesses
  "/commerce/processes/definitions/{containerIdOrAlias}/{processId}":
    get:
      tags:
        - workflow-process-controller
      summary: getWorkflowProcess
      parameters:
        - name: containerIdOrAlias
          in: path
          description: containerIdOrAlias
          required: true
          schema:
            type: string
        - name: processId
          in: path
          description: processId
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfWorkflowProcess"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfWorkflowProcess"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfWorkflowProcess"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getWorkflowProcess
  "/commerce/processes/shipmentType/{shipmentType}":
    get:
      tags:
        - workflow-process-controller
      summary: getWorkflowProcessByShipmentType
      parameters:
        - name: shipmentType
          in: path
          description: shipmentType
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfWorkflowProcess"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfWorkflowProcess"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfWorkflowProcess"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: true
      description: getWorkflowProcessByShipmentType
  "/commerce/processes/shipmentType/{shipmentType}/location/{locationCode}":
    get:
      tags:
        - workflow-process-controller
      summary: getWorkflowProcessByShipmentTypeLocationCode
      parameters:
        - name: locationCode
          in: path
          description: locationCode
          required: true
          schema:
            type: string
        - name: shipmentType
          in: path
          description: shipmentType
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfWorkflowProcess"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfWorkflowProcess"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfWorkflowProcess"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getWorkflowProcessByShipmentTypeLocationCode
  ? "/commerce/processes/shipmentType/{shipmentType}/locationGroup/{locationGroupCode}"
  : get:
      tags:
        - workflow-process-controller
      summary: getWorkflowProcessByShipmentTypeLocationGroupCode
      parameters:
        - name: locationGroupCode
          in: path
          description: locationGroupCode
          required: true
          schema:
            type: string
        - name: shipmentType
          in: path
          description: shipmentType
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfWorkflowProcess"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfWorkflowProcess"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfWorkflowProcess"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getWorkflowProcessByShipmentTypeLocationGroupCode
  /commerce/shipments:
    get:
      tags:
        - shipment-controller
      summary: getShipments
      parameters:
        - name: filter
          in: query
          schema:
            type: string
        - name: isLate
          in: query
          schema:
            type: boolean
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: quickSearch
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
        - name: workflowTaskName
          in: query
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/PagedModelOfEntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelOfEntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/PagedModelOfEntityModelOfShipment"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getShipments
    post:
      tags:
        - shipment-controller
      summary: newShipment
      parameters:
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: newShipment
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileShipment"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: newShipment
      description: newShipment
  /commerce/shipments/bulk:
    post:
      tags:
        - shipment-controller
      summary: newShipments
      parameters:
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: newShipments
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileShipment"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/CollectionModelOfEntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfEntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfEntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: newShipments
      description: newShipments
  /commerce/shipments/countsByStep:
    get:
      tags:
        - shipment-controller
      summary: getShipmentStepCountByShipmentType
      parameters:
        - name: assignedLocations
          in: query
          description: assignedLocations
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: shipmentType
          in: query
          description: shipmentType
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfDashboardResponse"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfDashboardResponse"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfDashboardResponse"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getShipmentStepCountByShipmentType
  /commerce/shipments/dashboard:
    get:
      tags:
        - shipment-controller
      summary: getDashboard
      parameters:
        - name: fulfillmentLocationCodes
          in: query
          description: fulfillmentLocationCodes
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/CollectionModelOfDashboardResponse"
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfDashboardResponse"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfDashboardResponse"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getDashboard
  /commerce/shipments/locationSummaryReport:
    get:
      tags:
        - shipment-controller
      summary: getLocationSummaryReport
      parameters:
        - name: locationCodes
          in: query
          description: locationCodes
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: startDateTime
          in: query
          description: startDateTime
          required: true
          schema:
            type: string
            format: date-time
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/CollectionModelOfLocationSummary"
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfLocationSummary"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfLocationSummary"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getLocationSummaryReport
  "/commerce/shipments/order/{orderId}/canceled":
    put:
      tags:
        - shipment-controller
      summary: cancelShipments
      parameters:
        - name: orderId
          in: path
          description: orderId
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: cancelShipmentRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelShipment"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/CollectionModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: cancelShipmentRequestDto
      description: cancelShipments
  "/commerce/shipments/received/{search}":
    put:
      tags:
        - shipment-controller
      summary: searchAndReceiveTransfer
      parameters:
        - name: search
          in: path
          description: search
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: searchAndReceiveTransfer
  "/commerce/shipments/surveys/{id}":
    get:
      tags:
        - customer-survey-controller
      summary: getSurvey
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfCustomerSurvey"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfCustomerSurvey"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfCustomerSurvey"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getSurvey
  "/commerce/shipments/{shipmentNumber}":
    get:
      tags:
        - shipment-controller
      summary: getShipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getShipment
    put:
      tags:
        - shipment-controller
      summary: replaceShipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: updateFields
          in: query
          description: updateFields
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: newShipment
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileShipment"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: newShipment
      description: replaceShipment
    delete:
      tags:
        - shipment-controller
      summary: deleteShipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteShipment
  "/commerce/shipments/{shipmentNumber}/attributes":
    get:
      tags:
        - shipment-attributes-controller
      summary: getShipmentAttributes
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentAttribute"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentAttribute"
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentAttribute"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getShipmentAttributes
    put:
      tags:
        - shipment-attributes-controller
      summary: setShipmentAttributes
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: attributes
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ShipmentAttribute"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentAttribute"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentAttribute"
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentAttribute"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: attributes
      description: setShipmentAttributes
  "/commerce/shipments/{shipmentNumber}/attributes/{key}":
    get:
      tags:
        - shipment-attributes-controller
      summary: getShipmentAttribute
      parameters:
        - name: key
          in: path
          description: key
          required: true
          schema:
            type: string
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/ShipmentAttribute"
            application/json:
              schema:
                $ref: "#/components/schemas/ShipmentAttribute"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/ShipmentAttribute"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getShipmentAttribute
    put:
      tags:
        - shipment-attributes-controller
      summary: setShipmentAttribute
      parameters:
        - name: key
          in: path
          description: key
          required: true
          schema:
            type: string
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: attribute
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShipmentAttribute"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/ShipmentAttribute"
            application/json:
              schema:
                $ref: "#/components/schemas/ShipmentAttribute"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/ShipmentAttribute"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: attribute
      description: setShipmentAttribute
    delete:
      tags:
        - shipment-attributes-controller
      summary: deleteShipmentAttribute
      parameters:
        - name: key
          in: path
          description: key
          required: true
          schema:
            type: string
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteShipmentAttribute
  "/commerce/shipments/{shipmentNumber}/backordered":
    post:
      tags:
        - shipment-controller
      summary: backorderShipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: backorderShipmentRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BackorderShipmentRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: backorderShipmentRequestDto
      description: backorderShipment
  "/commerce/shipments/{shipmentNumber}/backorderedItems":
    put:
      tags:
        - shipment-controller
      summary: backorderItemsUpdate
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: backorderItemsUpdateRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BackorderItemsUpdateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: backorderItemsUpdateRequestDto
      description: backorderItemsUpdate
    post:
      tags:
        - shipment-controller
      summary: backorderItems
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: backorderItemsRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BackorderItemsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: backorderItemsRequestDto
      description: backorderItems
  "/commerce/shipments/{shipmentNumber}/canceled":
    put:
      tags:
        - shipment-controller
      summary: cancelShipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: cancelShipmentRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelShipment"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: cancelShipmentRequestDto
      description: cancelShipment
  "/commerce/shipments/{shipmentNumber}/canceledItems":
    put:
      tags:
        - shipment-controller
      summary: cancelItems
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: cancelItemsRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelItemsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: cancelItemsRequestDto
      description: cancelItems
  "/commerce/shipments/{shipmentNumber}/customerAtCurbside":
    put:
      tags:
        - shipment-controller
      summary: customerAtCurbside
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: pickupInfo
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
                properties: {}
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: pickupInfo
      description: customerAtCurbside
  "/commerce/shipments/{shipmentNumber}/customerAtStore":
    put:
      tags:
        - shipment-controller
      summary: customerAtStore
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: customerAtStore
  "/commerce/shipments/{shipmentNumber}/customerCared":
    put:
      tags:
        - shipment-controller
      summary: customerCareShipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: rejectShipmentRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectShipment"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: rejectShipmentRequestDto
      description: customerCareShipment
  "/commerce/shipments/{shipmentNumber}/customerCaredItems":
    post:
      tags:
        - shipment-controller
      summary: customerCareItems
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: rejectItemsRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectItemsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: rejectItemsRequestDto
      description: customerCareItems
  "/commerce/shipments/{shipmentNumber}/customerInTransit":
    put:
      tags:
        - shipment-controller
      summary: customerInTransit
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: customerInTransit
  "/commerce/shipments/{shipmentNumber}/data":
    get:
      tags:
        - shipment-data-controller
      summary: getShipmentData
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
            application/hal+json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getShipmentData
    put:
      tags:
        - shipment-data-controller
      summary: replaceShipmentData
      parameters:
        - name: merge
          in: query
          description: merge
          schema:
            type: boolean
            default: false
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: data
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
                properties: {}
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
            application/hal+json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: data
      description: replaceShipmentData
    delete:
      tags:
        - shipment-data-controller
      summary: deleteShipmentData
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteShipmentData
  "/commerce/shipments/{shipmentNumber}/data/{key}":
    delete:
      tags:
        - shipment-data-controller
      summary: deleteShipmentDataByKey
      parameters:
        - name: key
          in: path
          description: key
          required: true
          schema:
            type: string
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteShipmentDataByKey
  "/commerce/shipments/{shipmentNumber}/destination":
    put:
      tags:
        - shipment-controller
      summary: destinationUpdate
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: destinationDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileDestination"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: destinationDto
      description: destinationUpdate
  "/commerce/shipments/{shipmentNumber}/fulfilled":
    put:
      tags:
        - shipment-controller
      summary: fulfillShipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: fulfillShipment
  "/commerce/shipments/{shipmentNumber}/items/{lineId}/data":
    get:
      tags:
        - shipment-data-controller
      summary: getShipmentItemData
      parameters:
        - name: lineId
          in: path
          description: lineId
          required: true
          schema:
            type: integer
            format: int32
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
            application/hal+json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getShipmentItemData
    put:
      tags:
        - shipment-data-controller
      summary: replaceShipmentItemData
      parameters:
        - name: lineId
          in: path
          description: lineId
          required: true
          schema:
            type: integer
            format: int32
        - name: merge
          in: query
          description: merge
          schema:
            type: boolean
            default: false
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: data
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
                properties: {}
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
            application/hal+json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties: {}
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: data
      description: replaceShipmentItemData
    delete:
      tags:
        - shipment-data-controller
      summary: deleteShipmentItemData
      parameters:
        - name: lineId
          in: path
          description: lineId
          required: true
          schema:
            type: integer
            format: int32
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteShipmentItemData
  "/commerce/shipments/{shipmentNumber}/items/{lineId}/data/{key}":
    delete:
      tags:
        - shipment-data-controller
      summary: deleteShipmentItemDataByKey
      parameters:
        - name: key
          in: path
          description: key
          required: true
          schema:
            type: string
        - name: lineId
          in: path
          description: lineId
          required: true
          schema:
            type: integer
            format: int32
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteShipmentItemDataByKey
  "/commerce/shipments/{shipmentNumber}/packages":
    post:
      tags:
        - shipment-packages-controller
      summary: newPackage
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: packageDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FulfillmentAPI-ProductionProfilePackage"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: packageDto
      description: newPackage
  "/commerce/shipments/{shipmentNumber}/packages/{packageId}":
    put:
      tags:
        - shipment-packages-controller
      summary: updatePackage
      parameters:
        - name: packageId
          in: path
          description: packageId
          required: true
          schema:
            type: string
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: packageDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FulfillmentAPI-ProductionProfilePackage"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: packageDto
      description: updatePackage
    delete:
      tags:
        - shipment-packages-controller
      summary: deleteShipmentPackage
      parameters:
        - name: packageId
          in: path
          description: packageId
          required: true
          schema:
            type: string
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteShipmentPackage
  "/commerce/shipments/{shipmentNumber}/pickedUpItems":
    post:
      tags:
        - shipment-controller
      summary: pickupItems
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: pickupItemsRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PickupItemsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: pickupItemsRequestDto
      description: pickupItems
  "/commerce/shipments/{shipmentNumber}/reassigned":
    put:
      tags:
        - shipment-controller
      summary: reassignShipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: reassignShipmentRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReassignShipment"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: reassignShipmentRequestDto
      description: reassignShipment
  "/commerce/shipments/{shipmentNumber}/reassignedItems":
    put:
      tags:
        - shipment-controller
      summary: reassignItems
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: reassignItemsRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReassignItemsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: reassignItemsRequestDto
      description: reassignItems
  "/commerce/shipments/{shipmentNumber}/received":
    put:
      tags:
        - shipment-controller
      summary: receiveTransfer
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: receiveTransfer
  "/commerce/shipments/{shipmentNumber}/refresh":
    put:
      tags:
        - shipment-controller
      summary: refreshShipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: shouldLog
          in: query
          description: shouldLog
          schema:
            type: boolean
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: refreshShipment
  "/commerce/shipments/{shipmentNumber}/rejected":
    put:
      tags:
        - shipment-controller
      summary: rejectShipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: rejectShipmentRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectShipment"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: rejectShipmentRequestDto
      description: rejectShipment
  "/commerce/shipments/{shipmentNumber}/rejectedItems":
    put:
      tags:
        - shipment-controller
      summary: rejectItems
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: rejectItemsRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectItemsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: rejectItemsRequestDto
      description: rejectItems
  "/commerce/shipments/{shipmentNumber}/retried":
    put:
      tags:
        - shipment-controller
      summary: retryFulfillingShipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: retryFulfillingShipment
  "/commerce/shipments/{shipmentNumber}/surveys":
    get:
      tags:
        - customer-survey-controller
      summary: getSurveys
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/CollectionModelOfEntityModelOfCustomerSurvey"
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfEntityModelOfCustomerSurvey"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfEntityModelOfCustomerSurvey"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getSurveys
    post:
      tags:
        - customer-survey-controller
      summary: createSurvey
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: customerSurveyDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerSurvey"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfCustomerSurvey"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfCustomerSurvey"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfCustomerSurvey"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: customerSurveyDto
      description: createSurvey
  "/commerce/shipments/{shipmentNumber}/tasks":
    get:
      tags:
        - shipment-controller
      summary: getTasks
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/CollectionModelOfTask"
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfTask"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/CollectionModelOfTask"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getTasks
  "/commerce/shipments/{shipmentNumber}/tasks/{taskName}/completed":
    put:
      tags:
        - shipment-controller
      summary: execute
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: taskName
          in: path
          description: taskName
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: taskCompleteDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskComplete"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: taskCompleteDto
      description: execute
  "/commerce/shipments/{shipmentNumber}/tasks/{taskName}/reverted":
    put:
      tags:
        - shipment-controller
      summary: revert
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: taskName
          in: path
          description: taskName
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: revert
  "/commerce/shipments/{shipmentNumber}/tasks/{taskName}/skipped":
    put:
      tags:
        - shipment-controller
      summary: skipTask
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: taskName
          in: path
          description: taskName
          required: true
          schema:
            type: string
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: skipTask
  "/commerce/shipments/{shipmentNumber}/transferred":
    put:
      tags:
        - shipment-controller
      summary: transferShipment
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: transferShipmentRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferShipment"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: transferShipmentRequestDto
      description: transferShipment
  "/commerce/shipments/{shipmentNumber}/transferredItems":
    put:
      tags:
        - shipment-controller
      summary: transferItems
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: transferItemsRequestDto
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferItemsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
            application/hal+json:
              schema:
                $ref: "#/components/schemas/EntityModelOfShipment"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: transferItemsRequestDto
      description: transferItems
  "/commerce/shipments/{shipmentNumber}/workflow-definition-image":
    get:
      tags:
        - shipment-controller
      summary: workflowDefinitionImage
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/svg+xml:
              schema:
                type: string
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: workflowDefinitionImage
  "/commerce/shipments/{shipmentNumber}/workflow-instance-image":
    get:
      tags:
        - shipment-controller
      summary: workflowInstanceImage
      parameters:
        - name: shipmentNumber
          in: path
          description: shipmentNumber
          required: true
          schema:
            type: integer
            format: int32
        - name: x-vol-site
          in: header
          schema:
            type: integer
            format: int32
        - name: x-vol-tenant
          in: header
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/svg+xml:
              schema:
                type: string
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: workflowInstanceImage
  "/v1/bin/{bin_id}":
    post:
      tags:
        - InventoryBin
      description: Update the designated bin
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - name: bin_id
          in: path
          description: Id of bin to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: "#/components/requestBodies/UpdateBinRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bin"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
  /v1/export/create:
    post:
      tags:
        - InventoryExportInventory
      description: Create an Export Settings
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/CreateExportSettingsRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExportSettingsResponse"
        "400":
          description: Bad Request
        "500":
          description: Internal Service Error
  /v1/export:
    post:
      tags:
        - InventoryExportInventory
      description: Run Export Settings Job
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/ExportInventoryRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExportInventoryResponse"
        "400":
          description: Bad Request
        "500":
          description: Internal Service Error
  /v1/export/update:
    post:
      tags:
        - InventoryExportInventory
      description: Update an Export Settings
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/UpdateExportSettingsRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateExportSettingsResponse"
        "400":
          description: Bad Request
        "404":
          description: No Settings Found
        "500":
          description: Internal Service Error
  "/v1/export/{exportSettingsName}":
    delete:
      tags:
        - InventoryExportInventory
      description: Deletes an Export Settings
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/exportSettingsName"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletedCountResponse"
        "400":
          description: Bad Request
  /v1/export/ftp/create:
    post:
      tags:
        - InventoryExportInventory
      description: Create an Export Settings FTP
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/CreateExportSettingsFTPRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExportSettingsResponse"
        "400":
          description: Bad Request
        "500":
          description: Internal Service Error
  /v1/export/ftp/update:
    post:
      tags:
        - InventoryExportInventory
      description: Update an Export Settings FTP
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/UpdateExportSettingsFTPRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateExportSettingsFTPResponse"
        "400":
          description: Bad Request
        "404":
          description: No Settings Found
        "500":
          description: Internal Service Error
  "/v1/export/ftp/{exportSettingsName}/{exportSettingsFTPName}":
    delete:
      tags:
        - InventoryExportInventory
      description:
        Not specifying exportSettingsFTPID deletes ALL ftp settings for the
        specified export settings.
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/exportSettingsName"
        - $ref: "#/components/parameters/exportSettingsFTPName"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletedCountResponse"
        "400":
          description: Bad Request
      summary: Deletes an Export Settings FTP
  /v1/export/s3/create:
    post:
      tags:
        - InventoryExportInventory
      description: Create an Export Settings S3
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/CreateExportSettingsS3Request"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExportSettingsResponse"
        "400":
          description: Bad Request
        "500":
          description: Internal Service Error
  /v1/export/s3/update:
    post:
      tags:
        - InventoryExportInventory
      description: Update an Export Settings S3
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/UpdateExportSettingsS3Request"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateExportSettingsS3Response"
        "400":
          description: Bad Request
        "404":
          description: No Settings Found
        "500":
          description: Internal Service Error
  "/v1/export/s3/{exportSettingsName}/{exportSettingsS3Name}":
    delete:
      tags:
        - InventoryExportInventory
      description:
        Not specifying exportSettingsS3ID deletes ALL s3 settings for the
        specified export settings.
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/exportSettingsName"
        - $ref: "#/components/parameters/exportSettingsS3Name"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletedCountResponse"
        "400":
          description: Bad Request
      summary: Deletes an Export Settings S3
  "/v1/config/fetchfile/{fetchFileConfigID}":
    delete:
      tags:
        - InventoryFetchFileConfig
      description: Deletes a fetch file config
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - name: fetchFileConfigID
          in: path
          description: Id of fetch file config
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletedResponse"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  "/v1/config/fetchfile/testConnection/{fetchFileConfigID}":
    get:
      tags:
        - InventoryFetchFileConfig
      description:
        Attempts to connect to a fetch file endpoint and lists current
        files if successful
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - name: fetchFileConfigID
          in: path
          description: Id of fetch file config
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FetchFileConnectionResponse"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /v5/inventory/redistribute:
    post:
      tags:
        - InventoryModifyInventory
      description: Create jobs to redistribute inventory across tags for the given tenant
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JobQueueResponse"
  "/v1/pendingItem/{pendingItemID}":
    delete:
      tags:
        - InventoryPendingItems
      description: Delete Pending Items
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - name: pendingItemID
          in: path
          description: Pending Item ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletedResponse"
        "400":
          description: Bad Request
  "/v1/pendingItem/release/{tenantID}":
    post:
      tags:
        - InventoryPendingItems
      description: Release Pending Items
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - name: tenantID
          in: path
          description: Tenant ID to release
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Bad Request
  /v1/productMapping:
    get:
      tags:
        - InventoryProductMapping
      description: Gets a list Product Mappings for the specified tenant
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductMappingResponse"
        "400":
          description: Bad Request
    post:
      tags:
        - InventoryProductMapping
      description: Creates a Product Mapping
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/ProductMappingRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductMapping"
        "400":
          description: Bad Request
  "/v1/productMapping/{direction}":
    delete:
      tags:
        - InventoryProductMapping
      description: Delete a Product Mapping
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - name: direction
          in: path
          description: Direction
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ProductMappingRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletedResponse"
        "400":
          description: Bad Request
  /v1/silo/provision:
    post:
      tags:
        - InventorySilo
      description: ""
      requestBody:
        $ref: "#/components/requestBodies/ProvisionSiloRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TenantIDResponse"
        "400":
          description: Bad Request
      summary: Provision a silo based on a tenant ID
  /v1/site:
    post:
      tags:
        - InventorySite
      description: Creates a site
      requestBody:
        $ref: "#/components/requestBodies/CreateSiteRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteIDResponse"
        "400":
          description: Bad Request
  "/v1/tagCategory/{tag_category_name}/tag":
    post:
      tags:
        - InventoryTag
      description: Create a tag
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/tagCategoryName"
      requestBody:
        $ref: "#/components/requestBodies/Tag"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
        "400":
          description: Bad Request
  "/v1/tagCategory/{tag_category_name}/tag/{tag_value}":
    get:
      tags:
        - InventoryTag
      description: Get a tag
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/tagCategoryName"
        - $ref: "#/components/parameters/tagValue"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
        "404":
          description: Tag Not Found
    put:
      tags:
        - InventoryTag
      description: Update the designated tag
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/tagCategoryName"
        - $ref: "#/components/parameters/tagValue"
      requestBody:
        $ref: "#/components/requestBodies/Tag"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
    delete:
      tags:
        - InventoryTag
      description: Delete a Tag
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/tagCategoryName"
        - $ref: "#/components/parameters/tagValue"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletedCountResponse"
        "400":
          description: Bad Request
        "404":
          description: Tag Not Found
  /v1/tagCategory:
    get:
      tags:
        - InventoryTagCategory
      description: Get all tag categories for a tenant
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TagCategory"
        "404":
          description: Tag Categories Not Found
  "/v1/tagCategory/{tag_category_name}":
    get:
      tags:
        - InventoryTagCategory
      description: Get a tag category
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/tagCategoryName"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagCategory"
        "404":
          description: Tag Not Found
    put:
      tags:
        - InventoryTagcategory
      description: Update the designated tag category
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/tagCategoryName"
      requestBody:
        $ref: "#/components/requestBodies/TagCategory"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagCategory"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
    delete:
      tags:
        - InventoryTagcategory
      description: Delete a Tag category
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/tagCategoryName"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletedCountResponse"
        "400":
          description: Bad Request
        "404":
          description: Tag category Not Found
  /v1/tenant/clone:
    post:
      tags:
        - InventoryTenant
      description: Clones a tenant
      requestBody:
        $ref: "#/components/requestBodies/CloneTenantRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TenantIDResponse"
        "400":
          description: Bad Request
  /v1/tenant:
    post:
      tags:
        - InventoryTenant
      description: Creates a tenant
      requestBody:
        $ref: "#/components/requestBodies/CreateTenantRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TenantIDResponse"
        "400":
          description: Bad Request
  /v5/inventory/allocate:
    post:
      tags:
        - InventoryAllocation
      description: Allocates inventory based on the given request
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/AllocateInventoryRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobQueueResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  message:
                    $ref: "#/components/schemas/BaseResponse"
                type: object
  /v5/inventory/deallocate:
    post:
      tags:
        - InventoryAllocation
      description: Deallocates inventory based on the given request
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/AllocateInventoryRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  message:
                    $ref: "#/components/schemas/BaseResponse"
                type: object
  /v5/inventory/fulfill:
    post:
      tags:
        - InventoryAllocation
      description: Fulfills inventory based on the given request
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/AllocateInventoryRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  message:
                    $ref: "#/components/schemas/BaseResponse"
                type: object
  /v1/audit/search:
    post:
      tags:
        - InventoryAudit
      description: Search for a list of Audits
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/AuditSearchRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditSearchResponse"
        "400":
          description: Bad Request
  "/v1/audit/allOpen/{location_code}":
    get:
      tags:
        - InventoryAudit
      description: Get all of the open   audits at the given location
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - name: location_id
          in: path
          description: Id of location
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Audit"
        "400":
          description: Bad Request
  /v1/audit:
    post:
      tags:
        - InventoryAudit
      description: Create a new audit
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/CreateAuditRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Audit"
        "400":
          description: Bad Request
  "/v1/audit/{audit_id}/complete":
    post:
      tags:
        - InventoryAudit
      description: Complete an audit
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - name: audit_id
          in: path
          description: Id of audit
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: "#/components/requestBodies/LoadBinInventoryRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Audit"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  "/v1/audit/{audit_id}/cancel":
    post:
      tags:
        - InventoryAudit
      description: Cancel an audit
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - name: audit_id
          in: path
          description: Id of audit
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  "/v1/audit/{audit_id}":
    get:
      tags:
        - InventoryAudit
      description: Get details of the specified audit
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - name: audit_id
          in: path
          description: Id of audit
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Audit"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  message:
                    type: string
                type: object
  /v1/bin:
    get:
      tags:
        - InventoryBin
      description: Get a list of bins
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - name: locationID
          in: query
          description: Id of location
          required: true
          schema:
            type: integer
            format: int64
        - name: searchTerm
          in: query
          description: Term to match in bins
          required: true
          schema:
            type: integer
            format: int64
        - name: perPage
          in: query
          description: Results per page
          required: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Page to show
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BinResponseModel"
        "404":
          description: Bins Not Found
    post:
      tags:
        - InventoryBin
      description: Create a bin
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/CreateBinRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BinIDResponse"
        "400":
          description: Bad Request
  /v1/bin/searchInventory:
    post:
      tags:
        - InventoryBin
      description: Search bins for a inventory by bin name or any product identifier
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/BinSearchRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BinSearchResponse"
        "400":
          description: Bad Request
  /v1/bin/loadInventory:
    post:
      tags:
        - InventoryBin
      description: Loads bin inventory for designated bins
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/LoadBinInventoryRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoadBinInventoryResponse"
        "400":
          description: Bad Request
  /v1/bin/binTypes:
    get:
      tags:
        - InventoryBin
      description: Get list of bin types
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BinTypeModel"
        "400":
          description: Bad Request
  /v1/bin/binStatuses:
    get:
      tags:
        - InventoryBin
      description: Get list of bin statuses
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BinStatusModel"
        "400":
          description: Bad Request
  /v1/bin/updateBins:
    post:
      tags:
        - InventoryBin
      description: Update the designated bins
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/UpdateBinsRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateBinsResponse"
        "400":
          description: Bad Request
  /v1/config/fetchfile:
    get:
      tags:
        - InventoryFetchFileConfig
      description: Get the Fetch File Configs for the current tenant
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/M_FetchFileConfig"
        "404":
          description: Not Found
    post:
      tags:
        - InventoryFetchFileConfig
      description: Save a new Fetch File Config
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/FetchFileConfigRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Bad Request
  /v5/inventory:
    get:
      tags:
        - Inventory
      description: Get inventory from specified location
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/x-vol-site"
        - $ref: "#/components/parameters/type"
        - $ref: "#/components/parameters/items"
        - $ref: "#/components/parameters/requestLocation"
        - $ref: "#/components/parameters/locationWhitelist"
        - $ref: "#/components/parameters/locationBlacklist"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/ignoreSafetyStock"
        - $ref: "#/components/parameters/includeNegativeInventory"
        - $ref: "#/components/parameters/shippingLocation"
        - $ref: "#/components/parameters/transferEnabled"
        - $ref: "#/components/parameters/pickup"
        - $ref: "#/components/parameters/includeInAggregate"
        - $ref: "#/components/parameters/includeAttributes"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InventoryResponse"
        "404":
          description: Bins Not Found
    post:
      tags:
        - Inventory
      description: Queries for specified inventory at given location
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/x-vol-site"
      requestBody:
        $ref: "#/components/requestBodies/InventoryRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InventoryResponse"
        "400":
          description: Bad Request
  /v5/inventory/aggregate:
    post:
      tags:
        - Inventory
      description: Aggregates Inventory
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/x-vol-site"
      requestBody:
        $ref: "#/components/requestBodies/AggregateRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AggregateResponse"
        "400":
          description: Bad Request
  "/v1/queue/{jobID}":
    get:
      tags:
        - InventoryJob
      description: Get the specified job
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - name: jobID
          in: path
          description: Id of bin to get
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobQueueResponse"
        "404":
          description: Job Not Found
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  message:
                    type: string
                type: object
  /v1/queue:
    get:
      tags:
        - InventoryJob
      description: Get the requested jobs
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - name: locationCode
          in: query
          description: Tenant specified unique Identifier of the owning location
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - name: owner
          in: query
          description: User that owns the job
          required: false
          schema:
            type: string
        - name: types
          in: query
          description: Type of the Job Queue Request
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - REFRESH
                - ADJUST
                - RELEASE_SHIPMENTS
                - CREATE_PICK_WAVE
                - CLOSE_PICK_WAVE
                - PUT_AWAY_FILE
                - SHORT_PICK_ERROR
                - BIN_AUDIT_START
                - BIN_AUDIT_COMPLETION
                - CREATE_BIN_AUDIT
                - RELEASE_PENDING_ITEMS
        - name: originalFilename
          in: query
          description:
            The full name of the file that was picked up at the secure
            droppoint server before being split up by location.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JobQueueResponse"
        "404":
          description: Job Not Found
  /v5/inventory/refresh:
    post:
      tags:
        - InventoryModifyInventory
      description: Refresh Inventory
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/RefreshRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobIDResponse"
        "400":
          description: Bad Request
  /v5/inventory/sync-refresh:
    post:
      tags:
        - InventoryModifyInventory
      description: Refresh Inventory - synchronous
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/RefreshRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InventoryResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  message:
                    type: string
                type: object
  /v5/inventory/adjust:
    post:
      tags:
        - InventoryModifyInventory
      description: Adjust Inventory
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/AdjustRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobIDResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  message:
                    type: string
                type: object
  /v5/inventory/sync-adjust:
    post:
      tags:
        - InventoryModifyInventory
      description: Adjust Inventory - synchronous
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/AdjustRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InventoryResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  message:
                    type: string
                type: object
  /v5/inventory/delete:
    post:
      tags:
        - InventoryModifyInventory
      description: Delete Inventory
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/x-vol-site"
      requestBody:
        $ref: "#/components/requestBodies/DeleteItemRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteItemResponse"
        "400":
          description: Bad Request
  /v5/inventory/getOrderItemInformation:
    post:
      tags:
        - InventoryOrderItem
      description: Get Order Item Information
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/OrderItemInformationRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderItemInformation"
        "400":
          description: Bad Request
  /v5/inventory/getOrderItemLog:
    post:
      tags:
        - InventoryOrderItem
      description: Get Order Item Log
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/OrderItemLogRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderItemLogResponse"
        "400":
          description: Bad Request
  /v5/inventory/clearEventQueue:
    post:
      tags:
        - InventoryOrderItem
      description: Clear pending events
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/ClearEventQueueRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderItemLogResponse"
        "400":
          description: Bad Request
  /v1/pendingItem:
    get:
      tags:
        - InventoryPendingItems
      description: Get Pending Items
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
        - $ref: "#/components/parameters/locationName"
        - $ref: "#/components/parameters/locationID"
        - $ref: "#/components/parameters/currentPage"
        - $ref: "#/components/parameters/numberPerPage"
        - $ref: "#/components/parameters/sortBy"
        - $ref: "#/components/parameters/shipmentID"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPendingItemsResponse"
        "400":
          description: Bad Request
  /v1/pendingItem/release:
    post:
      tags:
        - InventoryPendingItems
      description: Release All Pending Items
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Bad Request
  /v1/tenantConfig:
    get:
      tags:
        - InventoryTenantConfig
      description: Gets tenant config
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TenantConfigModel"
        "404":
          description: Not Found
    post:
      tags:
        - InventoryTenantConfig
      description: Creates or updates tenant config
      parameters:
        - $ref: "#/components/parameters/x-vol-tenant"
      requestBody:
        $ref: "#/components/requestBodies/UpdateTenantConfigRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TenantConfigModel"
        "400":
          description: Bad Request
  /v1/wave/suggestion:
    post:
      tags:
        - InventoryWave
      description: Query Wave Suggestion (as a post)
      requestBody:
        $ref: "#/components/requestBodies/WaveSuggestionRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WaveSuggestionResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  message:
                    type: string
                type: object
  /commerce/admin/locations:
    post:
      tags:
        - LocationAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Location"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/plain:
              schema:
                $ref: "#/components/schemas/Location"
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - LocationAdmin
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 100
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/admin/locations/{locationCode}":
    put:
      tags:
        - LocationAdmin
      parameters:
        - name: locationCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Location"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/plain:
              schema:
                $ref: "#/components/schemas/Location"
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - LocationAdmin
      parameters:
        - name: locationCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/plain:
              schema:
                $ref: "#/components/schemas/Location"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - LocationAdmin
      parameters:
        - name: locationCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/admin/locations/attributedefinition/attributes:
    get:
      tags:
        - LocationAttributeDefinition
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttributeCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttributeCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttributeCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - LocationAttributeDefinition
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/admin/locations/attributedefinition/attributes/{attributeFQN}/VocabularyValues"
  : get:
      tags:
        - LocationAttributeDefinition
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAttributeVocabularyValue"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAttributeVocabularyValue"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommerceRuntimeAttributeVocabularyValue"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/admin/locations/attributedefinition/attributes/{attributeFQN}":
    get:
      tags:
        - LocationAttributeDefinition
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - LocationAttributeDefinition
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommerceRuntimeAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/CommerceRuntimeAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/admin/locationGroups:
    post:
      tags:
        - LocationGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationLocationGroup"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationLocationGroup"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationLocationGroup"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationLocationGroup"
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - LocationGroup
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 100
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationGroupCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationGroupCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationGroupCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/admin/locationGroups/{locationGroupCode}":
    put:
      tags:
        - LocationGroup
      parameters:
        - name: locationGroupCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationLocationGroup"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationLocationGroup"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationLocationGroup"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationLocationGroup"
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - LocationGroup
      parameters:
        - name: locationGroupCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationLocationGroup"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationLocationGroup"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationLocationGroup"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - LocationGroup
      parameters:
        - name: locationGroupCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/admin/locationGroupConfiguration/{locationGroupCode}":
    get:
      tags:
        - LocationGroupConfiguration
      parameters:
        - name: locationGroupCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationGroupConfiguration"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationGroupConfiguration"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationGroupConfiguration"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - LocationGroupConfiguration
      parameters:
        - name: locationGroupCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationGroupConfiguration"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationGroupConfiguration"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationGroupConfiguration"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationGroupConfiguration"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/admin/locationGroupConfiguration/location/{locationCode}":
    get:
      tags:
        - LocationGroupConfiguration
      parameters:
        - name: locationCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationGroupConfiguration"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationGroupConfiguration"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationGroupConfiguration"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/storefront/locationUsageTypes/DS/location:
    get:
      tags:
        - LocationRuntime
      parameters:
        - name: includeAttributeDefinition
          in: query
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/plain:
              schema:
                $ref: "#/components/schemas/Location"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/storefront/locationUsageTypes/CS/location:
    get:
      tags:
        - LocationRuntime
      parameters:
        - name: includeAttributeDefinition
          in: query
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/plain:
              schema:
                $ref: "#/components/schemas/Location"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/storefront/locationUsageTypes/SP/locations:
    get:
      tags:
        - LocationRuntime
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 100
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: includeAttributeDefinition
          in: query
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/storefront/locationUsageTypes/SP/locations/{locationCode}":
    get:
      tags:
        - LocationRuntime
      parameters:
        - name: locationCode
          in: path
          required: true
          schema:
            type: string
        - name: includeAttributeDefinition
          in: query
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/plain:
              schema:
                $ref: "#/components/schemas/Location"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/storefront/locationUsageTypes/{locationUsageType}/locations":
    get:
      tags:
        - LocationRuntime
      parameters:
        - name: locationUsageType
          in: path
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 100
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: includeAttributeDefinition
          in: query
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/storefront/locations/{locationCode}":
    get:
      tags:
        - LocationRuntime
      parameters:
        - name: locationCode
          in: path
          required: true
          schema:
            type: string
        - name: includeAttributeDefinition
          in: query
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/json:
              schema:
                $ref: "#/components/schemas/Location"
            text/plain:
              schema:
                $ref: "#/components/schemas/Location"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/settings/locationUsages:
    get:
      tags:
        - LocationSettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationUsageCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationUsageCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationUsageCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/settings/locationUsages/{code}":
    get:
      tags:
        - LocationSettings
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationUsage"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationUsage"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationUsage"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - LocationSettings
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationUsage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationUsage"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationUsage"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationUsage"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/admin/locationtypes:
    post:
      tags:
        - LocationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationType"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationType"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationType"
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - LocationType
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LocationType"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LocationType"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LocationType"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/admin/locationtypes/{locationTypeCode}":
    put:
      tags:
        - LocationType
      parameters:
        - name: locationTypeCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationType"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationType"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationType"
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - LocationType
      parameters:
        - name: locationTypeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationType"
            text/json:
              schema:
                $ref: "#/components/schemas/LocationType"
            text/plain:
              schema:
                $ref: "#/components/schemas/LocationType"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - LocationType
      parameters:
        - name: locationTypeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/entitylists/{entityListFullName}/entities/{id}":
    get:
      tags:
        - EntityLists
      summary: Get a specific Entity from an EntityList instance
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The unique id of the Entity
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema: {}
            text/json:
              schema: {}
            text/plain:
              schema: {}
      description: Get a specific Entity from an EntityList instance
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - EntityLists
      summary: Update an existing Entity in an EntityList instance
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The unique id of the Entity
          required: true
          schema:
            type: string
      requestBody:
        description: The Entity in json format
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MZDBHttpRequestMessage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema: {}
            text/json:
              schema: {}
            text/plain:
              schema: {}
      description: Update an existing Entity in an EntityList instance
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - EntityLists
      summary: Delete an existing Entity from an EntityList instance
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The unique id of the Entity
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Delete an existing Entity from an EntityList instance
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/entitylists/{entityListFullName}/entities":
    get:
      tags:
        - EntityLists
      summary: Get a filtered collection of Entities from an EntityList instance
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 10
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: filter
          in: query
          description: ""
          schema:
            type: string
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/EntityCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/EntityCollection"
      description: Get a filtered collection of Entities from an EntityList instance
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - EntityLists
      summary: Insert an Entity into an EntityList instance
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
      requestBody:
        description: The Entity in json format
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MZDBHttpRequestMessage"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema: {}
            text/json:
              schema: {}
            text/plain:
              schema: {}
      description: Insert an Entity into an EntityList instance
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/entitylists/{entityListFullName}/entityContainers/{id}":
    get:
      tags:
        - EntityLists
      summary: Get a specific EntityContainer from an  EntityList instance
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The unique id of the Entity
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityContainer"
            text/json:
              schema:
                $ref: "#/components/schemas/EntityContainer"
            text/plain:
              schema:
                $ref: "#/components/schemas/EntityContainer"
      description: Get a specific EntityContainer from an  EntityList instance
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/entitylists/{entityListFullName}/entityContainers":
    get:
      tags:
        - EntityLists
      summary: Get a filtered collection of EntityContainers from an EntityList instance
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 10
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: filter
          in: query
          description: ""
          schema:
            type: string
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityContainerCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/EntityContainerCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/EntityContainerCollection"
      description: Get a filtered collection of EntityContainers from an EntityList instance
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/entitylists/{entityListFullName}":
    get:
      tags:
        - EntityLists
      summary: Get an existing EntityList definition for a specific tenant
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityList"
            text/json:
              schema:
                $ref: "#/components/schemas/EntityList"
            text/plain:
              schema:
                $ref: "#/components/schemas/EntityList"
      description: Get an existing EntityList definition for a specific tenant
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - EntityLists
      summary: Update an existing Entitylist for a specific tenant
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
      requestBody:
        description: The EntityList definition
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityList"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityList"
            text/json:
              schema:
                $ref: "#/components/schemas/EntityList"
            text/plain:
              schema:
                $ref: "#/components/schemas/EntityList"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - EntityLists
      summary: Delete an existing EntityList for a specific tenant
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: This will also delete all Entities in all instances of this
        EntityList for the tenant.
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/entitylists:
    post:
      tags:
        - EntityLists
      summary: Create a new EntityList for a specific tenant
      requestBody:
        description: The EntityList definition
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityList"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityList"
            text/json:
              schema:
                $ref: "#/components/schemas/EntityList"
            text/plain:
              schema:
                $ref: "#/components/schemas/EntityList"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - EntityLists
      summary: Get a filtered list of EntityLists for a specific tenant
      parameters:
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 10
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: filter
          in: query
          description: ""
          schema:
            type: string
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityListCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/EntityListCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/EntityListCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/entitylists/{entityListFullName}/views":
    get:
      tags:
        - EntityLists
      summary: Get all of the defined ListViews for a specific EntityList for a
        specific tenant
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListViewCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ListViewCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ListViewCollection"
      description:
        Get all of the defined ListViews for a specific EntityList for a
        specific tenant
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - EntityLists
      summary: Create a new ListView definition for a specific EntityList for a
        specific tenant
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
      requestBody:
        description: The new ListView definition
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListView"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListView"
            text/json:
              schema:
                $ref: "#/components/schemas/ListView"
            text/plain:
              schema:
                $ref: "#/components/schemas/ListView"
      description:
        Create a new ListView definition for a specific EntityList for a
        specific tenant
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/entitylists/{entityListFullName}/views/{viewName}":
    get:
      tags:
        - EntityLists
      summary:
        Returns a specific ListView definition for a specific EntityList for a
        specific tenant
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
        - name: viewName
          in: path
          description: The name of the ListView
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListView"
            text/json:
              schema:
                $ref: "#/components/schemas/ListView"
            text/plain:
              schema:
                $ref: "#/components/schemas/ListView"
      description:
        Returns a specific ListView definition for a specific EntityList
        for a specific tenant
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - EntityLists
      summary:
        Update an existing ListView definition for a specific EntityList for a
        specific tenant
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
        - name: viewName
          in: path
          description: The name of the ListView
          required: true
          schema:
            type: string
      requestBody:
        description: The udpated ListView definition
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListView"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListView"
            text/json:
              schema:
                $ref: "#/components/schemas/ListView"
            text/plain:
              schema:
                $ref: "#/components/schemas/ListView"
      description:
        Update an existing ListView definition for a specific EntityList
        for a specific tenant
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - EntityLists
      summary:
        Delete an existing ListView definition for a specific EntityList for a
        specific tenant
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
        - name: viewName
          in: path
          description: The name of the ListView to delete
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description:
        Delete an existing ListView definition for a specific EntityList
        for a specific tenant
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/platform/entitylists/{entityListFullName}/views/{viewName}/entityContainers"
  : get:
      tags:
        - EntityLists
      summary:
        Get a filtered collection of EntityContainers for a ListView on an
        EntityList
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
        - name: viewName
          in: path
          description: The name of the ListView
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 10
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: filter
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityContainerCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/EntityContainerCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/EntityContainerCollection"
      description:
        Get a filtered collection of EntityContainers for a ListView on an
        EntityList
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/entitylists/{entityListFullName}/views/{viewName}/entities":
    get:
      tags:
        - EntityLists
      summary: Get a filtered collection of Entities for a ListView on an EntityList
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
        - name: viewName
          in: path
          description: The name of the ListView
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 10
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: filter
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/EntityCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/EntityCollection"
      description: Get a filtered collection of Entities for a ListView on an EntityList
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/platform/entitylists/{entityListFullName}/views/{viewName}/entityContainers/{entityId}"
  : get:
      tags:
        - EntityLists
      summary: Get an EntityContainer for a specific Entity in a ListView on an
        EntityList
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
        - name: viewName
          in: path
          description: The name of the ListView
          required: true
          schema:
            type: string
        - name: entityId
          in: path
          description: The unique Entity id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityContainer"
            text/json:
              schema:
                $ref: "#/components/schemas/EntityContainer"
            text/plain:
              schema:
                $ref: "#/components/schemas/EntityContainer"
      description:
        Get an EntityContainer for a specific Entity in a ListView on an
        EntityList
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/platform/entitylists/{entityListFullName}/views/{viewName}/entities/{entityId}"
  : get:
      tags:
        - EntityLists
      summary: Get a specific Entity in a ListView on an EntityList
      parameters:
        - name: entityListFullName
          in: path
          description: The full name of the EntityList including namespace in
            name@nameSpace format
          required: true
          schema:
            type: string
        - name: viewName
          in: path
          description: The name of the ListView
          required: true
          schema:
            type: string
        - name: entityId
          in: path
          description: The unique Entity id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema: {}
            text/json:
              schema: {}
            text/plain:
              schema: {}
      description: Get a specific Entity in a ListView on an EntityList
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/secureappdata/{appKeyId}/{dbEntryQuery}":
    get:
      tags:
        - SecureAppData
      parameters:
        - name: appKeyId
          in: path
          required: true
          schema:
            type: string
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema: {}
            text/json:
              schema: {}
            text/plain:
              schema: {}
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - SecureAppData
      parameters:
        - name: appKeyId
          in: path
          required: true
          schema:
            type: string
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - SecureAppData
      parameters:
        - name: appKeyId
          in: path
          required: true
          schema:
            type: string
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - SecureAppData
      parameters:
        - name: appKeyId
          in: path
          required: true
          schema:
            type: string
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/sitedata/{dbEntryQuery}":
    get:
      tags:
        - SiteData
      parameters:
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - SiteData
      parameters:
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - SiteData
      parameters:
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - SiteData
      parameters:
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/tenantdata/{dbEntryQuery}":
    get:
      tags:
        - TenantData
      parameters:
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - TenantData
      parameters:
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - TenantData
      parameters:
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - TenantData
      parameters:
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/userdata/{dbEntryQuery}":
    get:
      tags:
        - UserData
      parameters:
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - UserData
      parameters:
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - UserData
      parameters:
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - UserData
      parameters:
        - name: dbEntryQuery
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/api/v1/action/delete/{actionID}":
    delete:
      tags:
        - OrderRoutingAfterAction
      summary: deleteAction
      parameters:
        - name: actionID
          in: path
          description: actionID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content: {}
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteAction
  /api/v1/action/noinv:
    post:
      tags:
        - OrderRoutingAfterAction
      summary: saveNoInvAction
      parameters:
        - name: groupID
          in: query
          description: groupID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: loc
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupAfterAction"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupAfterAction"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: loc
      description: saveNoInvAction
  /api/v1/action/partial:
    post:
      tags:
        - OrderRoutingAfterAction
      summary: savePartialAction
      parameters:
        - name: groupID
          in: query
          description: groupID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: loc
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupAfterAction"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupAfterAction"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: loc
      description: savePartialAction
  /api/v1/action/test:
    get:
      tags:
        - OrderRoutingAfterAction
      summary: testAction
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupAfterAction"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: testAction
  "/api/v1/action/{actionID}":
    get:
      tags:
        - OrderRoutingAfterAction
      summary: getAction
      parameters:
        - name: actionID
          in: path
          description: actionID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupAfterAction"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getAction
  /api/v1/authtest:
    get:
      tags:
        - OrderRoutingAuth
      summary: orderRouting
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: orderRouting
  /api/v1/authtest/associate:
    get:
      tags:
        - OrderRoutingAuth
      summary: storeAssociate
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: storeAssociate
  /api/v1/authtest/filters:
    get:
      tags:
        - OrderRoutingAuth
      summary: getFilters
      responses:
        "200":
          description: OK
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getFilters
  /api/v1/authtest/manager:
    get:
      tags:
        - OrderRoutingAuth
      summary: storeManager
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: storeManager
  /api/v1/authtest/user/behaviors:
    get:
      tags:
        - OrderRoutingAuth
      summary: getAuthorizedUserRoles
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: array
                items:
                  type: string
            application/json:
              schema:
                type: array
                items:
                  type: string
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getAuthorizedUserRoles
  /api/v1/authtest/user/hello:
    get:
      tags:
        - OrderRoutingAuth
      summary: home
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: home
  /api/v1/authtest/user/principal:
    get:
      tags:
        - OrderRoutingAuth
      summary: getPrincipal
      parameters:
        - name: name
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/Principal"
            application/json:
              schema:
                $ref: "#/components/schemas/Principal"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getPrincipal
  /api/v1/authtest/user/username:
    get:
      tags:
        - OrderRoutingAuth
      summary: getAuthorizedUserName
      responses:
        "200":
          description: OK
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getAuthorizedUserName
  /api/v1/dataList:
    post:
      tags:
        - OrderRoutingDataList
      summary: createCustomDataList
      requestBody:
        description: customDataList
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomDataList"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomDataListResponse"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: customDataList
      description: createCustomDataList
  "/api/v1/dataList/{dataListID}":
    get:
      tags:
        - OrderRoutingDataList
      summary: getCustomDataList
      parameters:
        - name: dataListID
          in: path
          description: dataListID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomDataListResponse"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getCustomDataList
    put:
      tags:
        - OrderRoutingDataList
      summary: updateCustomDataList
      parameters:
        - name: dataListID
          in: path
          description: dataListID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: newDataList
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomDataList"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomDataListResponse"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: newDataList
      description: updateCustomDataList
    delete:
      tags:
        - OrderRoutingDataList
      summary: deleteCustomDataList
      parameters:
        - name: dataListID
          in: path
          description: dataListID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteCustomDataList
  /api/v1/environment/export:
    get:
      tags:
        - OrderRoutingEnvironment
      summary: exportEnvironment
      parameters:
        - name: environmentID
          in: query
          description: environmentID
          required: true
          schema:
            type: integer
            format: int32
        - name: siteID
          in: query
          description: siteID
          required: true
          schema:
            type: integer
            format: int32
        - name: tenantID
          in: query
          description: tenantID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnvironmentExportModel"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: exportEnvironment
    post:
      tags:
        - OrderRoutingEnvironment
      summary: importEnvironment
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnvironmentExportModel"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: request
      description: importEnvironment
  /api/v1/filter/criteriaSet:
    post:
      tags:
        - OrderRoutingFilter
      summary: saveCriteriaSetFilter
      requestBody:
        description: loc
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationCriteriaSetFilter"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AbstractFilter"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: loc
      description: saveCriteriaSetFilter
  /api/v1/filter/customDataListFilter:
    post:
      tags:
        - OrderRoutingFilter
      summary: saveCustomDataListFilter
      requestBody:
        description: filter
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomDataListFilter"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AbstractFilter"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: filter
      description: saveCustomDataListFilter
  /api/v1/filter/customDataValueFilter:
    post:
      tags:
        - OrderRoutingFilter
      summary: saveCustomDataValueFilter
      requestBody:
        description: customDataValueFilter
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomDataValueFilter"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AbstractFilter"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: customDataValueFilter
      description: saveCustomDataValueFilter
  "/api/v1/filter/delete/{filterID}":
    delete:
      tags:
        - OrderRoutingFilter
      summary: deleteFilter
      parameters:
        - name: filterID
          in: path
          description: filterID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content: {}
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteFilter
  /api/v1/filter/testcriteria:
    get:
      tags:
        - OrderRoutingFilter
      summary: testFilter
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AbstractFilter"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: testFilter
  /api/v1/filter/testset:
    get:
      tags:
        - OrderRoutingFilter
      summary: testSetFilter
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AbstractFilter"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: testSetFilter
  "/api/v1/filter/{filterID}":
    get:
      tags:
        - OrderRoutingFilter
      summary: getFilter
      parameters:
        - name: filterID
          in: path
          description: filterID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AbstractFilter"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getFilter
  "/api/v1/group/delete/{groupID}":
    delete:
      tags:
        - OrderRoutingGroup
      summary: deleteGroup
      parameters:
        - name: groupID
          in: path
          description: groupID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content: {}
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteGroup
  /api/v1/group/test:
    get:
      tags:
        - OrderRoutingGroup
      summary: testGroup
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDocumentationLocationGroup"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: testGroup
  "/api/v1/group/{groupID}":
    get:
      tags:
        - OrderRoutingGroup
      summary: getGroup
      parameters:
        - name: groupID
          in: path
          description: groupID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDocumentationLocationGroup"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getGroup
  "/api/v1/group/{groupID}/setFilters":
    post:
      tags:
        - OrderRoutingGroup
      summary: setGroupFilters
      parameters:
        - name: groupID
          in: path
          description: groupID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: filterIDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDocumentationLocationGroup"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: filterIDs
      description: setGroupFilters
  "/api/v1/group/{groupID}/setSorts":
    post:
      tags:
        - OrderRoutingGroup
      summary: setGroupSorts
      parameters:
        - name: groupID
          in: path
          description: groupID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: sorts
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/LocationSort"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDocumentationLocationGroup"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: sorts
      description: setGroupSorts
  /api/v1/routing/candidates:
    post:
      tags:
        - OrderRoutingRouting
      summary: suggestCandidates
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CandidateSuggestionsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CandidateSuggestionsResponse"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: request
      description: suggestCandidates
  /api/v1/routing/samplerequest:
    get:
      tags:
        - OrderRoutingRouting
      summary: getSampleRequest
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestionRequest"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getSampleRequest
  /api/v1/routing/suggestion:
    post:
      tags:
        - OrderRoutingRouting
      summary: suggestRouting
      parameters:
        - name: returnSuggestionLog
          in: query
          description: returnSuggestionLog
          schema:
            type: boolean
            default: false
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuggestionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestionResponse"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: request
      description: suggestRouting
  /api/v1/settings:
    get:
      tags:
        - OrderRoutingSettings
      summary: getSettings
      parameters:
        - name: getDefaults
          in: query
          description: getDefaults
          schema:
            type: boolean
            default: true
        - name: siteID
          in: query
          description: siteID
          schema:
            type: integer
            format: int32
        - name: tenantID
          in: query
          description: tenantID
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderRoutingSettings"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getSettings
    put:
      tags:
        - OrderRoutingSettings
      summary: saveSettings
      requestBody:
        description: settings
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRoutingSettings"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderRoutingSettings"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: settings
      description: saveSettings
    delete:
      tags:
        - OrderRoutingSettings
      summary: deleteSettings
      parameters:
        - name: siteID
          in: query
          description: siteID
          schema:
            type: integer
            format: int32
        - name: tenantID
          in: query
          description: tenantID
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteSettings
  /api/v1/settings/filterAttributes:
    get:
      tags:
        - OrderRoutingSettings
      summary: getFilterAttributes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FilterAttribute"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getFilterAttributes
    put:
      tags:
        - OrderRoutingSettings
      summary: saveFilterAttribute
      requestBody:
        description: attribute
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FilterAttribute"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterAttribute"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: attribute
      description: saveFilterAttribute
  "/api/v1/settings/filterAttributes/{attributeName}":
    get:
      tags:
        - OrderRoutingSettings
      summary: getFilterAttribute
      parameters:
        - name: attributeName
          in: path
          description: attributeName
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterAttribute"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getFilterAttribute
    delete:
      tags:
        - OrderRoutingSettings
      summary: deleteFilterAttribute
      parameters:
        - name: attributeName
          in: path
          description: attributeName
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterAttribute"
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteFilterAttribute
  /api/v1/site:
    post:
      tags:
        - OrderRoutingSite
      summary: createSite
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiDocumentationCreateSiteRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ApiDocumentationSite"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: request
      description: createSite
    delete:
      tags:
        - OrderRoutingSite
      summary: deleteTenantData
      requestBody:
        description: request
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/DeleteSiteRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ApiDocumentationSite"
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      x-codegen-request-body-name: request
      description: deleteTenantData
  "/api/v1/sort/delete/{sortID}":
    delete:
      tags:
        - OrderRoutingSort
      summary: deleteSort
      parameters:
        - name: sortID
          in: path
          description: sortID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content: {}
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      description: deleteSort
  /api/v1/sort/test:
    get:
      tags:
        - OrderRoutingSort
      summary: testSort
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationSort"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: testSort
  "/api/v1/sort/{sortID}":
    get:
      tags:
        - OrderRoutingSort
      summary: getSort
      parameters:
        - name: sortID
          in: path
          description: sortID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationSort"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getSort
  /api/v1/tenant:
    post:
      tags:
        - OrderRoutingTenant
      summary: createTenant
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiDocumentationCreateTenantRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ApiDocumentationTenant"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: request
      description: createTenant
    delete:
      tags:
        - OrderRoutingTenant
      summary: deleteTenantData
      requestBody:
        description: request
        content:
          "*/*":
            schema:
              $ref: "#/components/schemas/DeleteTenantRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ApiDocumentationTenant"
        "204":
          description: No Content
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
      deprecated: false
      x-codegen-request-body-name: request
      description: deleteTenantData
  /api/v1/tenant/clone:
    post:
      tags:
        - OrderRoutingTenant
      summary: cloneTenantData
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiDocumentationCloneTenantRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ApiDocumentationTenant"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: request
      description: cloneTenantData
  /api/v1/group:
    post:
      tags:
        - OrderRoutingGroup
      summary: saveGroup
      requestBody:
        description: loc
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiDocumentationLocationGroup"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDocumentationLocationGroup"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: loc
      description: saveGroup
  /api/v1/routing/suggestionLog:
    get:
      tags:
        - OrderRoutingRouting
      summary: getSuggestionLog
      parameters:
        - name: externalResponseID
          in: query
          description: externalResponseID
          schema:
            type: string
        - name: orderID
          in: query
          description: orderID
          schema:
            type: integer
            format: int32
        - name: responseID
          in: query
          description: responseID
          schema:
            type: integer
            format: int32
        - name: suggestionID
          in: query
          description: suggestionID
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JsonNode"
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      description: getSuggestionLog
  /api/v1/sort:
    post:
      tags:
        - OrderRoutingSort
      summary: saveSort
      requestBody:
        description: loc
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationSort"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationSort"
        "201":
          description: Created
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
      deprecated: false
      x-codegen-request-body-name: loc
      description: saveSort
  "/commerce/catalog/storefront/discounts/autoaddtarget/{discountId}":
    get:
      tags:
        - DiscountRuntime
      parameters:
        - name: discountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutoAddDiscountTarget"
            text/json:
              schema:
                $ref: "#/components/schemas/AutoAddDiscountTarget"
            text/plain:
              schema:
                $ref: "#/components/schemas/AutoAddDiscountTarget"
      security:
        - bearerAuth: []
          clientOauth2: []
  /tax:
    post:
      tags:
        - TaxCapability
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ThrirdPartyTaxableOrder"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrirdPartyOrderTaxContext"
            text/json:
              schema:
                $ref: "#/components/schemas/ThrirdPartyOrderTaxContext"
            text/plain:
              schema:
                $ref: "#/components/schemas/ThrirdPartyOrderTaxContext"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/tax/estimate-order:
    post:
      tags:
        - TaxRuntime
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaxableOrder"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderTaxContext"
            text/json:
              schema:
                $ref: "#/components/schemas/OrderTaxContext"
            text/plain:
              schema:
                $ref: "#/components/schemas/OrderTaxContext"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/attributedefinition/attributes:
    get:
      tags:
        - Attribute
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Attribute
      summary: Add / Create Attribute
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminAttribute"
      description: Add / Create Attribute
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}":
    get:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminAttribute"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Attribute
      summary: Update attribute
      parameters:
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminAttribute"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttribute"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminAttribute"
      description: Update attribute
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Attribute
      summary: Delete attribute
      parameters:
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Delete attribute
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}/LocalizedContent/{localeCode}"
  : get:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}/LocalizedContent"
  : get:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}/VocabularyValues/{value}"
  : get:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Attribute
      summary: Update attribute vocabulary value
      parameters:
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: value
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
      description: Update attribute vocabulary value
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Attribute
      summary: Delete Attribute Vocabulary Value
      parameters:
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: value
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Delete Attribute Vocabulary Value
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}/VocabularyValues/{value}/LocalizedContent/{localeCode}"
  : get:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}/VocabularyValues/{value}/LocalizedContent"
  : get:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}/VocabularyValues"
  : get:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Attribute
      summary: Add attribute vocabulary value
      parameters:
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
      description: Add attribute vocabulary value
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Attribute
      summary: Update attribute vocabulary values
      parameters:
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
      description: Update attribute vocabulary values
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/attributes/{attributeFQN}/VocabularyValues/{value}/localizedContent"
  : post:
      tags:
        - Attribute
      parameters:
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/attributedefinition/attributes/typerules:
    get:
      tags:
        - Attribute
      summary: Retrieves a paged list of attribute type rules according to any
        specified filter criteria and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeTypeRuleCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeTypeRuleCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeTypeRuleCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/categories:
    get:
      tags:
        - Category
      summary: Retrieves a list of categories according to any specified filter
        criteria and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. The
            default value is 0.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: responseGroups
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminCategoryPagedCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminCategoryPagedCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminCategoryPagedCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Category
      summary: Adds a new category to the catalog's category hierarchy
      parameters:
        - name: incrementSequence
          in: query
          description:
            Sets the sequence number of the category to the current max
            sequence value plus 1 (e.g. 5 + 1 = 6)
          schema:
            type: boolean
            default: false
        - name: useProvidedId
          in: query
          description:
            If true, the provided Id value will be used as the CategoryId. If
            omitted or false, the system will generate a CategoryId
          schema:
            type: boolean
            default: false
      requestBody:
        description: Properties of the new category. Required properties
          ParentCategoryID and Content.Name.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminCategory"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminCategory"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminCategory"
      description: Specify a ParentCategoryID to determine where to locate the
        category in the hierarchy; if not specified it becomes a top-level
        category.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/categories/{categoryId}":
    get:
      tags:
        - Category
      summary: Retrieves the details of a single category
      parameters:
        - name: categoryId
          in: path
          description: Unique identifier of the category.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminCategory"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminCategory"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Category
      summary: Modifies a category such as moving it to another location in the
        category tree, or changing whether it is visible on the storefront
      parameters:
        - name: categoryId
          in: path
          description: Unique identifier of the category that you want to modify. Required.
          required: true
          schema:
            type: integer
            format: int32
        - name: cascadeVisibility
          in: query
          description:
            If true, when changing the display option for the category, change
            it for all subcategories also. Optional.
          schema:
            type: boolean
            default: false
      requestBody:
        description:
          Properties of the category that you want to modify. Required
          properties ParentCategoryID and Content.Name.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminCategory"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminCategory"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminCategory"
      description:
        This PUT replaces the existing resource, so be sure to include all
        the information that you want to maintain for the category. Any
        unspecified properties are set to null.
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Category
      summary: Deletes the category specified by its category ID
      parameters:
        - name: categoryId
          in: path
          description: Unique identifier of the category that you want to delete.
          required: true
          schema:
            type: integer
            format: int32
        - name: cascadeDelete
          in: query
          description:
            If true, any subcategories of a category are deleted when this
            category is deleted. Otherwise only the given category is deleted.
            Default is false.
          schema:
            type: boolean
            default: false
        - name: forceDelete
          in: query
          description:
            If true, category (and optionally subcategories) will be deleted
            even if there are products referecing them.  Default is false.
          schema:
            type: boolean
            default: false
        - name: reassignToParent
          in: query
          description:
            If true, and child categories of the given category will be
            reassigned to the parent of the given category. Only applies if
            cascadeDelete is false. Default is false.
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/categories/{categoryId}/children":
    get:
      tags:
        - Category
      summary: Retrieves the immediate subcategories of a category
      parameters:
        - name: categoryId
          in: path
          description:
            Unique identifier of the category whose subcategories you want to
            get.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminCategoryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminCategoryCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminCategoryCollection"
      description: "\r

        This is a list of subcategories at the same level (siblings). \r

        You can use a list of siblings, for example, to display the
        categories in a horizontal list."
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/categories/ValidateDynamicExpression:
    post:
      tags:
        - Category
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DynamicExpression"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DynamicExpression"
            text/json:
              schema:
                $ref: "#/components/schemas/DynamicExpression"
            text/plain:
              schema:
                $ref: "#/components/schemas/DynamicExpression"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/categories/ValidateRealTimeDynamicExpression:
    post:
      tags:
        - Category
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DynamicExpression"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DynamicExpression"
            text/json:
              schema:
                $ref: "#/components/schemas/DynamicExpression"
            text/plain:
              schema:
                $ref: "#/components/schemas/DynamicExpression"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/categories/{categoryId}/remove-products":
    post:
      tags:
        - Category
      summary: Removes the products in the provided product code list from the
        specified category
      parameters:
        - name: categoryId
          in: path
          description:
            Unique identifier of the category that you want products removed
            from.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: A list of products to be removed from the category.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/categories/{categoryId}/add-products":
    post:
      tags:
        - Category
      summary:
        Adds the products in the provided product code list to the specified
        category
      parameters:
        - name: categoryId
          in: path
          description: Unique identifier of the category that you want produts added to.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: A list of products to be added to the category.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/corefields/search:
    get:
      tags:
        - CoreFields
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoreFieldCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CoreFieldCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CoreFieldCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/corefields/search/product:
    get:
      tags:
        - CoreFields
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoreFieldCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CoreFieldCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CoreFieldCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/corefields/search/category:
    get:
      tags:
        - CoreFields
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoreFieldCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CoreFieldCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CoreFieldCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/corefields/search/boost:
    get:
      tags:
        - CoreFields
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoreFieldCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CoreFieldCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CoreFieldCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/couponsets/unique-code:
    get:
      tags:
        - CouponSet
      summary: Returns a random 4 character code that is unique as a coupon set code
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/couponsets/validate-unique-code:
    post:
      tags:
        - CouponSet
      summary: Tests code for uniqueness and validity
      parameters:
        - name: code
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Tests code for uniqueness and validity
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/couponsets/{couponSetCode}":
    get:
      tags:
        - CouponSet
      summary: Returns a single Mozu
      parameters:
        - name: couponSetCode
          in: path
          description: CouponSetCode for the requested CouponSet
          required: true
          schema:
            type: string
        - name: includeCounts
          in: query
          description: Include the redemption counts and coupon counts
          schema:
            type: boolean
            default: false
        - name: responseGroups
          in: query
          description:
            '"counts" includes the number of redemptions, coupon codes, and
            assigned discounts.'
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CouponSet"
            text/json:
              schema:
                $ref: "#/components/schemas/CouponSet"
            text/plain:
              schema:
                $ref: "#/components/schemas/CouponSet"
      description: roductAdmin.Contracts.CouponSet
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CouponSet
      summary: Update a Mozu
      parameters:
        - name: couponSetCode
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CouponSet"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CouponSet"
            text/json:
              schema:
                $ref: "#/components/schemas/CouponSet"
            text/plain:
              schema:
                $ref: "#/components/schemas/CouponSet"
      description: "roductAdmin.Contracts.CouponSet representation.\r

        You can not update the Code or ID once the set is created."
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - CouponSet
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/couponsets:
    get:
      tags:
        - CouponSet
      summary: Returns a paged collection of CouponSets
      parameters:
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
        - name: filter
          in: query
          description: ""
          schema:
            type: string
        - name: includeCounts
          in: query
          description: Include coupon and redemption counts
          schema:
            type: boolean
            default: false
        - name: responseGroups
          in: query
          description: '"counts" returns discount and couponCode counts'
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CouponSetCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CouponSetCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CouponSetCollection"
      description: Returns a paged collection of CouponSets
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CouponSet
      summary: Adds a single Mozu
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CouponSet"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CouponSet"
            text/json:
              schema:
                $ref: "#/components/schemas/CouponSet"
            text/plain:
              schema:
                $ref: "#/components/schemas/CouponSet"
      description: roductAdmin.Contracts.CouponSet
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes":
    get:
      tags:
        - CouponSet
      summary: Returns a paged collection of Coupons
      parameters:
        - name: couponSetCode
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description: ""
          schema:
            type: string
        - name: filter
          in: query
          description: ""
          schema:
            type: string
        - name: includeCounts
          in: query
          description: Includes coupon redemption counts
          schema:
            type: boolean
            default: false
        - name: responseGroups
          in: query
          description: counts
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CouponCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CouponCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CouponCollection"
      description: Returns a paged collection of Coupons
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CouponSet
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Coupon"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes/{couponCode}":
    get:
      tags:
        - CouponSet
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
        - name: couponCode
          in: path
          required: true
          schema:
            type: string
        - name: includeCounts
          in: query
          schema:
            type: boolean
            default: false
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Coupon"
            text/json:
              schema:
                $ref: "#/components/schemas/Coupon"
            text/plain:
              schema:
                $ref: "#/components/schemas/Coupon"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - CouponSet
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
        - name: couponCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/couponsets/{couponSetCode}/couponcodes/remove":
    post:
      tags:
        - CouponSet
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/couponsets/{couponSetCode}/assigneddiscounts":
    get:
      tags:
        - CouponSet
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AssignedDiscount"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AssignedDiscount"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AssignedDiscount"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CouponSet
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignedDiscount"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/couponsets/{couponSetCode}/assigneddiscounts/{discountId}"
  : delete:
      tags:
        - CouponSet
      parameters:
        - name: couponSetCode
          in: path
          required: true
          schema:
            type: string
        - name: discountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/currency:
    post:
      tags:
        - Currency
      summary: Adds a new product sort definition
      requestBody:
        description: "Properties of the currency-localization to create.\r

          Required properties: CurrencyCode"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CurrencyLocalization"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrencyLocalization"
            text/json:
              schema:
                $ref: "#/components/schemas/CurrencyLocalization"
            text/plain:
              schema:
                $ref: "#/components/schemas/CurrencyLocalization"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Currency
      summary: Gets all currency-localizations
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrencyLocalizationCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CurrencyLocalizationCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CurrencyLocalizationCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/currency/{currencyCode}":
    delete:
      tags:
        - Currency
      summary: Deletes the currency-localization specified by its currency code
      parameters:
        - name: currencyCode
          in: path
          description: Currency code.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Currency
      summary: Gets a single currency-localization
      parameters:
        - name: currencyCode
          in: path
          description: Currency code.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrencyLocalization"
            text/json:
              schema:
                $ref: "#/components/schemas/CurrencyLocalization"
            text/plain:
              schema:
                $ref: "#/components/schemas/CurrencyLocalization"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Currency
      summary: Updates the details of a currency-localization
      parameters:
        - name: currencyCode
          in: path
          description: Currency code.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of the currency-localization to update.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CurrencyLocalization"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrencyLocalization"
            text/json:
              schema:
                $ref: "#/components/schemas/CurrencyLocalization"
            text/plain:
              schema:
                $ref: "#/components/schemas/CurrencyLocalization"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/currency/{currencyCode}/exchangerates":
    post:
      tags:
        - Currency
      summary: Add multiple exchange rates for a specified currency-code
      parameters:
        - name: currencyCode
          in: path
          description: Currency code
          required: true
          schema:
            type: string
      requestBody:
        description: Exchange rates for the currency
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductAdminCurrencyExchangeRate"
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Currency
      summary:
        Retrieves a list of exchange rates for a specified currency-code and
        filter criteria
      parameters:
        - name: currencyCode
          in: path
          description: Currency code
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrencyExchangeRateCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CurrencyExchangeRateCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CurrencyExchangeRateCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Currency
      summary: Update multiple exchange rates for a specified currency-code
      parameters:
        - name: currencyCode
          in: path
          description: Currency code
          required: true
          schema:
            type: string
      requestBody:
        description: Exchange rates for the currency
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductAdminCurrencyExchangeRate"
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/currency/{currencyCode}/exchangerates/{toCurrencyCode}"
  : delete:
      tags:
        - Currency
      summary:
        Delete a single exchange rate for a specified currency-code and target
        currency-code
      parameters:
        - name: currencyCode
          in: path
          description: Currency code
          required: true
          schema:
            type: string
        - name: toCurrencyCode
          in: path
          description: C
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Currency
      summary:
        Retrieves a single exchange rate for a specified currency-code and
        target-currency-code
      parameters:
        - name: currencyCode
          in: path
          description: Currency code
          required: true
          schema:
            type: string
        - name: toCurrencyCode
          in: path
          description: Target currency code
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminCurrencyExchangeRate"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminCurrencyExchangeRate"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminCurrencyExchangeRate"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/discounts/generate-random-coupon:
    get:
      tags:
        - Discount
      summary: Generates a random code for a coupon
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/discounts:
    get:
      tags:
        - Discount
      summary: Retrieves a list of discounts according to any specified filter
        criteria and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscountCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DiscountCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/DiscountCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Discount
      summary: Creates a discount
      requestBody:
        description: "Properties of the discount to create. Required properties:
          Content.Name, AmountType, StartDate, and Target.Type."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminDiscount"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscount"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscount"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscount"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/discounts/{discountId}":
    get:
      tags:
        - Discount
      summary: Retrieves the details of a single discount
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscount"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscount"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscount"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Discount
      summary: Modifies a discount
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: "Properties of the discount to update. \r

          \            Required properties: Content.Name, AmountType,
          StartDate, and Target.Type. \r

          \            Any unspecified properties are set to null and
          boolean variables are set to false."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminDiscount"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscount"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscount"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscount"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Discount
      summary: Deletes a discount specified by its discount ID
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/discounts/{discountId}/content":
    get:
      tags:
        - Discount
      summary: Retrieves the localized content specified for the specified discount
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscountLocalizedContent"
            text/json:
              schema:
                $ref: "#/components/schemas/DiscountLocalizedContent"
            text/plain:
              schema:
                $ref: "#/components/schemas/DiscountLocalizedContent"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Discount
      summary: Modifies the localized content for the specified discount
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description:
          "New Name and/or LocaleCode. Properties of the content to update.
          Required property: Name."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiscountLocalizedContent"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscountLocalizedContent"
            text/json:
              schema:
                $ref: "#/components/schemas/DiscountLocalizedContent"
            text/plain:
              schema:
                $ref: "#/components/schemas/DiscountLocalizedContent"
      description: Allows you to rename the discount without modifying any other
        discount properties.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/discounts/{discountId}/target":
    get:
      tags:
        - Discount
      summary:
        Retrieves the discount target, that is which products, categories, or
        shipping methods are eligible for the discount
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscountTarget"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscountTarget"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscountTarget"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Discount
      summary:
        Modifies properties of the discount target, for example, the dollar
        amount, or precentage off the price
      parameters:
        - name: discountId
          in: path
          description: Unique identifier of the discount. System-supplied and read-only.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: "Properties of the discount target to modify. \r

          \            Required properties: Target.Type. Any
          unspecified properties are set to null and boolean variables to
          false."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminDiscountTarget"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscountTarget"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscountTarget"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminDiscountTarget"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/discountsettings/{catalogId}":
    get:
      tags:
        - DiscountSettings
      parameters:
        - name: catalogId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscountSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/DiscountSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/DiscountSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - DiscountSettings
      parameters:
        - name: catalogId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiscountSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscountSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/DiscountSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/DiscountSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/facets/{facetId}":
    get:
      tags:
        - Facet
      summary: Retrieves the details of a Facet Definition
      parameters:
        - name: facetId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: validate
          in: query
          description: ""
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminFacet"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminFacet"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminFacet"
      description: Retrieves the details of a Facet Definition
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Facet
      summary: Modifies a Facet definition
      parameters:
        - name: facetId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminFacet"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminFacet"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminFacet"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminFacet"
      description: Modifies a Facet definition
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Facet
      summary: Deletes the Facet definition from the store
      parameters:
        - name: facetId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: Deletes the Facet definition from the store
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/facets:
    post:
      tags:
        - Facet
      summary: Adds a new Facet to a category in a catalog
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminFacet"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminFacet"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminFacet"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminFacet"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/facets/category:
    get:
      tags:
        - Facet
      summary: Retrieves a list of configured, and optionally available, Facet
        Configurations for the specified category
      parameters:
        - name: categoryId
          in: query
          description: ""
          schema:
            type: integer
            format: int32
        - name: categoryCode
          in: query
          schema:
            type: string
        - name: includeAvailable
          in: query
          description: ""
          schema:
            type: boolean
        - name: validate
          in: query
          description: ""
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetSet"
            text/json:
              schema:
                $ref: "#/components/schemas/FacetSet"
            text/plain:
              schema:
                $ref: "#/components/schemas/FacetSet"
      description:
        Retrieves a list of configured, and optionally available, Facet
        Configurations for the specified category
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/facets/category/{categoryId}":
    get:
      tags:
        - Facet
      summary: Retrieves a list of configured, and optionally available, Facet
        Configurations for the specified category
      parameters:
        - name: categoryId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: includeAvailable
          in: query
          description: ""
          schema:
            type: boolean
        - name: validate
          in: query
          description: ""
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetSet"
            text/json:
              schema:
                $ref: "#/components/schemas/FacetSet"
            text/plain:
              schema:
                $ref: "#/components/schemas/FacetSet"
      description:
        Retrieves a list of configured, and optionally available, Facet
        Configurations for the specified category
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/locationinventory/{locationCode}":
    get:
      tags:
        - LocationInventory
      parameters:
        - name: locationCode
          in: path
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: filterFunctions
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminLocationInventoryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminLocationInventoryCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminLocationInventoryCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - LocationInventory
      parameters:
        - name: locationCode
          in: path
          required: true
          schema:
            type: string
        - name: performUpserts
          in: query
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductAdminLocationInventory"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminLocationInventory"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminLocationInventory"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminLocationInventory"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - LocationInventory
      parameters:
        - name: locationCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/LocationInventoryAdjustment"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminLocationInventory"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminLocationInventory"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminLocationInventory"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/locationinventory/{locationCode}/{productCode}":
    get:
      tags:
        - LocationInventory
      parameters:
        - name: locationCode
          in: path
          required: true
          schema:
            type: string
        - name: productCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminLocationInventory"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminLocationInventory"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminLocationInventory"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - LocationInventory
      parameters:
        - name: locationCode
          in: path
          required: true
          schema:
            type: string
        - name: productCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/mastercatalogs:
    get:
      tags:
        - MasterCatalog
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterCatalogCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/MasterCatalogCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/MasterCatalogCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/mastercatalogs/{masterCatalogId}":
    get:
      tags:
        - MasterCatalog
      summary: Get a MasterCatalog
      parameters:
        - name: masterCatalogId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminMasterCatalog"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminMasterCatalog"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminMasterCatalog"
      description: Get a MasterCatalog
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - MasterCatalog
      summary: Update the publishingMode of a MasterCatalog
      parameters:
        - name: masterCatalogId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminMasterCatalog"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminMasterCatalog"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminMasterCatalog"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminMasterCatalog"
      description: Update the publishingMode of a MasterCatalog
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/pricelists:
    get:
      tags:
        - PriceList
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceListCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/PriceListCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/PriceListCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - PriceList
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminPriceList"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminPriceList"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminPriceList"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminPriceList"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/pricelists/{priceListCode}":
    get:
      tags:
        - PriceList
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminPriceList"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminPriceList"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminPriceList"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - PriceList
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminPriceList"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminPriceList"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminPriceList"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminPriceList"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - PriceList
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
        - name: cascadeDeleteEntries
          in: query
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/pricelists/{priceListCode}/entries":
    get:
      tags:
        - PriceList
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceListEntryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/PriceListEntryCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/PriceListEntryCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - PriceList
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PriceListEntry"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceListEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/PriceListEntry"
            text/plain:
              schema:
                $ref: "#/components/schemas/PriceListEntry"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/pricelists/{priceListCode}/entries/{productCode}/{currencyCode}"
  : get:
      tags:
        - PriceList
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceListEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/PriceListEntry"
            text/plain:
              schema:
                $ref: "#/components/schemas/PriceListEntry"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - PriceList
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PriceListEntry"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceListEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/PriceListEntry"
            text/plain:
              schema:
                $ref: "#/components/schemas/PriceListEntry"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - PriceList
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/pricelists/bulkaddentries:
    post:
      tags:
        - PriceList
      parameters:
        - name: publishEvents
          in: query
          schema:
            type: boolean
            default: true
        - name: invalidateCache
          in: query
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/PriceListEntry"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/pricelists/bulkupdateentries:
    post:
      tags:
        - PriceList
      parameters:
        - name: publishEvents
          in: query
          schema:
            type: boolean
            default: true
        - name: invalidateCache
          in: query
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/PriceListEntry"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/pricelists/bulkdeleteentries:
    post:
      tags:
        - PriceList
      parameters:
        - name: publishEvents
          in: query
          schema:
            type: boolean
            default: true
        - name: invalidateCache
          in: query
          schema:
            type: boolean
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/PriceListEntry"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/products:
    get:
      tags:
        - Product
      summary:
        Gets a List of Products
      parameters:
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a single query. The default value is 20 and
            the maximum value is 200.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description:
            "The element to sort the results by and the order in which the
            results appear. Either ascending or descending order. For example,
            to sort the results by “ID” ascending then by “CreateDate”
            descending, use: id asc,createdate desc."
          schema:
            type: string
        - name: responseGroups
          in: query
          description:
            "Used to get more specific information from the request. For
            example to get discounts applied to a product use the
            AppliedProducts response group. Available response groups:
            ApplicableDiscounts, VariationOptions, and BaseProductCode."
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: q
          in: query
          schema:
            type: string
        - name: qLimit
          in: query
          schema:
            type: integer
            format: int32
        - name: noCount
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminProductCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Product
      summary: Creates a new product
      requestBody:
        description:
          "Properties of the new product. Required properties: ProductCode,
          Content.ProductName, and Price.ListPrice.
          Mozu.ProductAdmin.Contracts.Product"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminProduct"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProduct"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProduct"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminProduct"
      description:
        You supply a product name, product code, price and other product
        characteristics such as its attributes, categories where the product
        belongs, whether the product has configurable options, stand-alone
        options, and so on.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/products/{productCode}":
    get:
      tags:
        - Product
      summary: Gets a Product
      parameters:
        - name: productCode
          in: path
          description:
            Merchant-created code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          description:
            "Used to get more specific information from the request. For
            example to get discounts applied to a product use the
            AppliedProducts response group. Available response groups:
            ApplicableDiscounts, VariationOptions, and BaseProductCode."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProduct"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProduct"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminProduct"
      description: For example, to get the BaseProductCode of a product.
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      summary: Updates a Product
      parameters:
        - name: productCode
          in: path
          description:
            Merchant-created code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
      requestBody:
        description:
          "Properties of the product that you want to update. Required
          properties: ProductCode, Content.ProductName, and Price.ListPrice."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminProduct"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProduct"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProduct"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminProduct"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Product
      summary: Deletes a product 
      parameters:
        - name: productCode
          in: path
          description:
            Merchant-created code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/products/{productCode}/ProductInCatalogs/{catalogId}"
  : put:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: catalogId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInCatalogInfo"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductInCatalogInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductInCatalogInfo"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductInCatalogInfo"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: catalogId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: catalogId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductInCatalogInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductInCatalogInfo"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductInCatalogInfo"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/products/{productCode}/ProductInCatalogs":
    get:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductInCatalogInfo"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductInCatalogInfo"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductInCatalogInfo"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductInCatalogInfo"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductInCatalogInfo"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductInCatalogInfo"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductInCatalogInfo"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInCatalogInfo"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductInCatalogInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductInCatalogInfo"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductInCatalogInfo"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/products/Actions/RenameProductCodes:
    post:
      tags:
        - Product
      summary: Rename Product Code
      requestBody:
        description: An array specifying the existing productCode and the new
          productCode it should be renamed to
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductCodeRename"
      responses:
        "200":
          description: Success
      description:
        Changing the resource identifier of a product could cause problems
        for established products.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/products/{productCode}/variations":
    get:
      tags:
        - Product
      summary:
        "Retrieves a paged list of product variations for a specific product
        according to any specified filter criteria and\r

        sort options"
      parameters:
        - name: productCode
          in: path
          description:
            Merchant-supplied code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          description:
            "Used to page results from a query. Indicates the zero-based offset
            in the complete result set\r

            where the returned entities begin. For example, with a
            PageSize of 25, to get the 51st through the 75th items,\r

            startIndex=3. The default value is 0. Optional."
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            "Used to page results from a query. Indicates the maximum number of
            entities to return from a\r

            query. The default value is 20 and the maximum value is
            200. Optional."
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description:
            "The element to sort the results by and the order in which the
            results appear. Either ascending\r

            (a-z) or descending (z-a) order. Optional."
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not\r

            equals, gt=greater than, lt = less than or equals, gt =
            greater than or equals, lt = less than or equals, sw =\r

            starts with, or cont = contains. Optional."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductVariationPagedCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductVariationPagedCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductVariationPagedCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      summary:
        Modify multiple product variations
      parameters:
        - name: productCode
          in: path
          description:
            Merchant-supplied code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of the product variations that you are modifying. Required.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductVariationCollection"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductVariationCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductVariationCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductVariationCollection"
      description: "Use to set IsActive to true for\r

        variations that represent configurable options for sale. Also
        use to change the price or inventory count of an\r

        existing product variation. Read-only options are ignored."
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/products/{productCode}/variations/{variationKey}":
    get:
      tags:
        - Product
      summary:
        Get  Product Variation 
      parameters:
        - name: productCode
          in: path
          description:
            Merchant-created code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          description:
            Unique identifier for a single product variation. System-supplied
            and read-only.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductVariation"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductVariation"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductVariation"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      summary: Update Product Variaiton
      parameters:
        - name: productCode
          in: path
          description:
            Merchant-created code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          description:
            Unique identifier for a single variation. System-supplied and
            read-only.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of the product variation that you are modifying. Required.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductVariation"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductVariation"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductVariation"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductVariation"
      description: "Typically used to change the price or\r

        inventory count of an existing product variation. Read-only
        options are ignored."
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Product
      summary: Deletes Product Variation
      parameters:
        - name: productCode
          in: path
          description:
            Merchant-created code associated with the product, for example, a
            SKU. Required.
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          description:
            Unique identifier for a single product variation. System-supplied
            and read-only.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/products/{productCode}/variations/{variationKey}/localizedDeltaPrice"
  : get:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductVariationDeltaPrice"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductVariationDeltaPrice"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductVariationDeltaPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductVariationDeltaPrice"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductVariationDeltaPrice"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductVariationDeltaPrice"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductVariationDeltaPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductVariationDeltaPrice"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductVariationDeltaPrice"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductVariationDeltaPrice"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductVariationDeltaPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/products/{productCode}/variations/{variationKey}/localizedDeltaPrice/{currencyCode}"
  : get:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductVariationDeltaPrice"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductVariationDeltaPrice"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductVariationDeltaPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductVariationDeltaPrice"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductVariationDeltaPrice"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductVariationDeltaPrice"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductVariationDeltaPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/products/{productCode}/variations/{variationKey}/localizedPrice"
  : get:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductVariationFixedPrice"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductVariationFixedPrice"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductVariationFixedPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductVariationFixedPrice"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductVariationFixedPrice"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductVariationFixedPrice"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductVariationFixedPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductVariationFixedPrice"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductVariationFixedPrice"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductVariationFixedPrice"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductVariationFixedPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/products/{productCode}/variations/{variationKey}/localizedPrice/{currencyCode}"
  : get:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductVariationFixedPrice"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductVariationFixedPrice"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductVariationFixedPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductVariationFixedPrice"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductVariationFixedPrice"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductVariationFixedPrice"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductVariationFixedPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: variationKey
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/products/{productCode}/Extras":
    get:
      tags:
        - Product
      summary: Get extras for the product
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductExtra"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductExtra"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductExtra"
      description: Get extras for the product
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Product
      summary: Add extra
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductExtra"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductExtra"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductExtra"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductExtra"
      description: Add extra
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}":
    get:
      tags:
        - Product
      summary: Get individual extra
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductExtra"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductExtra"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductExtra"
      description: Get individual extra
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      summary: Update extra
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductExtra"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductExtra"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductExtra"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductExtra"
      description: Update extra
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Product
      summary: Delete extra
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Delete extra
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}/Values/{value}/localizedDeltaPrice"
  : get:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/products/{productCode}/Extras/{attributeFQN}/Values/{value}/localizedDeltaPrice/{currencyCode}"
  : put:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: currencyCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/products/{ProductCode}/LocationInventory":
    get:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminLocationInventoryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminLocationInventoryCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminLocationInventoryCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: performUpserts
          in: query
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductAdminLocationInventory"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminLocationInventory"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminLocationInventory"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminLocationInventory"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/LocationInventoryAdjustment"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminLocationInventory"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminLocationInventory"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminLocationInventory"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/products/{ProductCode}/LocationInventory/{LocationCode}"
  : get:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: locationCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminLocationInventory"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminLocationInventory"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminLocationInventory"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: locationCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/products/{productCode}/Options":
    get:
      tags:
        - Product
      summary: Get options for the product
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminProductOption"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminProductOption"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminProductOption"
      description: Get options for the product
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Product
      summary: Add option
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminProductOption"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductOption"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductOption"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminProductOption"
      description: Add option
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/products/{productCode}/Options/{attributeFQN}":
    get:
      tags:
        - Product
      summary: Get individual option
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductOption"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductOption"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminProductOption"
      description: Get individual option
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      summary: Update option
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminProductOption"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductOption"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductOption"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminProductOption"
      description: Update option
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Product
      summary: Delete option
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Delete option
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/products/{productCode}/Properties":
    get:
      tags:
        - Product
      summary: Get properties for the product
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminProductProperty"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminProductProperty"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductAdminProductProperty"
      description: Get properties for the product
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Product
      summary: Add property
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminProductProperty"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductProperty"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductProperty"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminProductProperty"
      description: Add property
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/products/{productCode}/Properties/{attributeFQN}":
    get:
      tags:
        - Product
      summary: Get individual property
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductProperty"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductProperty"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminProductProperty"
      description: Get individual property
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      summary: Update property
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductAdminProductProperty"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductProperty"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductAdminProductProperty"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductAdminProductProperty"
      description: Update property
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Product
      summary: Delete property
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Delete property
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/products/{productCode}/Properties/{attributeFQN}/values/{value}/LocalizedContent"
  : get:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/products/{productCode}/Properties/{attributeFQN}/values/{value}/LocalizedContent/{localeCode}"
  : get:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Product
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: attributeFQN
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/productsortdefinitions:
    get:
      tags:
        - ProductSortDefinition
      summary:
        Retrieves a list of product sort definitions according to any specified
        filter criteria and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. The
            default value is 0.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 20 and the
            maximum value is 200.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductSortDefinitionPagedCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductSortDefinitionPagedCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductSortDefinitionPagedCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - ProductSortDefinition
      summary: Adds a new product sort definition
      parameters:
        - name: useProvidedId
          in: query
          description: If true, the provided Id value will be used as the
            ProductSortDefinitionId. If omitted or false, the system will
            generate a ProductSortDefinitionId
          schema:
            type: boolean
            default: false
      requestBody:
        description:
          Properties of the new product sort definition. Required properties
          of StartDate and Name.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductSortDefinition"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductSortDefinition"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductSortDefinition"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductSortDefinition"
      description: Adds a new product sort definition
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/productsortdefinitions/{productSortDefinitionId}":
    get:
      tags:
        - ProductSortDefinition
      summary: Gets a single product sort definition
      parameters:
        - name: productSortDefinitionId
          in: path
          description: Unique identifier of the product sort definition.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductSortDefinition"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductSortDefinition"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductSortDefinition"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - ProductSortDefinition
      summary: Updates the details of a product sort definition
      parameters:
        - name: productSortDefinitionId
          in: path
          description: Unique identifier of the product sort definition.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: The details of the product sort definition to update.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductSortDefinition"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductSortDefinition"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductSortDefinition"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductSortDefinition"
      description: Updates the details of a product sort definition
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - ProductSortDefinition
      summary: Deletes the product sort definition specified by its
        ProductSortDefinitionID
      parameters:
        - name: productSortDefinitionId
          in: path
          description: Unique identifier of the product sort definition.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/attributedefinition/producttypes:
    get:
      tags:
        - ProductType
      summary:
        Retrieves a list of product types according to any specified filter
        criteria and sort options
      parameters:
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a PageSize of 25, to get the 51st through the 75th
            items, startIndex=3. The default value is 0.
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a single query. The default value is 20 and
            the maximum value is 200.
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          description:
            "The element to sort the results by and the order in which the
            results appear. Either ascending or descending order. For example,
            to sort the results by “ID” ascending then by “CreateDate”
            descending, use: id asc,createdate desc."
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: responseGroups
          in: query
          description:
            "Used to get more specific information from the request. For
            example to get discounts applied to a product use the
            AppliedProducts response group. Available response groups:
            ApplicableDiscounts, VariationOptions, and BaseProductCode."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductTypeCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductTypeCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductTypeCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - ProductType
      summary: Add or create product type
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductType"
      description: Add or create product type
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}":
    get:
      tags:
        - ProductType
      summary: Get product type by Id
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductType"
      description: Get product type by Id
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - ProductType
      summary: Update product type
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductType"
      description: Update product type
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - ProductType
      summary: Delete product type
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      description: Delete product type
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/variations"
  : post:
      tags:
        - ProductType
      parameters:
        - name: productTypeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: productCode
          in: query
          schema:
            type: string
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductAdminProductOption"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductVariationPagedCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductVariationPagedCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductVariationPagedCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/Extras"
  : get:
      tags:
        - ProductType
      summary: Get extras
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeInProductType"
      description: Get extras
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - ProductType
      summary: Add extra
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeInProductType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
      description: Add extra
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/Extras/{attributeFQN}"
  : get:
      tags:
        - ProductType
      summary: Get extra
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
      description: Get extra
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - ProductType
      summary: Update extra
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeInProductType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
      description: Update extra
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - ProductType
      summary: Delete extra
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Delete extra
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/Options"
  : get:
      tags:
        - ProductType
      summary: Get options for the product type
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeInProductType"
      description: Get options for the product type
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - ProductType
      summary: Add option
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeInProductType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
      description: Add option
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/Options/{attributeFQN}"
  : get:
      tags:
        - ProductType
      summary: Get individual option
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
      description: Get individual option
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - ProductType
      summary: Update option
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeInProductType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
      description: Update option
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - ProductType
      summary: Delete option
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Delete option
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/Properties"
  : get:
      tags:
        - ProductType
      summary: Get properties
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeInProductType"
      description: Get properties
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - ProductType
      summary: Add or create property
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeInProductType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
      description: Add or create property
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/Properties/{attributeFQN}"
  : get:
      tags:
        - ProductType
      summary: Get property
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
      description: Get property
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - ProductType
      summary: Update property
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeInProductType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
      description: Update property
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - ProductType
      summary: Delete property
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Delete property
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/VariantProperties"
  : get:
      tags:
        - ProductType
      summary: Get properties
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AttributeInProductType"
      description: Get properties
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - ProductType
      summary: Add or create property
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeInProductType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
      description: Add or create property
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/attributedefinition/producttypes/{productTypeId}/VariantProperties/{attributeFQN}"
  : get:
      tags:
        - ProductType
      summary: Get property
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
      description: Get property
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - ProductType
      summary: Update property
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeInProductType"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
            text/plain:
              schema:
                $ref: "#/components/schemas/AttributeInProductType"
      description: Update property
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - ProductType
      summary: Delete property
      parameters:
        - name: productTypeId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
        - name: attributeFQN
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Delete property
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/publishing/publishdrafts:
    post:
      tags:
        - Publishing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublishingScope"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/publishing/discarddrafts:
    post:
      tags:
        - Publishing
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublishingScope"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/publishing/publishsets:
    get:
      tags:
        - Publishing
      summary: Retrieves a list of PublishSets including the product counts
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublishSetCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/PublishSetCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/PublishSetCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Publishing
      summary: ""
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublishSet"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublishSet"
            text/json:
              schema:
                $ref: "#/components/schemas/PublishSet"
            text/plain:
              schema:
                $ref: "#/components/schemas/PublishSet"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/publishing/publishsets/{publishSetCode}":
    get:
      tags:
        - Publishing
      summary: Retrieves the details of a single PublishSet
      parameters:
        - name: publishSetCode
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublishSet"
            text/json:
              schema:
                $ref: "#/components/schemas/PublishSet"
            text/plain:
              schema:
                $ref: "#/components/schemas/PublishSet"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Publishing
      summary: Removes all details about a PublishSet from the product service
      parameters:
        - name: publishSetCode
          in: path
          description: The code of the PublishSet to delete
          required: true
          schema:
            type: string
        - name: discardDrafts
          in: query
          description: Whether to also discard the drafts for this publish set.
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
      description: |-

        If the discardDrafts param is true, it also deletes the product drafts.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/search/synonym-definitions/{localeCode}":
    get:
      tags:
        - Search
      parameters:
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinitionCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinitionCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/SynonymDefinitionCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Search
      parameters:
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SynonymDefinitionCollection"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinitionCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinitionCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/SynonymDefinitionCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/catalog/admin/search/master-catalog-synonym-definitions/{languageCode}"
  : get:
      tags:
        - Search
      parameters:
        - name: languageCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinitionCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinitionCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/SynonymDefinitionCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/search/synonyms:
    get:
      tags:
        - Search
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinitionPagedCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinitionPagedCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/SynonymDefinitionPagedCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Search
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SynonymDefinition"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinition"
            text/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinition"
            text/plain:
              schema:
                $ref: "#/components/schemas/SynonymDefinition"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/search/synonyms/{synonymId}":
    get:
      tags:
        - Search
      parameters:
        - name: synonymId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinition"
            text/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinition"
            text/plain:
              schema:
                $ref: "#/components/schemas/SynonymDefinition"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Search
      parameters:
        - name: synonymId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SynonymDefinition"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinition"
            text/json:
              schema:
                $ref: "#/components/schemas/SynonymDefinition"
            text/plain:
              schema:
                $ref: "#/components/schemas/SynonymDefinition"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Search
      parameters:
        - name: synonymId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/search/searchtuningrules:
    get:
      tags:
        - Search
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchTuningRuleCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchTuningRuleCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchTuningRuleCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Search
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchTuningRule"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchTuningRule"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchTuningRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchTuningRule"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/search/searchtuningrules/{searchTuningRuleCode}":
    get:
      tags:
        - Search
      parameters:
        - name: searchTuningRuleCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchTuningRule"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchTuningRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchTuningRule"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Search
      parameters:
        - name: searchTuningRuleCode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchTuningRule"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchTuningRule"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchTuningRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchTuningRule"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Search
      parameters:
        - name: searchTuningRuleCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/search/searchtuningrulesortfields:
    get:
      tags:
        - Search
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchTuningRuleSortFields"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchTuningRuleSortFields"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchTuningRuleSortFields"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Search
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchTuningRuleSortFields"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchTuningRuleSortFields"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchTuningRuleSortFields"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchTuningRuleSortFields"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/search/campaigns:
    get:
      tags:
        - Search
      summary: Get site search campaign list
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CampaignSettingsCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CampaignSettingsCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CampaignSettingsCollection"
      description: Get site search campaign list
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Search
      summary: Adds or Updates (Upsert) the Campaign Settings for a specific site
      parameters:
        - name: fromSystemDefault
          in: query
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CampaignSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CampaignSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/CampaignSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/CampaignSettings"
      description: Adds or Updates (Upsert) the Campaign Settings for a specific site
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/search/campaigns/{campaignId}":
    get:
      tags:
        - Search
      summary: Get site search campaign
      parameters:
        - name: campaignId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CampaignSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/CampaignSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/CampaignSettings"
      description: Get site search campaign
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Search
      summary:
        Adds or Updates (Upsert) the Campaign Settings for a specific site and
        campaign
      parameters:
        - name: campaignId
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CampaignSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CampaignSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/CampaignSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/CampaignSettings"
      description:
        Adds or Updates (Upsert) the Campaign Settings for a specific site
        and campaign
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Search
      summary:
        Adds or Updates (Upsert) the Campaign Settings for a specific site and
        campaign
      parameters:
        - name: campaignId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CampaignSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/CampaignSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/CampaignSettings"
      description:
        Adds or Updates (Upsert) the Campaign Settings for a specific site
        and campaign
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/search/{name}/categorysuggestsettings":
    get:
      tags:
        - Search
      summary: Get CategorySuggestSettings for a specific SearchSettings
      parameters:
        - name: name
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SuggestSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/SuggestSettings"
      description: Get CategorySuggestSettings for a specific SearchSettings
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Search
      summary:
        Adds or Updates (Upsert) the CategorySuggestSettings for a specific
        SearchSetting
      parameters:
        - name: name
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuggestSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SuggestSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/SuggestSettings"
      description:
        Adds or Updates (Upsert) the CategorySuggestSettings for a specific
        SearchSetting
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Search
      summary: Deletes the CategorySuggestSettings for a specific SearchSetting
      parameters:
        - name: name
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Deletes the CategorySuggestSettings for a specific SearchSetting
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/search/{name}/listingsettings":
    get:
      tags:
        - Search
      summary: Get ListingSettings for a specific SearchSettings
      parameters:
        - name: name
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/ListingSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/ListingSettings"
      description: Get ListingSettings for a specific SearchSettings
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Search
      summary: Adds or Updates (Upsert) the ListingSettings for a specific SearchSetting
      parameters:
        - name: name
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListingSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/ListingSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/ListingSettings"
      description: Adds or Updates (Upsert) the ListingSettings for a specific SearchSetting
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Search
      summary: Deletes the ListingSettings for a specific SearchSetting
      parameters:
        - name: name
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Deletes the ListingSettings for a specific SearchSetting
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/search/{name}/productsuggestsettings":
    get:
      tags:
        - Search
      summary: Get ProductSuggestSettings for a specific SearchSettings
      parameters:
        - name: name
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SuggestSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/SuggestSettings"
      description: Get ProductSuggestSettings for a specific SearchSettings
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Search
      summary:
        Adds or Updates (Upsert) the ProductSuggestSettings for a specific
        SearchSetting
      parameters:
        - name: name
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductSuggestSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductSuggestSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductSuggestSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductSuggestSettings"
      description:
        Adds or Updates (Upsert) the ProductSuggestSettings for a specific
        SearchSetting
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Search
      summary: Deletes the ProductSuggestSettings for a specific SearchSetting
      parameters:
        - name: name
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Deletes the ProductSuggestSettings for a specific SearchSetting
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/search/redirect:
    get:
      tags:
        - Search
      summary: Get search redirect list
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchRedirectCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchRedirectCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchRedirectCollection"
      description: Get search redirect list
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - Search
      summary: Adds a search redirect for a specific site
      parameters:
        - name: fromSystemDefault
          in: query
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRedirect"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchRedirect"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchRedirect"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchRedirect"
      description: Adds a search redirect for a specific site
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/search/redirect/{redirectId}":
    get:
      tags:
        - Search
      summary: Get a search redirect
      parameters:
        - name: redirectId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchRedirect"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchRedirect"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchRedirect"
      description: Get a search redirect
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Search
      summary: Adds or Updates (Upsert) a specific search redirect for a site
      parameters:
        - name: redirectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRedirect"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchRedirect"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchRedirect"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchRedirect"
      description: Adds or Updates (Upsert) a specific search redirect for a site
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Search
      summary: Deletes a specific redirect for a site
      parameters:
        - name: redirectId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchRedirect"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchRedirect"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchRedirect"
      description: Deletes a specific redirect for a site
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/search/settings:
    get:
      tags:
        - Search
      summary: Get site search settings list
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchSettingsCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchSettingsCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchSettingsCollection"
      description: Get site search settings list
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Search
      summary: Adds or Updates (Upsert) the Search Settings for a specific site
      parameters:
        - name: fromSystemDefault
          in: query
          schema:
            type: boolean
            default: false
        - name: name
          in: query
          schema:
            type: string
        - name: makeDefault
          in: query
          schema:
            type: boolean
            default: false
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchSettings"
      description: Adds or Updates (Upsert) the Search Settings for a specific site
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/search/settings/{name}":
    get:
      tags:
        - Search
      summary: Get site search settings
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchSettings"
      description: Get site search settings
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Search
      summary: Adds or Updates (Upsert) the Search Settings for a specific site
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchSettings"
      description: Adds or Updates (Upsert) the Search Settings for a specific site
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Search
      summary: Adds or Updates (Upsert) the Search Settings for a specific site
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchSettings"
      description: Adds or Updates (Upsert) the Search Settings for a specific site
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/search/settings/systemdefault:
    get:
      tags:
        - Search
      summary: Get the System Default search settings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchSettings"
      description: Get the System Default search settings
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/search/{name}/sitesearchsettings":
    get:
      tags:
        - Search
      summary: Get SiteSearchSettings for a specific SearchSettings
      parameters:
        - name: name
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteSearchSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteSearchSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/SiteSearchSettings"
      description: Get SiteSearchSettings for a specific SearchSettings
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - Search
      summary: Adds or Updates (Upsert) the SiteSearchSettings for a specific
        SearchSetting
      parameters:
        - name: name
          in: path
          description: ""
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SiteSearchSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteSearchSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteSearchSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/SiteSearchSettings"
      description:
        Adds or Updates (Upsert) the SiteSearchSettings for a specific
        SearchSetting
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - Search
      summary: Deletes the SiteSearchSettings for a specific SearchSetting
      parameters:
        - name: name
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Deletes the SiteSearchSettings for a specific SearchSetting
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/campaigns/all:
    get:
      tags:
        - StoreFrontCampaign
      summary: Returns list of campaigns
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CampaignResult"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CampaignResult"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CampaignResult"
      description: Returns list of campaigns
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/storefront/campaigns/{campaignId}":
    get:
      tags:
        - StoreFrontCampaign
      summary: Returns specific campaign
      parameters:
        - name: campaignId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CampaignResult"
            text/json:
              schema:
                $ref: "#/components/schemas/CampaignResult"
            text/plain:
              schema:
                $ref: "#/components/schemas/CampaignResult"
      description: Returns specific campaign
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/currencies/exchangerates:
    get:
      tags:
        - StoreFrontCurrency
      summary:
        Retrieves a list of currency exchange rates based on the context's
        currency code
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StoreFrontProductCurrencyExchangeRate"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StoreFrontProductCurrencyExchangeRate"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StoreFrontProductCurrencyExchangeRate"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/pricelists/resolved:
    get:
      tags:
        - StoreFrontPriceList
      parameters:
        - name: customerAccountId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolvedPriceList"
            text/json:
              schema:
                $ref: "#/components/schemas/ResolvedPriceList"
            text/plain:
              schema:
                $ref: "#/components/schemas/ResolvedPriceList"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - StoreFrontPriceList
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolvedPriceList"
            text/json:
              schema:
                $ref: "#/components/schemas/ResolvedPriceList"
            text/plain:
              schema:
                $ref: "#/components/schemas/ResolvedPriceList"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/storefront/pricelists/{priceListCode}":
    get:
      tags:
        - StoreFrontPriceList
      summary: Retrieves the price list for the given priceListCode
      parameters:
        - name: priceListCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductPriceList"
            text/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductPriceList"
            text/plain:
              schema:
                $ref: "#/components/schemas/StoreFrontProductPriceList"
      description: Retrieves the price list for the given priceListCode
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/categories/tree:
    get:
      tags:
        - StoreFrontProductCategory
      summary:
        Retrieves the list of product categories that appear on the storefront
        organized in a hierarchical format
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductCategoryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductCategoryCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/StoreFrontProductCategoryCollection"
      description: Hidden categories do not appear in the list.
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/categories:
    get:
      tags:
        - StoreFrontProductCategory
      summary:
        Retrieves a list of product categories that appear on the storefront as
        a flat list
      parameters:
        - name: filter
          in: query
          description:
            "Optional. A set of filter expressions representing the search
            parameters for a query:\r

            \            eq=equals, ne=not equals, gt=greater than,
            lt = less than, gt = greater than or equals, le = less than or
            equals,\r

            \            sw = starts with, or cont = contains."
          schema:
            type: string
        - name: startIndex
          in: query
          description: "Optional. Used to page results from a query.\r

            \            Indicates the zero-based offset in the
            complete result set where the returned entities begin.\r

            \            For example, with a pageSize of 25, to get
            the 51st through the 75th items, startIndex=3.\r

            \            The default value is 0."
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: "Optional. Used to page results from a query.\r

            \            Indicates the maximum number of entities to
            return from a query. Default value: 20. Maximum value: 200."
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description:
            "The element to sort the results by and the order in which the
            results appear.\r

            \            Either ascending order (a-z) which accepts
            'asc' or 'ASC' or descending order (z-a) which accepts 'desc' or
            'DESC'.\r

            \            The sortBy parameter follows an available
            property.\r

            \            For example, to sort results by category ID
            ascending, use sortBy=categoryId asc."
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductCategoryPagedCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductCategoryPagedCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/StoreFrontProductCategoryPagedCollection"
      description: |-

        Hidden categories do not appear in the list.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/storefront/categories/{categoryId}":
    get:
      tags:
        - StoreFrontProductCategory
      summary: Retrieves the name and details of a category that appears on the
        storefront
      parameters:
        - name: categoryId
          in: path
          description:
            Required. Unique identifier of the category whose details you want
            to get.
          required: true
          schema:
            type: integer
            format: int32
        - name: allowInactive
          in: query
          description:
            Optional. Allow the return of items with the IsDisplayed flag set
            to false.
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductCategory"
            text/plain:
              schema:
                $ref: "#/components/schemas/StoreFrontProductCategory"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/products:
    get:
      tags:
        - StoreFrontProduct
      summary:
        Retrieves a list of products that appear on the storefront according to
        any specified filter criteria and sort options
      parameters:
        - name: filter
          in: query
          description:
            "Optional. A set of filter expressions representing the search
            parameters for a query: eq=equals, ne=not equals, gt=greater than,
            lt = less than, gt = greater than or equals, le = less than or
            equals, sw = starts with, or cont = contains."
          schema:
            type: string
        - name: startIndex
          in: query
          description:
            "Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. For
            example, with a pageSize of 25, to get the 51st through the 75th
            items, startIndex=3. Default value: 0."
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description:
            "Used to page results from a query. Indicates the maximum number of
            entities to return from a single query. Default value: 20. Maximum
            value: 200."
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description:
            "Optional. Sort the results by and the order in which the results
            appear. Either ascending order (a-z) which accepts 'asc' or 'ASC' or
            descending order (z-a) which accepts 'desc' or 'DESC'. The sortBy
            parameter follows an available property. For example, to sort the
            results by “ID” ascending then by “CreateDate” descending, use: id
            asc,createdate desc."
          schema:
            type: string
        - name: responseGroups
          in: query
          description: Optional. Response groups to be determined.
          schema:
            type: string
        - name: responseOptions
          in: query
          description: ""
          schema:
            type: string
        - name: cursorMark
          in: query
          description:
            Pass in * to begin a deep page operation. The response will include
            a nextCursorMark value. Pass this into the next call. Continue with
            this pattern until nextCursorMark is null.
          schema:
            type: string
        - name: defaultSort
          in: query
          schema:
            type: string
        - name: mid
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductProductCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductProductCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/StoreFrontProductProductCollection"
      description: |-

        The following filter criteria can be applied: @FilterSet1@
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/storefront/products/{productCode}/locationinventory":
    get:
      tags:
        - StoreFrontProduct
      parameters:
        - name: productCode
          in: path
          required: true
          schema:
            type: string
        - name: locationCodes
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductLocationInventoryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductLocationInventoryCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/StoreFrontProductLocationInventoryCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/products/locationinventory:
    post:
      tags:
        - StoreFrontProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationInventoryQuery"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductLocationInventoryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductLocationInventoryCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/StoreFrontProductLocationInventoryCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/products/costs:
    post:
      tags:
        - StoreFrontProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCostQuery"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductCostCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductCostCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductCostCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/storefront/products/{productCode}":
    get:
      tags:
        - StoreFrontProduct
      summary: Retrieves information about a single product given its product code
      parameters:
        - name: productCode
          in: path
          description:
            "Required. Merchant-created code associated with the product, for
            example, a SKU. Max length: 30."
          required: true
          schema:
            type: string
        - name: variationProductCode
          in: query
          description:
            "Optional. Merchant-created code associated with a specific product
            variation. Max length: #."
          schema:
            type: string
        - name: responseGroups
          in: query
          description: Optional. Response groups to be determined.
          schema:
            type: string
        - name: allowInactive
          in: query
          description: Optional. If true, return a product if it is located but inactive.
          schema:
            type: boolean
        - name: skipInventoryCheck
          in: query
          description:
            Determines whether or not to check inventory on an item when
            validating
          schema:
            type: boolean
            default: false
        - name: supressOutOfStock404
          in: query
          description:
            Optional. If true, will still return the product, even if product
            is out of stock and the out of stock behavior is set to “Hide
            Product in Store”. If false or omitted, the same product will return
            a 404 not found. Suppressing the 404 not found is useful for site
            SEO.
          schema:
            type: boolean
            default: false
        - name: quantity
          in: query
          description:
            Optional.  If specified, will be used for returning pricing based
            on volume if applicable.  Defaults to 1 if not specified.
          schema:
            type: integer
            format: int32
        - name: acceptVariantProductCode
          in: query
          schema:
            type: boolean
            default: false
        - name: purchaseLocation
          in: query
          schema:
            type: string
        - name: variationProductCodeFilter
          in: query
          schema:
            type: string
        - name: sliceValue
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductProduct"
            text/json:
              schema:
                $ref: "#/components/schemas/StoreFrontProductProduct"
            text/plain:
              schema:
                $ref: "#/components/schemas/StoreFrontProductProduct"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/storefront/products/indexing/{productCode}":
    get:
      tags:
        - StoreFrontProduct
      summary:
        Retrieves information about a single product given its product code for
        Mozu to index in the search engine
      parameters:
        - name: productCode
          in: path
          description:
            "Required. Merchant-created code associated with the product, for
            example, a SKU. Max length: 30."
          required: true
          schema:
            type: string
        - name: responseGroups
          in: query
          description: Optional. Response groups to be determined.
          schema:
            type: string
        - name: productVersion
          in: query
          description:
            "Optional. The current version of the product to use for latency
            checking. \r

            \            \tIf this instance of Product Runtime is
            configured to run against a replicated database node that has a
            lesser version than this value, it will read from the primary
            database node to prevent stale data."
          schema:
            type: integer
            format: int64
        - name: lastModifiedDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductForIndexing"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductForIndexing"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductForIndexing"
      description:
        Retrieves information about a single product given its product code
        for Mozu to index in the search engine
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/storefront/products/{productCode}/configure":
    post:
      tags:
        - StoreFrontProduct
      summary: Creates a new product selection
      parameters:
        - name: productCode
          in: path
          description:
            "Merchant-created code for the product being configured, for
            example, a SKU. Max length: 30."
          required: true
          schema:
            type: string
        - name: includeOptionDetails
          in: query
          description:
            If true, the response returns product details such as. If false,
            returns a product summary such as the product name, price, and sale
            price.
          schema:
            type: boolean
        - name: skipInventoryCheck
          in: query
          description:
            Determines whether or not to check inventory on an item when
            validating
          schema:
            type: boolean
            default: false
        - name: quantity
          in: query
          description:
            Optional.  If specified, will be used for returning pricing based
            on volume if applicable.  Defaults to 1 if not specified.
          schema:
            type: integer
            format: int32
        - name: purchaseLocation
          in: query
          schema:
            type: string
        - name: variationProductCodeFilter
          in: query
          schema:
            type: string
      requestBody:
        description: Shopper-selected options.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductOptionSelections"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfiguredProduct"
            text/json:
              schema:
                $ref: "#/components/schemas/ConfiguredProduct"
            text/plain:
              schema:
                $ref: "#/components/schemas/ConfiguredProduct"
      description:
        A create occurs each time a shopper selects a product option as
        they configure a product. Once all the required product options are
        configured, the product can be added to a cart.
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/storefront/products/{productCode}/validate":
    post:
      tags:
        - StoreFrontProduct
      summary: Validate the final state of shopper-selected options
      parameters:
        - name: productCode
          in: path
          description: Merchant-created code of product being validated.
          required: true
          schema:
            type: string
        - name: skipInventoryCheck
          in: query
          description:
            Determines whether or not to check inventory on an item when
            validating
          schema:
            type: boolean
            default: false
        - name: quantity
          in: query
          description:
            Optional.  If specified, will be used for returning pricing based
            on volume if applicable.  Defaults to 1 if not specified.
          schema:
            type: integer
            format: int32
        - name: skipDefaults
          in: query
          description:
            Determines whether or not to add configured default-extras on an
            item when validating
          schema:
            type: boolean
            default: false
        - name: purchaseLocation
          in: query
          schema:
            type: string
      requestBody:
        description: Final state of shopper selected options.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductOptionSelections"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductValidationSummary"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductValidationSummary"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductValidationSummary"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/storefront/products/{productCode}/validateDiscounts":
    post:
      tags:
        - StoreFrontProduct
      summary: Validate if a collection of discounts is valid for a product
      parameters:
        - name: productCode
          in: path
          description: ""
          required: true
          schema:
            type: string
        - name: variationProductCode
          in: query
          description: ""
          schema:
            type: string
        - name: customerAccountId
          in: query
          description:
            Customer Id may be set in the querystring or in the user claims bag
            if the caller context is a shopper.
          schema:
            type: integer
            format: int32
        - name: allowInactive
          in: query
          description: ""
          schema:
            type: boolean
        - name: skipInventoryCheck
          in: query
          description: ""
          schema:
            type: boolean
            default: false
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiscountSelections"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscountValidationSummary"
            text/json:
              schema:
                $ref: "#/components/schemas/DiscountValidationSummary"
            text/plain:
              schema:
                $ref: "#/components/schemas/DiscountValidationSummary"
      description:
        " This includes discounts that would normally be considered order
        level discounts."
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/productsearch/suggest:
    get:
      tags:
        - StoreFrontProductSearch
      summary: Suggests possible search terms as the shopper enters search text
      parameters:
        - name: query
          in: query
          description:
            Comma delimited list of suggestion groups that should be returned.
            The default is everything
          schema:
            type: string
        - name: groups
          in: query
          description: ""
          schema:
            type: string
        - name: pageSize
          in: query
          description:
            Indicates the maximum number of entities to return from a query.
            The default value is 10 and the maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
        - name: mid
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchSuggestionResult"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchSuggestionResult"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchSuggestionResult"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/productsearch/suggest2:
    get:
      tags:
        - StoreFrontProductSearch
      summary: Suggests possible search terms as the shopper enters search text
      parameters:
        - name: query
          in: query
          description:
            Comma delimited list of suggestion groups that should be returned.
            The default is everything
          schema:
            type: string
        - name: groups
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          description:
            Indicates the maximum number of entities to return from a query.
            The default value is 10 and the maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
        - name: searchSettingsName
          in: query
          schema:
            type: string
        - name: mid
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchSuggestionResult"
            text/json:
              schema:
                $ref: "#/components/schemas/SearchSuggestionResult"
            text/plain:
              schema:
                $ref: "#/components/schemas/SearchSuggestionResult"
      description: " Utlizes new SearchSettings resource to drive search."
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/productsearch/visualsearch:
    get:
      tags:
        - StoreFrontProductSearch
      parameters:
        - name: SearchTerm
          in: query
          required: true
          schema:
            minLength: 2
            type: string
        - name: Filters
          in: query
          schema:
            type: array
            items:
              $ref: "#/components/schemas/RequestFilter"
        - name: Returnfields
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Searchfields
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Ignoregrouping
          in: query
          schema:
            type: boolean
        - name: NumResults
          in: query
          schema:
            maximum: 10000
            minimum: 1
            type: integer
            format: int32
        - name: PageNumber
          in: query
          schema:
            maximum: 1000
            minimum: 1
            type: integer
            format: int32
        - name: ApplicationId
          in: query
          schema:
            maxLength: 50
            minLength: 1
            type: string
        - name: CatalogId
          in: query
          schema:
            maxLength: 50
            minLength: 1
            type: string
        - name: SessionId
          in: query
          schema:
            maxLength: 100
            type: string
        - name: TrackingId
          in: query
          schema:
            maxLength: 100
            type: string
        - name: ApiKey
          in: query
          schema:
            type: string
        - name: Revision
          in: query
          schema:
            type: string
        - name: Cip
          in: query
          schema:
            type: string
        - name: DisplayDebug
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VisualSearchResult"
            text/json:
              schema:
                $ref: "#/components/schemas/VisualSearchResult"
            text/plain:
              schema:
                $ref: "#/components/schemas/VisualSearchResult"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/productsearch/randomAccessCursor:
    get:
      tags:
        - StoreFrontProductSearch
      summary:
        Generate a cursor that then allows you to retrieve all products with
        efficient deep paging
      parameters:
        - name: query
          in: query
          description:
            Optional terms to search on. Only matching products will be
            included in the cursor.
          schema:
            type: string
        - name: filter
          in: query
          description:
            Optional set of filter expressions to filter on. Only matching
            products will be included in the cursor.
          schema:
            type: string
        - name: pageSize
          in: query
          description: ""
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductSearchRandomAccessCursor"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductSearchRandomAccessCursor"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductSearchRandomAccessCursor"
      description: "

        Optionally provide a query and/or filter to generate a cursor
        for a subset of products.\r

        After retrieving the cursor, provide a cursorMark to the
        cursorMark argument of the /search or /getProducts operations.\r

        You may provide cursorMarks in any order or even in parallel
        operations."
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/productsearch/search:
    get:
      tags:
        - StoreFrontProductSearch
      summary:
        Searches the categories displayed on the storefront for products or
        product options that the shopper types in a search query
      parameters:
        - name: query
          in: query
          description: The terms to search on.
          schema:
            type: string
        - name: filter
          in: query
          description:
            "A set of filter expressions representing the search parameters for
            a query: eq=equals, ne=not equals, gt=greater than, lt = less than
            or equals, gt = greater than or equals, lt = less than or equals, sw
            = starts with, or cont = contains. Optional."
          schema:
            type: string
        - name: facetTemplate
          in: query
          schema:
            type: string
        - name: facetTemplateSubset
          in: query
          schema:
            type: string
        - name: facet
          in: query
          schema:
            type: string
        - name: facetFieldRangeQuery
          in: query
          schema:
            type: string
        - name: facetHierPrefix
          in: query
          schema:
            type: string
        - name: facetHierValue
          in: query
          schema:
            type: string
        - name: facetHierDepth
          in: query
          schema:
            type: string
        - name: facetStartIndex
          in: query
          schema:
            type: string
        - name: facetPageSize
          in: query
          schema:
            type: string
        - name: facetSettings
          in: query
          schema:
            type: string
        - name: facetValueFilter
          in: query
          schema:
            type: string
        - name: sortBy
          in: query
          description:
            The element to sort the results by and the order in which the
            results appear. Either ascending (a-z) or descending (z-a) order.
            Optional.
          schema:
            type: string
        - name: pageSize
          in: query
          description:
            Used to page results from a query. Indicates the maximum number of
            entities to return from a query. The default value is 12 and the
            maximum value is 200. Optional.
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          description:
            Used to page results from a query. Indicates the zero-based offset
            in the complete result set where the returned entities begin. The
            default value is 0. Optional.
          schema:
            type: integer
            format: int32
            default: 0
        - name: searchSettings
          in: query
          schema:
            type: string
        - name: enableSearchTuningRules
          in: query
          schema:
            type: boolean
            default: true
        - name: searchTuningRuleContext
          in: query
          schema:
            type: string
        - name: searchTuningRuleCode
          in: query
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
        - name: facetTemplateExclude
          in: query
          schema:
            type: string
        - name: facetPrefix
          in: query
          schema:
            type: string
        - name: responseOptions
          in: query
          schema:
            type: string
        - name: cursorMark
          in: query
          description:
            Pass in * to begin a deep page operation. The response will include
            a nextCursorMark value. Pass this into the next call. Continue with
            this pattern until nextCursorMark is null.
          schema:
            type: string
        - name: facetValueSort
          in: query
          schema:
            type: string
        - name: defaultSort
          in: query
          schema:
            type: string
        - name: sortDefinitionName
          in: query
          schema:
            type: string
        - name: defaultSortDefinitionName
          in: query
          schema:
            type: string
        - name: shouldSlice
          in: query
          schema:
            type: boolean
        - name: mid
          in: query
          schema:
            type: string
        - name: omitNamespace
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductSearchResult"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductSearchResult"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductSearchResult"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/productsearch/siteSearch:
    get:
      tags:
        - StoreFrontProductSearch
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
        - name: facetTemplate
          in: query
          schema:
            type: string
        - name: facetTemplateSubset
          in: query
          schema:
            type: string
        - name: facet
          in: query
          schema:
            type: string
        - name: facetFieldRangeQuery
          in: query
          schema:
            type: string
        - name: facetHierPrefix
          in: query
          schema:
            type: string
        - name: facetHierValue
          in: query
          schema:
            type: string
        - name: facetHierDepth
          in: query
          schema:
            type: string
        - name: facetStartIndex
          in: query
          schema:
            type: string
        - name: facetPageSize
          in: query
          schema:
            type: string
        - name: facetSettings
          in: query
          schema:
            type: string
        - name: facetValueFilter
          in: query
          schema:
            type: string
        - name: sortBy
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: searchSettings
          in: query
          schema:
            type: string
        - name: enableSearchTuningRules
          in: query
          schema:
            type: boolean
            default: true
        - name: searchTuningRuleContext
          in: query
          schema:
            type: string
        - name: searchTuningRuleCode
          in: query
          schema:
            type: string
        - name: responseGroups
          in: query
          schema:
            type: string
        - name: facetTemplateExclude
          in: query
          schema:
            type: string
        - name: facetPrefix
          in: query
          schema:
            type: string
        - name: responseOptions
          in: query
          schema:
            type: string
        - name: cursorMark
          in: query
          schema:
            type: string
        - name: facetValueSort
          in: query
          schema:
            type: string
        - name: defaultSort
          in: query
          schema:
            type: string
        - name: sortDefinitionName
          in: query
          schema:
            type: string
        - name: defaultSortDefinitionName
          in: query
          schema:
            type: string
        - name: shouldSlice
          in: query
          schema:
            type: boolean
        - name: mid
          in: query
          schema:
            type: string
        - name: fieldList
          in: query
          schema:
            type: string
        - name: omitNamespace
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductSearchResult"
            text/json:
              schema:
                $ref: "#/components/schemas/ProductSearchResult"
            text/plain:
              schema:
                $ref: "#/components/schemas/ProductSearchResult"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/searchredirect/redirects:
    get:
      tags:
        - StoreFrontSearchRedirect
      summary: Get all search redirect items
      responses:
        "200":
          description: Success
      description: Get all search redirect items
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/storefront/searchredirect/{redirectId}":
    get:
      tags:
        - StoreFrontSearchRedirect
      summary: Get  search redirect item by redirectId
      parameters:
        - name: redirectId
          in: path
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      description: Get  search redirect item by redirectId
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/reference/contentLocales:
    get:
      tags:
        - ReferenceData
      summary: Get the full list of Content Locales supported by the system
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContentLocaleCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ContentLocaleCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ContentLocaleCollection"
      description: Get the full list of Content Locales supported by the system
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/reference/topleveldomains:
    get:
      tags:
        - ReferenceData
      summary: Get a full list of the supported top level domains
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopLevelDomainCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/TopLevelDomainCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/TopLevelDomainCollection"
      description: Get a full list of the supported top level domains
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/reference/unitsofmeasure:
    get:
      tags:
        - ReferenceData
      summary: Get a full list of the units of measure
      parameters:
        - name: filter
          in: query
          description: ""
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnitOfMeasureCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/UnitOfMeasureCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/UnitOfMeasureCollection"
      description: Get a full list of the units of measure
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/reference/countries:
    get:
      tags:
        - ReferenceData
      summary: Get the full list of Countries supported by the system
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CountryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CountryCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CountryCollection"
      description: Get the full list of Countries supported by the system
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/reference/currencies:
    get:
      tags:
        - ReferenceData
      summary: Get the full list of Currencies supported by the system
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrencyCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CurrencyCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CurrencyCollection"
      description: Get the full list of Currencies supported by the system
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/reference/timezones:
    get:
      tags:
        - ReferenceData
      summary: Get the full list of TimeZones supported by the system
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeZoneCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/TimeZoneCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/TimeZoneCollection"
      description: Get the full list of TimeZones supported by the system
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/reference/addressschemas:
    get:
      tags:
        - ReferenceData
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressSchemaCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/AddressSchemaCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/AddressSchemaCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/reference/addressschema/{countryCode}":
    get:
      tags:
        - ReferenceData
      parameters:
        - name: countryCode
          in: path
          required: true
          schema:
            type: string
            default: US
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressSchema"
            text/json:
              schema:
                $ref: "#/components/schemas/AddressSchema"
            text/plain:
              schema:
                $ref: "#/components/schemas/AddressSchema"
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/reference/behaviors:
    get:
      tags:
        - ReferenceData
      summary: Retrieves a list of all behaviors
      parameters:
        - name: userType
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BehaviorCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/BehaviorCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/BehaviorCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/reference/behaviors/categories:
    get:
      tags:
        - ReferenceData
      summary: Retrieves a list of all behavior categories
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BehaviorCategoryCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/BehaviorCategoryCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/BehaviorCategoryCollection"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/reference/behaviors/{behaviorId}":
    get:
      tags:
        - ReferenceData
      summary: Retrieves the details of a behavior specified by its behavior ID
      parameters:
        - name: behaviorId
          in: path
          description: Unique identifier of the behavior for which you want details.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Behavior"
            text/json:
              schema:
                $ref: "#/components/schemas/Behavior"
            text/plain:
              schema:
                $ref: "#/components/schemas/Behavior"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/reference/behaviors/categories/{categoryId}":
    get:
      tags:
        - ReferenceData
      summary: Retrieves the details of a behavior specified by its behavior ID
      parameters:
        - name: categoryId
          in: path
          description:
            Unique identifier of the behavior category for which you want
            details.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BehaviorCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/BehaviorCategory"
            text/plain:
              schema:
                $ref: "#/components/schemas/BehaviorCategory"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /platform/reference/countrieswithstates:
    get:
      tags:
        - ReferenceData
      summary: Get the full list of Countries supported by the system
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CountryWithStatesCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CountryWithStatesCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CountryWithStatesCollection"
      description: Get the full list of Countries supported by the system
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/shipping/admin/carriers:
    get:
      tags:
        - CarrierConfiguration
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierConfigurationCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierConfigurationCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CarrierConfigurationCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/shipping/admin/carriers/{carrierId}":
    get:
      tags:
        - CarrierConfiguration
      parameters:
        - name: carrierId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierConfiguration"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierConfiguration"
            text/plain:
              schema:
                $ref: "#/components/schemas/CarrierConfiguration"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CarrierConfiguration
      parameters:
        - name: carrierId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarrierConfiguration"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierConfiguration"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierConfiguration"
            text/plain:
              schema:
                $ref: "#/components/schemas/CarrierConfiguration"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CarrierConfiguration
      parameters:
        - name: carrierId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarrierConfiguration"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierConfiguration"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierConfiguration"
            text/plain:
              schema:
                $ref: "#/components/schemas/CarrierConfiguration"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - CarrierConfiguration
      parameters:
        - name: carrierId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/shipping/global/carriers/{carrierId}/serviceTypes/{localeCode}":
    get:
      tags:
        - CarrierConfigurationGlobal
      parameters:
        - name: carrierId
          in: path
          required: true
          schema:
            type: string
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceType"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceType"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceType"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/shipping/global/carriers/serviceTypes/{localeCode}":
    get:
      tags:
        - CarrierConfigurationGlobal
      parameters:
        - name: localeCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceType"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceType"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceType"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/shipping/admin/carriers/credentials/{carrierId}":
    post:
      tags:
        - CarrierCredential
      parameters:
        - name: carrierId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarrierCredential"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierCredential"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierCredential"
            text/plain:
              schema:
                $ref: "#/components/schemas/CarrierCredential"
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - CarrierCredential
      parameters:
        - name: carrierId
          in: path
          required: true
          schema:
            type: string
        - name: siteId
          in: query
          schema:
            type: integer
            format: int32
        - name: locationGroupCode
          in: query
          schema:
            type: string
        - name: locationCode
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierCredential"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierCredential"
            text/plain:
              schema:
                $ref: "#/components/schemas/CarrierCredential"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CarrierCredential
      parameters:
        - name: carrierId
          in: path
          required: true
          schema:
            type: string
        - name: siteId
          in: query
          schema:
            type: integer
            format: int32
        - name: locationGroupCode
          in: query
          schema:
            type: string
        - name: locationCode
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarrierCredential"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierCredential"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierCredential"
            text/plain:
              schema:
                $ref: "#/components/schemas/CarrierCredential"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - CarrierCredential
      parameters:
        - name: carrierId
          in: path
          required: true
          schema:
            type: string
        - name: siteId
          in: query
          schema:
            type: integer
            format: int32
        - name: locationGroupCode
          in: query
          schema:
            type: string
        - name: locationCode
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/shipping/admin/carriers/credentials:
    get:
      tags:
        - CarrierCredential
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierCredentialCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierCredentialCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CarrierCredentialCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/shipping/admin/carriers/credential-sets/{carrierId}":
    post:
      tags:
        - CarrierCredentialSet
      parameters:
        - name: carrierId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarrierCredentialSet"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierCredentialSet"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierCredentialSet"
            text/plain:
              schema:
                $ref: "#/components/schemas/CarrierCredentialSet"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/shipping/admin/carriers/credential-sets/{carrierId}/{code}":
    get:
      tags:
        - CarrierCredentialSet
      parameters:
        - name: carrierId
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierCredentialSet"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierCredentialSet"
            text/plain:
              schema:
                $ref: "#/components/schemas/CarrierCredentialSet"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CarrierCredentialSet
      parameters:
        - name: carrierId
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarrierCredentialSet"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierCredentialSet"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierCredentialSet"
            text/plain:
              schema:
                $ref: "#/components/schemas/CarrierCredentialSet"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - CarrierCredentialSet
      parameters:
        - name: carrierId
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/shipping/admin/carriers/credential-sets:
    get:
      tags:
        - CarrierCredentialSet
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CarrierCredentialSetCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CarrierCredentialSetCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/CarrierCredentialSetCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/shipping/admin/profiles/{profilecode}/rules/orderhandlingfees":
    get:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRuleCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRuleCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/HandlingFeeRuleCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HandlingFeeRule"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
            text/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/shipping/admin/profiles/{profilecode}/rules/orderhandlingfees/{id}"
  : get:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
            text/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HandlingFeeRule"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
            text/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingAdminHttpResponseMessage"
            text/json:
              schema:
                $ref: "#/components/schemas/ShippingAdminHttpResponseMessage"
            text/plain:
              schema:
                $ref: "#/components/schemas/ShippingAdminHttpResponseMessage"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/shipping/admin/profiles/{profilecode}/rules/producthandlingfees":
    get:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRuleCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRuleCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/HandlingFeeRuleCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HandlingFeeRule"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
            text/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/shipping/admin/profiles/{profilecode}/rules/producthandlingfees/{id}"
  : get:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
            text/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HandlingFeeRule"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
            text/json:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/HandlingFeeRule"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/shipping/admin/profiles/{profilecode}/rules/shippinginclusions":
    get:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingInclusionRuleCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ShippingInclusionRuleCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ShippingInclusionRuleCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShippingInclusionRule"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingInclusionRule"
            text/json:
              schema:
                $ref: "#/components/schemas/ShippingInclusionRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/ShippingInclusionRule"
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/shipping/admin/profiles/{profilecode}/rules/shippinginclusions/{id}"
  : get:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingInclusionRule"
            text/json:
              schema:
                $ref: "#/components/schemas/ShippingInclusionRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/ShippingInclusionRule"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShippingInclusionRule"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingInclusionRule"
            text/json:
              schema:
                $ref: "#/components/schemas/ShippingInclusionRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/ShippingInclusionRule"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/shipping/admin/profiles:
    get:
      tags:
        - ShippingProfile
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingProfileCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ShippingProfileCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/ShippingProfileCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/shipping/admin/profiles/{profilecode}/shippingstates":
    get:
      tags:
        - ShippingProfile
      parameters:
        - name: profileCode
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShippingStates"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShippingStates"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShippingStates"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - ShippingProfile
      parameters:
        - name: profilecode
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ShippingStates"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShippingStates"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShippingStates"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShippingStates"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/targetrules:
    get:
      tags:
        - TargetRules
      parameters:
        - name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - name: sortBy
          in: query
          schema:
            type: string
        - name: filter
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetRuleCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/TargetRuleCollection"
            text/plain:
              schema:
                $ref: "#/components/schemas/TargetRuleCollection"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - TargetRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetRule"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetRule"
            text/json:
              schema:
                $ref: "#/components/schemas/TargetRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/TargetRule"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/targetrules/{code}":
    get:
      tags:
        - TargetRules
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetRule"
            text/json:
              schema:
                $ref: "#/components/schemas/TargetRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/TargetRule"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - TargetRules
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetRule"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetRule"
            text/json:
              schema:
                $ref: "#/components/schemas/TargetRule"
            text/plain:
              schema:
                $ref: "#/components/schemas/TargetRule"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - TargetRules
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/targetrules/validate:
    post:
      tags:
        - TargetRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetRule"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/shipping/request-rates:
    post:
      tags:
        - Shipping
      summary: Get a rate response for a rate request
      parameters:
        - name: includeRawResponse
          in: query
          description: ""
          schema:
            type: boolean
            default: false
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RateRequest"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/RatesResponse"
            application/json:
              schema:
                $ref: "#/components/schemas/RatesResponse"
            text/json:
              schema:
                $ref: "#/components/schemas/RatesResponse"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/storefront/shipping/request-multi-rates:
    post:
      tags:
        - Shipping
      summary: Get a multi rate response for a list of rate requests
      parameters:
        - name: includeRawResponse
          in: query
          description: ""
          schema:
            type: boolean
            default: false
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/RateRequestGroup"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RatesResponseGroup"
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RatesResponseGroup"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RatesResponseGroup"
      description: ""
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/settings/cart/cartsettings:
    get:
      tags:
        - CartSettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/CartSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - CartSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/CartSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CartSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/CartSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/CartSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/settings/checkout:
    get:
      tags:
        - CheckoutSettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckoutSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/CheckoutSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/CheckoutSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/settings/checkout/paymentsettings/thirdpartyworkflows:
    get:
      tags:
        - CheckoutSettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExternalPaymentWorkflowDefinition"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExternalPaymentWorkflowDefinition"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExternalPaymentWorkflowDefinition"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CheckoutSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExternalPaymentWorkflowDefinition"
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/settings/checkout/paymentsettings/thirdpartyworkflows/{fullyQualifiedName}"
  : delete:
      tags:
        - CheckoutSettings
      parameters:
        - name: fullyQualifiedName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  ? "/commerce/settings/checkout/paymentsettings/thirdpartyworkflow/{fullyQualifiedName}"
  : get:
      tags:
        - CheckoutSettings
      parameters:
        - name: fullyQualifiedName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExternalPaymentWorkflowDefinition"
            text/json:
              schema:
                $ref: "#/components/schemas/ExternalPaymentWorkflowDefinition"
            text/plain:
              schema:
                $ref: "#/components/schemas/ExternalPaymentWorkflowDefinition"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/settings/checkout/customercheckoutsettings:
    get:
      tags:
        - CheckoutSettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerCheckoutSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerCheckoutSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerCheckoutSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - CheckoutSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerCheckoutSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerCheckoutSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomerCheckoutSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomerCheckoutSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/settings/fulfillment/fulfillmentsettings:
    get:
      tags:
        - FulfillmentSettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FulfillmentSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/FulfillmentSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/FulfillmentSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - FulfillmentSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FulfillmentSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FulfillmentSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/FulfillmentSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/FulfillmentSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - FulfillmentSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FulfillmentSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FulfillmentSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/FulfillmentSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/FulfillmentSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/settings/general/customroutes:
    post:
      tags:
        - GeneralSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomRouteSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomRouteSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomRouteSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomRouteSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    get:
      tags:
        - GeneralSettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomRouteSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomRouteSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomRouteSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - GeneralSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomRouteSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomRouteSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/CustomRouteSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/CustomRouteSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    delete:
      tags:
        - GeneralSettings
      responses:
        "200":
          description: Success
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/settings/general:
    get:
      tags:
        - GeneralSettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/GeneralSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/GeneralSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - GeneralSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeneralSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/GeneralSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/GeneralSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/settings/general/taxableterritories:
    get:
      tags:
        - GeneralSettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaxableTerritory"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaxableTerritory"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaxableTerritory"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - GeneralSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaxableTerritory"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaxableTerritory"
            text/json:
              schema:
                $ref: "#/components/schemas/TaxableTerritory"
            text/plain:
              schema:
                $ref: "#/components/schemas/TaxableTerritory"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - GeneralSettings
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TaxableTerritory"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaxableTerritory"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaxableTerritory"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaxableTerritory"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/settings/inventory/inventorySettings:
    get:
      tags:
        - InventorySettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventorySettings"
            text/json:
              schema:
                $ref: "#/components/schemas/InventorySettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/InventorySettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - InventorySettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventorySettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventorySettings"
            text/json:
              schema:
                $ref: "#/components/schemas/InventorySettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/InventorySettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - InventorySettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventorySettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventorySettings"
            text/json:
              schema:
                $ref: "#/components/schemas/InventorySettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/InventorySettings"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/settings/return/returnsettings:
    get:
      tags:
        - ReturnSettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/ReturnSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/ReturnSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - ReturnSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/ReturnSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/ReturnSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - ReturnSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnSettings"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/ReturnSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/ReturnSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/settings/shipping:
    get:
      tags:
        - ShippingSettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteShippingSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteShippingSettings"
            text/plain:
              schema:
                $ref: "#/components/schemas/SiteShippingSettings"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/settings/shipping/orderhandlingfee:
    get:
      tags:
        - ShippingSettings
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteShippingHandlingFee"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteShippingHandlingFee"
            text/plain:
              schema:
                $ref: "#/components/schemas/SiteShippingHandlingFee"
      deprecated: true
      security:
        - bearerAuth: []
          clientOauth2: []
    post:
      tags:
        - ShippingSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SiteShippingHandlingFee"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteShippingHandlingFee"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteShippingHandlingFee"
            text/plain:
              schema:
                $ref: "#/components/schemas/SiteShippingHandlingFee"
      deprecated: true
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - ShippingSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SiteShippingHandlingFee"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteShippingHandlingFee"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteShippingHandlingFee"
            text/plain:
              schema:
                $ref: "#/components/schemas/SiteShippingHandlingFee"
      deprecated: true
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/searchSchema/fieldTypes/{language}":
    get:
      tags:
        - StoreFrontFieldTypeDefinition
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FieldTypeDefinitionRepositoryEntry"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FieldTypeDefinitionRepositoryEntry"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FieldTypeDefinitionRepositoryEntry"
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/searchSchema/definition:
    get:
      tags:
        - StoreFrontSchemaDefinition
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SchemaDefinition"
            text/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SchemaDefinition"
            text/plain:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SchemaDefinition"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/searchSchema/definition/{language}":
    get:
      tags:
        - StoreFrontSchemaDefinition
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
        - name: published
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaDefinition"
            text/json:
              schema:
                $ref: "#/components/schemas/SchemaDefinition"
            text/plain:
              schema:
                $ref: "#/components/schemas/SchemaDefinition"
      security:
        - bearerAuth: []
          clientOauth2: []
    put:
      tags:
        - StoreFrontSchemaDefinition
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SchemaDefinition"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaDefinition"
            text/json:
              schema:
                $ref: "#/components/schemas/SchemaDefinition"
            text/plain:
              schema:
                $ref: "#/components/schemas/SchemaDefinition"
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/searchSchema/definition/{language}/revert":
    post:
      tags:
        - StoreFrontSchemaDefinition
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
      security:
        - bearerAuth: []
          clientOauth2: []
  "/commerce/catalog/admin/searchSchema/definition/{language}/publish":
    post:
      tags:
        - StoreFrontSchemaDefinition
      parameters:
        - name: language
          in: path
          required: true
          schema:
            type: string
        - name: reindex
          in: query
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/searchSchema/synonyms/reload:
    post:
      tags:
        - StoreFrontSynonym
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
      security:
        - bearerAuth: []
          clientOauth2: []
  /commerce/catalog/admin/searchSchema/synonyms:
    get:
      tags:
        - StoreFrontSynonym
      parameters:
        - name: language
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
      security:
        - bearerAuth: []
          clientOauth2: []
  "/platform/tenants/{tenantId}":
    get:
      tags:
        - Tenants
      summary: Get Tenant by ID
      parameters:
        - name: tenantId
          in: path
          description: ""
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminUserTenant"
            text/json:
              schema:
                $ref: "#/components/schemas/AdminUserTenant"
            text/plain:
              schema:
                $ref: "#/components/schemas/AdminUserTenant"
      description: Get Tenant by ID
      security:
        - bearerAuth: []
          clientOauth2: []
tags:
  - name: TenantAuthTicket
    x-displayName: TenantAuthTicket
  - name: TenenantUser
    x-displayName: TenenantUser
  - name: DeveloperAuthTicket
    x-displayName: DeveloperAuthTicket
  - name: TenantRole
    x-displayName: TenantRole
  - name: AppAuthTickets
    x-displayName: AppAuthTickets
  - name: FilebasedPackage
    x-displayName: FilebasedPackage
  - name: Package
    x-displayName: Package
  - name: PublicApplication
    x-displayName: PublicApplication
  - name: Cart
    x-displayName: Cart
  - name: Channel
    x-displayName: Channel
  - name: ChannelGroup
    x-displayName: ChannelGroup
  - name: Checkout
    x-displayName: Checkout
  - name: Order
    x-displayName: Order
  - name: OrderAttribute
    x-displayName: OrderAttribute
  - name: OrderValidationCapability
    x-displayName: OrderValidationCapability
  - name: Quote
    x-displayName: Quote
  - name: Return
    x-displayName: Return
  - name: Wishlist
    x-displayName: Wishlist
  - name: DocumentList
    x-displayName: DocumentList
  - name: DocumentListType
    x-displayName: DocumentListType
  - name: DocumentPublishing
    x-displayName: DocumentPublishing
  - name: DocumentPublishSet
    x-displayName: DocumentPublishSet
  - name: DocumentType
    x-displayName: DocumentType
  - name: DocumentPropertyType
    x-displayName: DocumentPropertyType
  - name: AccountAttributeDefinition
    x-displayName: AccountAttributeDefinition
  - name: AddressValidation
    x-displayName: AddressValidation
  - name: AddressValidationCapability
    x-displayName: AddressValidationCapability
  - name: StorefrontAuthTicket
    x-displayName: StorefrontAuthTicket
  - name: B2BAccount
    x-displayName: B2BAccount
  - name: Credit
    x-displayName: Credit
  - name: CustomerAccount
    x-displayName: CustomerAccount
  - name: CustomerAttributeDefinition
    x-displayName: CustomerAttributeDefinition
  - name: CustomerSegment
    x-displayName: CustomerSegment
  - name: CustomerSet
    x-displayName: CustomerSet
  - name: CustomerVisit
    x-displayName: CustomerVisit
  - name: InStockNotificationSubscription
    x-displayName: InStockNotificationSubscription
  - name: Event
    x-displayName: Event
  - name: Subscription
    x-displayName: Subscription
  - name: customer-survey-controller
    description: Customer Survey Controller
    x-displayName: customer-survey-controller
  - name: manifest-controller
    description: Manifest Controller
    x-displayName: manifest-controller
  - name: pick-wave-controller
    description: Pick Wave Controller
    x-displayName: pick-wave-controller
  - name: shipment-attributes-controller
    description: Shipment Attributes Controller
    x-displayName: shipment-attributes-controller
  - name: shipment-controller
    description: Shipment Controller
    x-displayName: shipment-controller
  - name: shipment-data-controller
    description: Shipment Data Controller
    x-displayName: shipment-data-controller
  - name: shipment-packages-controller
    description: Shipment Packages Controller
    x-displayName: shipment-packages-controller
  - name: shipping-notification-controller
    description: Shipping Notification Controller
    x-displayName: shipping-notification-controller
  - name: storefront-controller
    description: Storefront Controller
    x-displayName: storefront-controller
  - name: workflow-process-controller
    description: Workflow Process Controller
    x-displayName: workflow-process-controller
  - name: InventoryBin
    x-displayName: InventoryBin
  - name: InventoryExportInventory
    x-displayName: InventoryExportInventory
  - name: InventoryFetchFileConfig
    x-displayName: InventoryFetchFileConfig
  - name: InventoryModifyInventory
    x-displayName: InventoryModifyInventory
  - name: InventoryPendingItems
    x-displayName: InventoryPendingItems
  - name: InventoryProductMapping
    x-displayName: InventoryProductMapping
  - name: InventorySilo
    x-displayName: InventorySilo
  - name: InventorySite
    x-displayName: InventorySite
  - name: InventoryTag
    x-displayName: InventoryTag
  - name: InventoryTagCategory
    x-displayName: InventoryTagCategory
  - name: InventoryTagcategory
    x-displayName: InventoryTagcategory
  - name: InventoryTenant
    x-displayName: InventoryTenant
  - name: InventoryAllocation
    x-displayName: InventoryAllocation
  - name: InventoryAudit
    x-displayName: InventoryAudit
  - name: Inventory
    x-displayName: Inventory
  - name: InventoryJob
    x-displayName: InventoryJob
  - name: InventoryOrderItem
    x-displayName: InventoryOrderItem
  - name: InventoryTenantConfig
    x-displayName: InventoryTenantConfig
  - name: InventoryWave
    x-displayName: InventoryWave
  - name: LocationAdmin
    x-displayName: LocationAdmin
  - name: LocationAttributeDefinition
    x-displayName: LocationAttributeDefinition
  - name: LocationGroup
    x-displayName: LocationGroup
  - name: LocationGroupConfiguration
    x-displayName: LocationGroupConfiguration
  - name: LocationRuntime
    x-displayName: LocationRuntime
  - name: LocationSettings
    x-displayName: LocationSettings
  - name: LocationType
    x-displayName: LocationType
  - name: EntityLists
    x-displayName: EntityLists
  - name: SecureAppData
    x-displayName: SecureAppData
  - name: SiteData
    x-displayName: SiteData
  - name: TenantData
    x-displayName: TenantData
  - name: UserData
    x-displayName: UserData
  - description: OrderRoutingAfterAction
    name: OrderRoutingAfterAction
    x-displayName: OrderRoutingAfterAction
  - description: OrderRoutingAuth
    name: OrderRoutingAuth
    x-displayName: OrderRoutingAuth
  - description: OrderRoutingDataList
    name: OrderRoutingDataList
    x-displayName: OrderRoutingDataList
  - description: OrderRoutingEnvironment
    name: OrderRoutingEnvironment
    x-displayName: OrderRoutingEnvironment
  - description: OrderRoutingFilter
    name: OrderRoutingFilter
    x-displayName: OrderRoutingFilter
  - description: OrderRoutingGroup
    name: OrderRoutingGroup
    x-displayName: OrderRoutingGroup
  - description: OrderRoutingRouting
    name: OrderRoutingRouting
    x-displayName: OrderRoutingRouting
  - description: OrderRoutingSettings
    name: OrderRoutingSettings
    x-displayName: OrderRoutingSettings
  - description: OrderRoutingSite
    name: OrderRoutingSite
    x-displayName: OrderRoutingSite
  - description: OrderRoutingSort
    name: OrderRoutingSort
    x-displayName: OrderRoutingSort
  - description: OrderRoutingTenant
    name: OrderRoutingTenant
    x-displayName: OrderRoutingTenant
  - name: DiscountRuntime
    x-displayName: DiscountRuntime
  - name: TaxCapability
    x-displayName: TaxCapability
  - name: TaxRuntime
    x-displayName: TaxRuntime
  - name: Attribute
    x-displayName: Attribute
  - name: Category
    x-displayName: Category
  - name: CoreFields
    x-displayName: CoreFields
  - name: CouponSet
    x-displayName: CouponSet
  - name: Currency
    x-displayName: Currency
  - name: Discount
    x-displayName: Discount
  - name: DiscountSettings
    x-displayName: DiscountSettings
  - name: Facet
    x-displayName: Facet
  - name: LocationInventory
    x-displayName: LocationInventory
  - name: MasterCatalog
    x-displayName: MasterCatalog
  - name: PriceList
    x-displayName: PriceList
  - name: Product
    x-displayName: Product
  - name: ProductSortDefinition
    x-displayName: ProductSortDefinition
  - name: ProductType
    x-displayName: ProductType
  - name: Publishing
    x-displayName: Publishing
  - name: Search
    x-displayName: Search
  - name: StoreFrontCampaign
    x-displayName: StoreFrontCampaign
  - name: StoreFrontCurrency
    x-displayName: StoreFrontCurrency
  - name: StoreFrontPriceList
    x-displayName: StoreFrontPriceList
  - name: StoreFrontProductCategory
    x-displayName: StoreFrontProductCategory
  - name: StoreFrontProduct
    x-displayName: StoreFrontProduct
  - name: StoreFrontProductSearch
    x-displayName: StoreFrontProductSearch
  - name: StoreFrontSearchRedirect
    x-displayName: StoreFrontSearchRedirect
  - name: ReferenceData
    x-displayName: ReferenceData
  - name: CarrierConfiguration
    x-displayName: CarrierConfiguration
  - name: CarrierConfigurationGlobal
    x-displayName: CarrierConfigurationGlobal
  - name: CarrierCredential
    x-displayName: CarrierCredential
  - name: CarrierCredentialSet
    x-displayName: CarrierCredentialSet
  - name: ShippingProfile
    x-displayName: ShippingProfile
  - name: TargetRules
    x-displayName: TargetRules
  - name: Shipping
    x-displayName: Shipping
  - name: CartSettings
    x-displayName: CartSettings
  - name: CheckoutSettings
    x-displayName: CheckoutSettings
  - name: FulfillmentSettings
    x-displayName: FulfillmentSettings
  - name: GeneralSettings
    x-displayName: GeneralSettings
  - name: InventorySettings
    x-displayName: InventorySettings
  - name: ReturnSettings
    x-displayName: ReturnSettings
  - name: ShippingSettings
    x-displayName: ShippingSettings
  - name: StoreFrontFieldTypeDefinition
    x-displayName: StoreFrontFieldTypeDefinition
  - name: StoreFrontSchemaDefinition
    x-displayName: StoreFrontSchemaDefinition
  - name: StoreFrontSynonym
    x-displayName: StoreFrontSynonym
  - name: Tenants
    x-displayName: Tenants
x-tagGroups:
  - name: adminuser
    tags:
      - TenantAuthTicket
      - TenenantUser
      - DeveloperAuthTicket
      - TenantRole
  - name: appdev
    tags:
      - AppAuthTickets
      - FilebasedPackage
      - Package
      - PublicApplication
  - name: commerceruntime
    tags:
      - Cart
      - Channel
      - ChannelGroup
      - Checkout
      - Order
      - OrderAttribute
      - OrderValidationCapability
      - Quote
      - Return
      - Wishlist
  - name: content
    tags:
      - DocumentList
      - DocumentListType
      - DocumentPublishing
      - DocumentPublishSet
      - DocumentType
      - DocumentPropertyType
  - name: customer
    tags:
      - AccountAttributeDefinition
      - AddressValidation
      - AddressValidationCapability
      - StorefrontAuthTicket
      - B2BAccount
      - Credit
      - CustomerAccount
      - CustomerAttributeDefinition
      - CustomerSegment
      - CustomerSet
      - CustomerVisit
      - InStockNotificationSubscription
  - name: event
    tags:
      - Event
      - Subscription
  - name: fulfillment
    tags:
      - customer-survey-controller
      - manifest-controller
      - pick-wave-controller
      - shipment-attributes-controller
      - shipment-controller
      - shipment-data-controller
      - shipment-packages-controller
      - shipping-notification-controller
      - storefront-controller
      - workflow-process-controller
    description: REST API backing the Kibo Fulfiller User Interface
  - name: inventory
    tags:
      - InventoryBin
      - InventoryExportInventory
      - InventoryFetchFileConfig
      - InventoryModifyInventory
      - InventoryPendingItems
      - InventoryProductMapping
      - InventorySilo
      - InventorySite
      - InventoryTag
      - InventoryTagCategory
      - InventoryTagcategory
      - InventoryTenant
      - InventoryAllocation
      - InventoryAudit
      - Inventory
      - InventoryJob
      - InventoryOrderItem
      - InventoryTenantConfig
      - InventoryWave
  - name: location
    tags:
      - LocationAdmin
      - LocationAttributeDefinition
      - LocationGroup
      - LocationGroupConfiguration
      - LocationRuntime
      - LocationSettings
      - LocationType
  - name: mzdb
    tags:
      - EntityLists
      - SecureAppData
      - SiteData
      - TenantData
      - UserData
  - name: orderrouting
    tags:
      - OrderRoutingAfterAction
      - OrderRoutingAuth
      - OrderRoutingDataList
      - OrderRoutingEnvironment
      - OrderRoutingFilter
      - OrderRoutingGroup
      - OrderRoutingRouting
      - OrderRoutingSettings
      - OrderRoutingSite
      - OrderRoutingSort
      - OrderRoutingTenant
    description: Api Documentation
  - name: pricingruntime
    tags:
      - DiscountRuntime
      - TaxCapability
      - TaxRuntime
  - name: productadmin
    tags:
      - Attribute
      - Category
      - CoreFields
      - CouponSet
      - Currency
      - Discount
      - DiscountSettings
      - Facet
      - LocationInventory
      - MasterCatalog
      - PriceList
      - Product
      - ProductSortDefinition
      - ProductType
      - Publishing
      - Search
  - name: productruntime
    tags:
      - StoreFrontCampaign
      - StoreFrontCurrency
      - StoreFrontPriceList
      - StoreFrontProductCategory
      - StoreFrontProduct
      - StoreFrontProductSearch
      - StoreFrontSearchRedirect
  - name: reference
    tags:
      - ReferenceData
  - name: shippingadmin
    tags:
      - CarrierConfiguration
      - CarrierConfigurationGlobal
      - CarrierCredential
      - CarrierCredentialSet
      - ShippingProfile
      - TargetRules
  - name: shippingruntime
    tags:
      - Shipping
  - name: sitesettings
    tags:
      - CartSettings
      - CheckoutSettings
      - FulfillmentSettings
      - GeneralSettings
      - InventorySettings
      - ReturnSettings
      - ShippingSettings
  - name: solrschemamanager
    tags:
      - StoreFrontFieldTypeDefinition
      - StoreFrontSchemaDefinition
      - StoreFrontSynonym
  - name: tenant
    tags:
      - Tenants
components:
  schemas:
    BaseTenantEntity:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    BaseTenantEntityInternal:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseTenantEntity"
      properties:
        createDate:
          type: string
          format: date-time
        isDeleted:
          type: boolean
        deleteDate:
          type: string
          format: date-time
        updateDate:
          type: string
          format: date-time
        status:
          type: string
          nullable: true
      additionalProperties: false
    Behavior:
      type: object
      properties:
        id:
          type: integer
          format: int32
        categoryId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        requiresBehaviorIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        validUserTypes:
          type: array
          items:
            type: string
          nullable: true
        isPrivate:
          type: boolean
        systemRoles:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    Catalog:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseTenantEntity"
      properties:
        tenantId:
          type: integer
          format: int32
        masterCatalogId:
          type: integer
          format: int32
        defaultLocaleCode:
          type: string
          nullable: true
        defaultCurrencyCode:
          type: string
          nullable: true
      additionalProperties: false
    CatalogExtended:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseTenantEntityInternal"
      properties:
        tenantId:
          type: integer
          format: int32
        masterCatalogId:
          type: integer
          format: int32
        defaultLocaleCode:
          type: string
          nullable: true
        defaultCurrencyCode:
          type: string
          nullable: true
      additionalProperties: false
    ChangeUserPasswordInfo:
      type: object
      properties:
        newPassword:
          type: string
          nullable: true
      additionalProperties: false
    CollectionOfRole:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Role"
          nullable: true
      additionalProperties: false
    DeveloperAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    DeveloperAdminUserAuthTicket:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserProfile"
        createdOn:
          type: string
          format: date-time
        jwtAccessToken:
          type: string
          nullable: true
        accessToken:
          type: string
          nullable: true
        accessTokenExpiration:
          type: string
          format: date-time
        refreshToken:
          type: string
          nullable: true
        refreshTokenExpiration:
          type: string
          format: date-time
        account:
          $ref: "#/components/schemas/DeveloperAccount"
        availableAccounts:
          type: array
          items:
            $ref: "#/components/schemas/DeveloperAccount"
          nullable: true
        grantedBehaviors:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    Domain:
      type: object
      properties:
        domainName:
          type: string
          nullable: true
        zone:
          type: string
          nullable: true
        createDate:
          type: string
          format: date-time
        updateDate:
          type: string
          format: date-time
        isPrimary:
          type: boolean
        isInfrastructureRecord:
          type: boolean
        isSystemAssigned:
          type: boolean
        isDomainManaged:
          type: boolean
        ipAddress:
          type: string
          nullable: true
        cName:
          type: string
          nullable: true
        tenantId:
          type: integer
          format: int32
        siteId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    MasterCatalogExtended:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseTenantEntityInternal"
      properties:
        tenantId:
          type: integer
          format: int32
        defaultLocaleCode:
          type: string
          nullable: true
        defaultCurrencyCode:
          type: string
          nullable: true
        catalogs:
          type: array
          items:
            $ref: "#/components/schemas/CatalogExtended"
          nullable: true
      additionalProperties: false
    Owner:
      type: object
      properties:
        type:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
      additionalProperties: false
    Resource:
      type: object
      properties:
        type:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
      additionalProperties: false
    Role:
      type: object
      properties:
        name:
          type: string
          nullable: true
        isSystemRole:
          type: boolean
        behaviors:
          type: array
          items:
            $ref: "#/components/schemas/Behavior"
          nullable: true
        resources:
          type: array
          items:
            $ref: "#/components/schemas/Resource"
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        id:
          type: integer
          format: int32
        userScope:
          $ref: "#/components/schemas/UserScope"
        owners:
          type: array
          items:
            $ref: "#/components/schemas/Owner"
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    RoleCollection:
      type: object
      allOf:
        - $ref: "#/components/schemas/CollectionOfRole"
      additionalProperties: false
    SiteExtended:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseTenantEntityInternal"
      properties:
        tenantId:
          type: integer
          format: int32
        masterCatalogId:
          type: integer
          format: int32
          nullable: true
        catalogId:
          type: integer
          format: int32
          nullable: true
        countryCode:
          type: string
          nullable: true
        defaultLocaleCode:
          type: string
          nullable: true
        defaultCurrencyCode:
          type: string
          nullable: true
        isMozuRendered:
          type: boolean
          nullable: true
        domains:
          type: array
          items:
            $ref: "#/components/schemas/Domain"
          nullable: true
        routingTargetInfo:
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/TenantAttribute"
          nullable: true
        omsCatalogId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    TenantAdminUserAuthTicket:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserProfile"
        createdOn:
          type: string
          format: date-time
        jwtAccessToken:
          type: string
          nullable: true
        accessToken:
          type: string
          nullable: true
        accessTokenExpiration:
          type: string
          format: date-time
        refreshToken:
          type: string
          nullable: true
        redirect:
          type: string
          nullable: true
        refreshTokenExpiration:
          type: string
          format: date-time
        tenant:
          $ref: "#/components/schemas/AdminUserTenant"
        availableTenants:
          type: array
          items:
            $ref: "#/components/schemas/AdminUserTenant"
          nullable: true
        grantedBehaviors:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    TenantAttribute:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          nullable: true
        createBy:
          type: string
          nullable: true
        createDate:
          type: string
          format: date-time
        updateBy:
          type: string
          nullable: true
        updateDate:
          type: string
          format: date-time
      additionalProperties: false
    TenantCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/AdminUserTenant"
          nullable: true
      additionalProperties: false
    TenantExtended:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseTenantEntityInternal"
      properties:
        scaleUnitId:
          type: string
          nullable: true
        devAccountId:
          type: integer
          format: int32
          nullable: true
        isDevTenant:
          type: boolean
        sites:
          type: array
          items:
            $ref: "#/components/schemas/SiteExtended"
          nullable: true
        masterCatalogs:
          type: array
          items:
            $ref: "#/components/schemas/MasterCatalogExtended"
          nullable: true
        domain:
          $ref: "#/components/schemas/Domain"
        routingTargetInfo:
          type: string
          nullable: true
        supportsCustomExtensions:
          type: boolean
        mozuInstanceId:
          type: string
          nullable: true
        isUnified:
          type: boolean
        kubeNamespace:
          type: string
          nullable: true
        unifiedTenantType:
          type: string
          nullable: true
        omsEnabled:
          type: boolean
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/TenantAttribute"
          nullable: true
        omsMerchantId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        emailAddress:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        externalId:
          type: string
          nullable: true
        localeCode:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        optInToEmail:
          type: boolean
          nullable: true
        optInToTextMessage:
          type: boolean
          nullable: true
        id:
          type: string
          nullable: true
        systemData:
          $ref: "#/components/schemas/UserSystemData"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/UserRole"
          nullable: true
        isActive:
          type: boolean
        identityProviderId:
          type: string
          nullable: true
      additionalProperties: false
    UserAuthInfo:
      type: object
      properties:
        emailAddress:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
      additionalProperties: false
    UserProfile:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
      additionalProperties: false
    UserRole:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        assignedInScope:
          $ref: "#/components/schemas/UserScope"
        roleId:
          type: integer
          format: int32
        roleName:
          type: string
          nullable: true
        roleTags:
          type: array
          items:
            type: string
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    UserScope:
      type: object
      properties:
        type:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    UserSystemData:
      type: object
      properties:
        isPasswordChangeRequired:
          type: boolean
        lastPasswordChangeOn:
          type: string
          format: date-time
          nullable: true
        isLocked:
          type: boolean
        lastLockedOn:
          type: string
          format: date-time
          nullable: true
        failedLoginAttemptCount:
          type: integer
          format: int32
        remainingLoginAttempts:
          type: integer
          format: int32
        firstFailedLoginAttemptOn:
          type: string
          format: date-time
          nullable: true
        lastLoginOn:
          type: string
          format: date-time
          nullable: true
        createdOn:
          type: string
          format: date-time
          nullable: true
        updatedOn:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    AdminUserAuditInfo:
      type: object
      properties:
        updateDate:
          type: string
          format: date-time
          nullable: true
        createDate:
          type: string
          format: date-time
          nullable: true
        updateBy:
          type: string
          nullable: true
        createBy:
          type: string
          nullable: true
      additionalProperties: false
    AdminUserMasterCatalog:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseTenantEntity"
      properties:
        tenantId:
          type: integer
          format: int32
        defaultLocaleCode:
          type: string
          nullable: true
        defaultCurrencyCode:
          type: string
          nullable: true
        catalogs:
          type: array
          items:
            $ref: "#/components/schemas/Catalog"
          nullable: true
      additionalProperties: false
    AdminUserPasswordInfo:
      type: object
      properties:
        oldPassword:
          type: string
          description: Old password.
          nullable: true
        newPassword:
          type: string
          description: New password.
          nullable: true
      additionalProperties: false
      description: Old password and new password.
    AdminUserResetPasswordInfo:
      type: object
      properties:
        emailAddress:
          type: string
          nullable: true
      additionalProperties: false
      description: Email address of the user who is requesting a new password.
    AdminUserSite:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseTenantEntity"
      properties:
        tenantId:
          type: integer
          format: int32
        catalogId:
          type: integer
          format: int32
        localeCode:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        domain:
          type: string
          nullable: true
        primaryCustomDomain:
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/TenantAttribute"
          nullable: true
      additionalProperties: false
    AdminUserTenant:
      type: object
      allOf:
        - $ref: "#/components/schemas/BaseTenantEntity"
      properties:
        isDevTenant:
          type: boolean
        sites:
          type: array
          items:
            $ref: "#/components/schemas/AdminUserSite"
          nullable: true
        masterCatalogs:
          type: array
          items:
            $ref: "#/components/schemas/AdminUserMasterCatalog"
          nullable: true
        domain:
          type: string
          nullable: true
        omsMerchantId:
          type: integer
          format: int32
          nullable: true
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/TenantAttribute"
          nullable: true
        isUnified:
          type: boolean
      additionalProperties: false
    AdminUserUserRoleCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/UserRole"
          nullable: true
      additionalProperties: false
      description: Collection of UserRoles for given user.
    HttpMethod:
      type: object
      properties:
        method:
          type: string
          nullable: true
      additionalProperties: false
    HttpStatusCode:
      enum:
        - 100
        - 101
        - 102
        - 103
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 207
        - 208
        - 226
        - 300
        - 301
        - 302
        - 303
        - 304
        - 305
        - 306
        - 307
        - 308
        - 400
        - 401
        - 402
        - 403
        - 404
        - 405
        - 406
        - 407
        - 408
        - 409
        - 410
        - 411
        - 412
        - 413
        - 414
        - 415
        - 416
        - 417
        - 421
        - 422
        - 423
        - 424
        - 426
        - 428
        - 429
        - 431
        - 451
        - 500
        - 501
        - 502
        - 503
        - 504
        - 505
        - 506
        - 507
        - 508
        - 510
        - 511
      type: integer
      format: int32
    KeyValuePair`2:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    AppAuthInfo:
      type: object
      properties:
        applicationId:
          type: string
          nullable: true
        sharedSecret:
          type: string
          nullable: true
      additionalProperties: false
    ApplicationAttribute:
      type: object
      properties:
        subsystem:
          type: string
          description: Customer, Order, or Product
          nullable: true
        attributeJson:
          type: string
          description: json representation of attribute definitions
          nullable: true
        productTypeJson:
          type: string
          description: Will contain ProductTypeCollection if Product, else AttributeSet
          nullable: true
        isAppliedToBase:
          type: boolean
        sourceTenantId:
          type: integer
          description: Source Tenant Id
          format: int32
        sourceTenantName:
          type: string
          description: Source Tenant Name
          nullable: true
        attributeCodes:
          type: string
          description: Comma delimited list of attribute codes.
          nullable: true
        packageId:
          type: integer
          description: ""
          format: int32
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/AppDevAttribute"
          description: ""
          nullable: true
      additionalProperties: false
      description: Holds attribute definitions for AppVersion
    ApplicationBehavior:
      type: object
      properties:
        behaviorId:
          type: integer
          description: ""
          format: int32
        packageId:
          type: integer
          description: ""
          format: int32
      additionalProperties: false
      description: ""
    ApplicationCapability:
      type: object
      properties:
        applicationCapabilityId:
          type: integer
          description: ""
          format: int32
        capabilityTypeContractId:
          type: integer
          description: ""
          format: int32
        applicationEndPoint:
          type: string
          description: ""
          nullable: true
        applicationCapabilityTypeId:
          type: integer
          description: ""
          format: int32
          nullable: true
        packageId:
          type: integer
          description: ""
          format: int32
      additionalProperties: false
      description: ""
    ApplicationCapabilityDomain:
      type: object
      properties:
        applicationCapabilityDomainId:
          type: integer
          description: ""
          format: int32
        applicationCapabilityTypeId:
          type: integer
          description: ""
          format: int32
        name:
          type: string
          description: ""
          nullable: true
        applicationCapabilityDomainValues1:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationCapabilityDomainValue"
          description: ""
          nullable: true
        applicationCapabilityDomainValues2:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationCapabilityDomainValue"
          description: ""
          nullable: true
      additionalProperties: false
      description: ""
    ApplicationCapabilityDomainValue:
      type: object
      properties:
        applicationCapabilityDomainValueId:
          type: integer
          description: ""
          format: int32
        applicationCapabilityDomainId1:
          type: integer
          description: ""
          format: int32
          nullable: true
        applicationCapabilityDomainId2:
          type: integer
          description: ""
          format: int32
          nullable: true
        valueName:
          type: string
          description: ""
          nullable: true
        displayName:
          type: string
          description: ""
          nullable: true
      additionalProperties: false
      description: ""
    ApplicationCapabilityType:
      type: object
      properties:
        applicationCapabilityTypeId:
          type: integer
          description: ""
          format: int32
        applicationId:
          type: integer
          description: ""
          format: int32
        capabilityTypeId:
          type: integer
          description: ""
          format: int32
        capabilityTypeName:
          type: string
          description: ""
          nullable: true
        isImplemented:
          type: boolean
          description: ""
        isInitializedByDefault:
          type: boolean
          description: ""
        applicationCapabilities:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationCapability"
          description: ""
          nullable: true
        applicationCapabilityDomains:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationCapabilityDomain"
          description: ""
          nullable: true
        packageId:
          type: integer
          description: ""
          format: int32
      additionalProperties: false
      description: ""
    ApplicationEntitlement:
      type: object
      properties:
        appKey:
          type: string
          description: ""
          nullable: true
        applicationEntitlementId:
          type: integer
          description: ""
          format: int32
        packageId:
          type: integer
          description: ""
          format: int32
        applicationLicenseType:
          type: string
          description: ""
          nullable: true
        entitlementStatus:
          type: string
          description: ""
          nullable: true
        tenantId:
          type: integer
          description: ""
          format: int32
        siteId:
          type: integer
          description: ""
          format: int32
          nullable: true
        effectiveStartDate:
          type: string
          description: ""
          format: date-time
          nullable: true
        effectiveEndDate:
          type: string
          description: ""
          format: date-time
          nullable: true
        applicationTransactions:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationTransaction"
          description: ""
          nullable: true
        applicationName:
          type: string
          description: ""
          nullable: true
        applicationVersion:
          type: string
          description: ""
          nullable: true
        installedByFirstName:
          type: string
          description: ""
          nullable: true
        installedByLastName:
          type: string
          description: ""
          nullable: true
        installedDate:
          type: string
          description: ""
          format: date-time
        packageName:
          type: string
          description: ""
          nullable: true
        tenantName:
          type: string
          description: ""
          nullable: true
        applicationStatusId:
          type: string
          description: ""
          nullable: true
        applicationId:
          type: integer
          description: ""
          format: int32
        devAccountId:
          type: integer
          description: Denotes which DevAccountId is the application installed in
          format: int32
        installedAppsApplicationId:
          type: string
          description: ""
          nullable: true
        appOwnerDevAccountId:
          type: integer
          description: Denotes the application owner dev account id
          format: int32
      additionalProperties: false
      description: ""
    ApplicationSubscription:
      type: object
      properties:
        applicationSubscriptionId:
          type: integer
          description: The unique identifier of an ApplicationVersionEvent record.
          format: int32
        applicationEndPoint:
          type: string
          description:
            The End Point where the event information will be sent to when the
            event is fired.
          nullable: true
        events:
          type: array
          items:
            $ref: "#/components/schemas/AppDevEvent"
          description: ""
          nullable: true
        packageId:
          type: integer
          description: ""
          format: int32
        noCallback:
          type: boolean
          description: ""
      additionalProperties: false
      description: Defines an event that an Application Version is subscribed to.
    ApplicationSummary:
      type: object
      properties:
        parentName:
          type: string
          description: ""
          nullable: true
        applicationId:
          type: integer
          description: ""
          format: int32
        applicationTypeId:
          type: integer
          description: ""
          format: int32
        releasePackageId:
          type: integer
          description: ""
          format: int32
        releasePackageName:
          type: string
          description: ""
          nullable: true
        name:
          type: string
          description: ""
          nullable: true
        applicationNamespace:
          type: string
          description: ""
          nullable: true
        applicationVersion:
          $ref: "#/components/schemas/AppVersion"
        applicationStatusId:
          type: integer
          description: ""
          format: int32
        appId:
          type: string
          description: ""
          nullable: true
        applicationStatusName:
          type: string
          description: ""
          nullable: true
        hasVersions:
          type: boolean
          description: ""
        appSchemeVersion:
          type: integer
          description: ""
          format: int32
        appKey:
          type: string
          description: The AppKey is a runtime type.
          nullable: true
        parentAppKey:
          type: string
          description: "The AppKey is a runtime type.\r

            This only applies for themes that inherit from another
            theme."
          nullable: true
        updateParentAppKey:
          type: string
          description: "The AppKey is a runtime type.\r

            This only applies for themes that inherit from another
            theme.\r

            It shows the most current update available."
          nullable: true
        updateAvailable:
          type: boolean
          description: ""
      additionalProperties: false
    ApplicationSummaryCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationSummary"
          nullable: true
      additionalProperties: false
      description: Collection of products returned as a whole. A collection is not paged.
    ApplicationTransaction:
      type: object
      properties:
        applicationTransactionId:
          type: integer
          description: ""
          format: int32
        applicationId:
          type: integer
          description: ""
          format: int32
        applicationEntitlementId:
          type: integer
          description: ""
          format: int32
          nullable: true
        tenantId:
          type: integer
          description: ""
          format: int32
        siteId:
          type: integer
          description: ""
          format: int32
          nullable: true
        localeCode:
          type: integer
          description: ""
          format: int32
        isoCurrencyCode:
          type: string
          description: ""
          nullable: true
        transactionDate:
          type: string
          description: ""
          format: date-time
        transactionPrice:
          type: number
          description: ""
          format: double
        transactionTax:
          type: number
          description: ""
          format: double
        transactionTotal:
          type: number
          description: ""
          format: double
        orderNumber:
          type: string
          description: ""
          nullable: true
      additionalProperties: false
      description: ""
    AppVersion:
      type: object
      properties:
        majorVersion:
          type: integer
          description: ""
          format: int32
        minorVersion:
          type: integer
          description: ""
          format: int32
        revision:
          type: integer
          description: ""
          format: int32
      additionalProperties: false
      description: ""
    AuthTicket:
      type: object
      properties:
        refreshToken:
          type: string
          nullable: true
        accessToken:
          type: string
          nullable: true
        accessTokenExpiration:
          type: string
          format: date-time
        refreshTokenExpiration:
          type: string
          format: date-time
      additionalProperties: false
    AuthTicketRequest:
      type: object
      properties:
        refreshToken:
          type: string
          description: The refresh token for renewing the authorization.
          nullable: true
      additionalProperties: false
      description:
        Complex object to have the refresh token sent in the body intead of
        as clear text in the query string.
    OAuthAccessTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          nullable: true
        token_type:
          type: string
          nullable: true
        expires_in:
          type: integer
          format: int32
        refresh_token:
          type: string
          nullable: true
      additionalProperties: false
    OauthAuthRequest:
      type: object
      properties:
        client_id:
          type: string
          nullable: true
        client_secret:
          type: string
          nullable: true
        refresh_token:
          type: string
          nullable: true
        grant_type:
          type: string
          nullable: true
      additionalProperties: false
    OauthAuthRequestInternal:
      type: object
      allOf:
        - $ref: "#/components/schemas/OauthAuthRequest"
      properties:
        application_name:
          type: string
          nullable: true
      additionalProperties: false
    PackageCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/AppDevPackage"
          nullable: true
      additionalProperties: false
      description: ""
    PackageRequest:
      type: object
      properties:
        appKey:
          type: string
          description: ""
          nullable: true
        parentThemeAppKey:
          type: string
          description: ""
          nullable: true
      additionalProperties: false
      description: ""
    PackageSummary:
      type: object
      properties:
        id:
          type: integer
          description: Package Id
          format: int32
        name:
          type: string
          description: Package Name
          nullable: true
        applicationName:
          type: string
          description: Application Name
          nullable: true
        applicationTypeId:
          type: integer
          description: Application Type Id
          format: int32
        majorVersion:
          type: integer
          description: Application Major Version
          format: int32
        minorVersion:
          type: integer
          description: Application Minor Version
          format: int32
        revision:
          type: integer
          description: Application Revision
          format: int32
        isLocked:
          type: boolean
          description: IsLocked
        applicationId:
          type: integer
          description: ApplicationId
          format: int32
      additionalProperties: false
      description: ""
    PackageSummaryCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/PackageSummary"
          nullable: true
      additionalProperties: false
      description: ""
    ApplicationVersionsCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    FileMetadata:
      type: object
      properties:
        id:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        checkSum:
          type: string
          nullable: true
        sizeInBytes:
          type: integer
          format: int64
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    FolderMetadata:
      type: object
      properties:
        name:
          type: string
          nullable: true
        fullPath:
          type: string
          nullable: true
        files:
          type: array
          items:
            $ref: "#/components/schemas/FileMetadata"
          nullable: true
        subFolders:
          type: array
          items:
            $ref: "#/components/schemas/FolderMetadata"
          nullable: true
      additionalProperties: false
    PackageNamesCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    RenameInfo:
      type: object
      properties:
        oldFullPath:
          type: string
          nullable: true
        newFullPath:
          type: string
          nullable: true
      additionalProperties: false
    AppDevHttpContent:
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: "#/components/schemas/KeyValuePair`2"
          nullable: true
          readOnly: true
      additionalProperties: false
    AppDevHttpRequestMessage:
      type: object
      properties:
        version:
          type: string
          nullable: true
        content:
          $ref: "#/components/schemas/AppDevHttpContent"
        method:
          $ref: "#/components/schemas/HttpMethod"
        requestUri:
          type: string
          format: uri
          nullable: true
        headers:
          type: array
          items:
            $ref: "#/components/schemas/KeyValuePair`2"
          nullable: true
          readOnly: true
        properties:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
      additionalProperties: false
    AppDevHttpResponseMessage:
      type: object
      properties:
        version:
          type: string
          nullable: true
        content:
          $ref: "#/components/schemas/AppDevHttpContent"
        statusCode:
          $ref: "#/components/schemas/HttpStatusCode"
        reasonPhrase:
          type: string
          nullable: true
        headers:
          type: array
          items:
            $ref: "#/components/schemas/KeyValuePair`2"
          nullable: true
          readOnly: true
        trailingHeaders:
          type: array
          items:
            $ref: "#/components/schemas/KeyValuePair`2"
          nullable: true
          readOnly: true
        requestMessage:
          $ref: "#/components/schemas/AppDevHttpRequestMessage"
        isSuccessStatusCode:
          type: boolean
          readOnly: true
      additionalProperties: false
    AppDevAttribute:
      type: object
      properties:
        attributeId:
          type: integer
          description: ""
          format: int32
        code:
          type: string
          description: ""
          nullable: true
        type:
          type: string
          description: ""
          nullable: true
        fqn:
          type: string
          description: ""
          nullable: true
        sequence:
          type: integer
          description: ""
          format: int32
        vocabularyJson:
          type: string
          description: ""
          nullable: true
        applicationAttributeId:
          type: integer
          description: ""
          format: int32
        name:
          type: string
          description: ""
          nullable: true
        inputType:
          type: string
          description: ""
          nullable: true
        adminName:
          type: string
          description: ""
          nullable: true
        vocabularyValues:
          type: string
          description: ""
          nullable: true
      additionalProperties: false
      description: ""
    AppDevEvent:
      type: object
      properties:
        eventId:
          type: integer
          description: Unique identifier of an Event record.
          format: int32
        eventName:
          type: string
          description: The name of the event.
          nullable: true
        eventCategory:
          type: string
          description: The category the event belongs to.
          nullable: true
        apiVersionNumber:
          type: string
          description:
            The Api Version Number which defines what events are available for
            a given API version.
          nullable: true
      additionalProperties: false
      description: Describes an event that a 3rd party developer can subscribe to.
    AppDevPackage:
      type: object
      properties:
        updateDate:
          type: string
          description: ""
          format: date-time
        applicationUpdateDate:
          type: string
          description: ""
          format: date-time
          nullable: true
        id:
          type: integer
          description: ""
          format: int32
        applicationName:
          type: string
          description: ""
          nullable: true
        applicationTypeId:
          type: integer
          description: ""
          format: int32
        applicationTypeName:
          type: string
          description: ""
          nullable: true
        majorVersion:
          type: integer
          description: ""
          format: int32
        minorVersion:
          type: integer
          description: ""
          format: int32
        revision:
          type: integer
          description: ""
          format: int32
        sharedSecret:
          type: string
          description: ""
          nullable: true
        applicationStatusId:
          type: integer
          description: ""
          format: int32
        applicationStatusName:
          type: string
          description: ""
          nullable: true
        apiVersion:
          type: string
          description: ""
          nullable: true
        applicationDescription:
          type: string
          description: ""
          nullable: true
        themeEngineVersion:
          type: string
          description: ""
          nullable: true
        namespace:
          type: string
          description: ""
          nullable: true
        validApplicationStatusIdList:
          type: array
          items:
            type: integer
            format: int32
          description:
            "List of Statuses that the application can move to during the
            application lifecycle.\r

            This is based on what the current value of the
            ApplicatinStatusId is."
          nullable: true
        appSchemeVersion:
          type: integer
          description: ""
          format: int32
        appConfigUrl:
          type: string
          description:
            "This will be used by the 3rd party developers to set a URL the
            intalled \r

            applications can call from the Tenant installation/"
          nullable: true
        isReleasePackage:
          type: boolean
          description: ""
        packageName:
          type: string
          description: ""
          nullable: true
        packageDescription:
          type: string
          description: ""
          nullable: true
        dataNamespace:
          type: string
          description: ""
          nullable: true
        userId:
          type: string
          description: ""
          nullable: true
        appId:
          type: string
          description: ""
          nullable: true
        applicationId:
          type: integer
          description: ""
          format: int32
        applicationDetailId:
          type: integer
          description: ""
          format: int32
          nullable: true
        isLocked:
          type: boolean
          description: ""
        isDeleted:
          type: boolean
          description: ""
        assetFileCount:
          type: integer
          description: ""
          format: int32
        packageGuid:
          type: string
          description: ""
          nullable: true
        applicationStatus:
          type: string
          description: ""
          nullable: true
        applicationBehaviors:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationBehavior"
          description:
            List of Application Behaviors that apply to this version of the
            application.
          nullable: true
        applicationSubscriptions:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationSubscription"
          description: ""
          nullable: true
        applicationCapabilityTypes:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationCapabilityType"
          description: ""
          nullable: true
        applicationAttributes:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationAttribute"
          description: ""
          nullable: true
        applicationCapabilities:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationCapability"
          description: ""
          nullable: true
        applicationEntitlements:
          type: array
          items:
            $ref: "#/components/schemas/ApplicationEntitlement"
          description: ""
          nullable: true
        attributeNamespace:
          type: string
          description: ""
          nullable: true
        hasApplicationVersions:
          type: boolean
          description: ""
        legacyNamespace:
          type: string
          description: ""
          nullable: true
        namespaceRegistryId:
          type: string
          description: ""
          nullable: true
        publishedParentThemeId:
          type: integer
          description: ""
          format: int32
          nullable: true
        publishedParentSemanticVersion:
          type: string
          description: ""
          nullable: true
        semanticVersionRange:
          type: string
          description: ""
          nullable: true
        parentThemeName:
          type: string
          description: ""
          nullable: true
        parentThemeAppKey:
          type: string
          description: "The parent theme AppKey if this is a theme and \r

            the theme extends a valid, published theme."
          nullable: true
        updateParentAppKey:
          type: string
          description: "The AppKey is a runtime type.\r

            This only applies for themes that inherit from another
            theme.\r

            It shows the most current update available."
          nullable: true
        updateAvailable:
          type: boolean
          description: Whether or not there's a theme update.
        appKey:
          type: string
          description: App Key for the package in question.
          nullable: true
        updateParentThemeName:
          type: string
          description:
            "This only applies for themes that inherit from another theme.\r

            It shows the name of the most current update available."
          nullable: true
        updateParentThemeVersion:
          type: string
          description:
            "This only applies for themes that inherit from another theme.\r

            It shows the version of the most current update
            available."
          nullable: true
        applicationOwnerDevAccountId:
          type: integer
          description: This is the DevAccountId that owns the application
          format: int32
      additionalProperties: false
      description: ""
    AppDevByteArrayContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppDevHttpContent"
      additionalProperties: false
    AppDevCurlResponseMessage:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppDevHttpResponseMessage"
      additionalProperties: false
    AppDevDecompressedContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppDevHttpContent"
      additionalProperties: false
    AppDevHttpConnectionResponseContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppDevHttpContent"
      additionalProperties: false
    AppDevNoWriteNoSeekStreamContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppDevHttpContent"
      additionalProperties: false
    AppDevReadOnlyMemoryContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppDevHttpContent"
      additionalProperties: false
    AppDevStreamContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppDevHttpContent"
      additionalProperties: false
    AppDevBrotliDecompressedContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppDevDecompressedContent"
      additionalProperties: false
    AppDevDeflateDecompressedContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppDevDecompressedContent"
      additionalProperties: false
    AppDevFormUrlEncodedContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppDevByteArrayContent"
      additionalProperties: false
    AppDevGZipDecompressedContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppDevDecompressedContent"
      additionalProperties: false
    AppDevStringContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppDevByteArrayContent"
      additionalProperties: false
    AbstractFulfillmentItem:
      type: object
      properties:
        productCode:
          type: string
          description: Code of the Product to be fulfilled.
          nullable: true
        quantity:
          type: integer
          description: Quantity of the order item
          format: int32
        fulfillmentItemType:
          type: string
          description: The type of fulfillment item
          nullable: true
        lineId:
          type: integer
          description: The line id associated with the fulfillment.
          format: int32
          nullable: true
        optionAttributeFQN:
          type: string
          nullable: true
      additionalProperties: false
    Adjustment:
      type: object
      properties:
        amount:
          type: number
          format: double
          nullable: true
        description:
          type: string
          nullable: true
        internalComment:
          type: string
          nullable: true
      additionalProperties: false
    AttributeValueLocalizedContent:
      required:
        - localeCode
        - value
      type: object
      properties:
        localeCode:
          type: string
        value:
          type: string
      additionalProperties: false
    BillingInfo:
      type: object
      properties:
        paymentType:
          type: string
          description:
            "Type of payment, such as credit card, check by mail, or PayPal.\r

            see
            Mozu.CommerceRuntime.Contracts.Payments.PaymentTypeConst for valid
            values"
          nullable: true
        paymentWorkflow:
          type: string
          nullable: true
        billingContact:
          $ref: "#/components/schemas/CommerceRuntimeContact"
        isSameBillingShippingAddress:
          type: boolean
          description: Indicates that billing and shipping address are the same
        card:
          $ref: "#/components/schemas/PaymentCard"
        token:
          $ref: "#/components/schemas/PaymentToken"
        purchaseOrder:
          $ref: "#/components/schemas/PurchaseOrderPayment"
        check:
          $ref: "#/components/schemas/CheckPayment"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        storeCreditCode:
          type: string
          description: The store credit to use for this purchase
          nullable: true
        storeCreditType:
          type: string
          description: The type of store credit used for this purchase
          nullable: true
        customCreditType:
          type: string
          description: Name of custom stored credit type
          nullable: true
        externalTransactionId:
          type: string
          description:
            Transaction Id from third party payment source like Visa Checkout,
            Amazon
          nullable: true
        data:
          type: object
          description: Custom data from payment providers
          nullable: true
      additionalProperties: false
      description:
        "Customer's payment details such as payment type (credit card,
        check by mail, or PayPal)\r

        and cardholder information if payment is by credit card."
    CancelReasonCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CancelReasonItem"
          nullable: true
      additionalProperties: false
    CancelReasonItem:
      type: object
      allOf:
        - $ref: "#/components/schemas/ReasonItemBase"
      additionalProperties: false
    CapturableShipmentSummary:
      type: object
      properties:
        shipmentNumber:
          type: integer
          format: int32
        shipmentTotal:
          type: number
          format: double
      additionalProperties: false
    CarrierServiceGenerateLabelResponse:
      type: object
      properties:
        imageURL:
          type: string
          nullable: true
        integratorId:
          type: string
          nullable: true
        price:
          type: number
          format: double
          nullable: true
        trackingNumber:
          type: string
          nullable: true
      additionalProperties: false
    Cart:
      type: object
      allOf:
        - $ref: "#/components/schemas/CommerceAggregate"
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/CartItem"
          description: List of items in the cart.
          nullable: true
        couponCodes:
          type: array
          items:
            type: string
          description: Coupon codes associated with this order.  Only set on order import.
          nullable: true
        invalidCoupons:
          type: array
          items:
            $ref: "#/components/schemas/InvalidCoupon"
          description: A list of invalid coupons that were attempted on the cart
          nullable: true
        priceListCode:
          type: string
          description: Pricelist code
          nullable: true
        cartMessage:
          $ref: "#/components/schemas/CartMessage"
        cartMessages:
          type: array
          items:
            $ref: "#/components/schemas/CartMessage"
          nullable: true
        handlingAmount:
          type: number
          description: Order level handling fees excluding any discounts.
          format: double
          nullable: true
        handlingSubTotal:
          type: number
          description:
            Handling fees for the Order as well as CartItems (e.g. if the Cart
            has a $5 handling fee and an CartItem has a $2 handling fee per item
            quantity and the quantity of items is 2 then the value in this
            property would be $9)
          format: double
          nullable: true
        handlingTotal:
          type: number
          description: Handling fees including any discounts.
          format: double
          nullable: true
      additionalProperties: false
      description:
        "Details of the current cart, including shopper's user ID, items
        listed in the cart, and any system messages. \r

        For each item, contains the list of available discounts and the
        actual discount applied to the cart item."
    CartChangeMessageCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeChangeMessage"
          nullable: true
      additionalProperties: false
      description:
        Collection of cart messages returned as a whole. A collection is
        not paged.
    CartItem:
      type: object
      allOf:
        - $ref: "#/components/schemas/CommerceItem"
      properties:
        id:
          type: string
          description: Unique identifier of the item in the cart.
          nullable: true
        fulfillmentLocationCode:
          type: string
          description: Location code from which to obtain this item
          nullable: true
        fulfillmentMethod:
          type: string
          description: Fulfillment method used to fulfill this item
          nullable: true
      additionalProperties: false
      description:
        Details of an item in the shopper's cart, such as the product name,
        stock count, unit price, discounts, quantity ordered, and total price.
    CartItemCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CartItem"
          nullable: true
      additionalProperties: false
      description: Collection of items in the cart. A collection is not paged.
    CartMessage:
      type: object
      properties:
        message:
          type: string
          nullable: true
        messageType:
          type: string
          nullable: true
        productsRemoved:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeProduct"
          nullable: true
      additionalProperties: false
    CartSummary:
      type: object
      properties:
        itemCount:
          type: integer
          description: Number of items in the active cart.
          format: int32
          nullable: true
        totalQuantity:
          type: integer
          description: Total quantity of all items in the cart
          format: int32
          nullable: true
        total:
          type: number
          description: Total cost of items in the active cart.
          format: double
          nullable: true
        isExpired:
          type: boolean
          description: "If true, the cart has reached its expiration date
            (Cart.ExpirationDate) and considered abandoned. \r

            Carts of anonymous shoppers expire after 14 days of
            inactivity."
          nullable: true
        hasActiveCart:
          type: boolean
          description: If true, the cart is active. A shopper has added an item to a cart.
          nullable: true
      additionalProperties: false
      description:
        Cart summary, which is the number of items in the active cart,
        total cost of items in the cart, and whether the cart has expired.
    Channel:
      type: object
      properties:
        tenantId:
          type: integer
          description: Tenant that owns the channel.
          format: int32
        code:
          type: string
          description: Code to uniquely identify the channel.
          nullable: true
        name:
          type: string
          description: Friendly name of the channel.
          nullable: true
        region:
          type: string
          description: Country code of the channel.
          nullable: true
        countryCode:
          type: string
          description: Country code of the channel.
          nullable: true
        groupCode:
          type: string
          description:
            Code to uniquely identify the channel group, if any that contains
            this channel.
          nullable: true
        siteIds:
          type: array
          items:
            type: integer
            format: int32
          description: A list of site Id's that this channel contains.
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Channel used to group sites for commerce purposes.
    ChannelCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Channel"
          nullable: true
      additionalProperties: false
    ChannelGroup:
      type: object
      properties:
        tenantId:
          type: integer
          description: Tenant that owns the channel.
          format: int32
        code:
          type: string
          description: Code to uniquely identify the channel.
          nullable: true
        name:
          type: string
          description: Friendly name of the channel.
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Used to group channels together to manage common channel information.
    ChannelGroupCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ChannelGroup"
          nullable: true
      additionalProperties: false
    Checkout:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier.
          nullable: true
        siteId:
          type: integer
          description: Unique identifier of the Site.
          format: int32
        tenantId:
          type: integer
          description: Unique identifier of the Tenant.
          format: int32
        number:
          type: integer
          description: A checkout number that is only assigned after the checkout is placed.
          format: int32
          nullable: true
        originalCartId:
          type: string
          description: Unique identifier for the cart that was converted to checkout.
          nullable: true
        submittedDate:
          type: string
          description: When the customer placed (submitted) the order.
          format: date-time
          nullable: true
        type:
          type: string
          description:
            Is this Order Online or Offline? Online means shopper entered at
            checkout, offline means a phone order.
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeOrderItem"
          description: List of items in the checkout.
          nullable: true
        groupings:
          type: array
          items:
            $ref: "#/components/schemas/CheckoutGrouping"
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        destinations:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeDestination"
          nullable: true
        payments:
          type: array
          items:
            $ref: "#/components/schemas/Payment"
          description:
            "Payment transaction associated with this checkout. It is the
            entire payment interchange between the merchant \r

            who is forwarding the customer's payment information and
            the payment service who is authorizing and \r

            capturing payment. Payment can be either by credit card,
            check, or PayPal."
          nullable: true
        amountRemainingForPayment:
          type: number
          description:
            "A counter for how much of the total has not been claimed by
            payments.\r

            This is computed by Total - (sum of Payments where State
            is not Voided/Declined)"
          format: double
        acceptsMarketing:
          type: boolean
          description: Does the customer accept marketing
          nullable: true
        customerAccountId:
          type: integer
          description: Unique identifier of the customer account.
          format: int32
          nullable: true
        email:
          type: string
          description: Email address for checkout
          nullable: true
        customerTaxId:
          type: string
          description:
            The customers tax ID. If Customer Account ID exists in the system,
            will set this.
          nullable: true
          readOnly: true
        isTaxExempt:
          type: boolean
          description: Unique identifier of the customer account.
          nullable: true
          readOnly: true
        currencyCode:
          type: string
          description: ISO Currency Code.
          nullable: true
        priceListCode:
          type: string
          description: Pricelist code for the checkout
          nullable: true
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/OrderAttribute"
          nullable: true
        shopperNotes:
          $ref: "#/components/schemas/CommerceRuntimeShopperNotes"
        availableActions:
          type: array
          items:
            type: string
          nullable: true
        data:
          type: object
          description: Custom data for a given vendor set within the commerce process.
          nullable: true
        taxData:
          type: object
          description: Storage for any additional/custom tax data.
          nullable: true
        channelCode:
          type: string
          description: Unique identifier of the channel for this item.
          nullable: true
        locationCode:
          type: string
          description:
            Identifies the location at which the order was placed if the order
            was placed externally.
          nullable: true
        ipAddress:
          type: string
          description: IP address of the user placing the order. (User or customer?)
          nullable: true
        sourceDevice:
          type: string
          description: Source device of the user placing the order. (User or customer?)
          nullable: true
        visitId:
          type: string
          description:
            Identifies the Visit ID that was current when the order was placed
            or when the cart was last updated.
          nullable: true
        webSessionId:
          type: string
          description:
            Identifies the web session used to place the order or last update
            the cart.
          nullable: true
        customerInteractionType:
          type: string
          description:
            "Determines the interaction type that a customer will use to create
            this object.\r

            Valid values are: Website, Store, Call, Unknown"
          nullable: true
        orderDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeAppliedDiscount"
          nullable: true
        couponCodes:
          type: array
          items:
            type: string
          description: Coupon codes associated with this order.
          nullable: true
        invalidCoupons:
          type: array
          items:
            $ref: "#/components/schemas/InvalidCoupon"
          description: A list of invalid coupons that were attempted on the order.
          nullable: true
        suggestedDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/SuggestedDiscount"
          nullable: true
        discountThresholdMessages:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeThresholdMessage"
          description:
            List of Mozu.CommerceRuntime.Contracts.Commerce.ThresholdMessage
            objects that are valid for the current value of the cart/order.
          nullable: true
        dutyTotal:
          type: number
          description: Total duty fees
          format: double
          nullable: true
        feeTotal:
          type: number
          description: Total Fees
          format: double
        subTotal:
          type: number
          description: Subtotal before any coupon codes, taxes, fees, etc.
          format: double
        itemLevelProductDiscountTotal:
          type: number
          description: The total value of item-level product discounts.
          format: double
        orderLevelProductDiscountTotal:
          type: number
          description: The total value of order-level (group-level) product discounts.
          format: double
        itemTaxTotal:
          type: number
          description: Total tax on products.
          format: double
        itemTotal:
          type: number
          description: The total product cost, accounting for discounts and tax.
          format: double
        shippingSubTotal:
          type: number
          description: Shipping does not appear on cart.
          format: double
        itemLevelShippingDiscountTotal:
          type: number
          description: The total value of item-level shipping discounts.
          format: double
        orderLevelShippingDiscountTotal:
          type: number
          description: The total value of order-level (group-level) shipping discounts.
          format: double
        shippingTaxTotal:
          type: number
          description: Total tax on shipping.
          format: double
        shippingTotal:
          type: number
          description:
            Overall shipping total, accounting for item and order-level
            shipping costs, any shipping discounts, and shipping tax.
          format: double
        handlingSubTotal:
          type: number
          description:
            "Pre-Discounted Handling Subtotal of the CommerceAggregate and its
            Items.\r

            Returns {null} if the calculated value is negative."
          format: double
        itemLevelHandlingDiscountTotal:
          type: number
          description: The total value of item-level handling discounts.
          format: double
        orderLevelHandlingDiscountTotal:
          type: number
          description: The total value of order-level (group-level) handling discounts.
          format: double
        handlingTaxTotal:
          type: number
          description: Total tax on handling.
          format: double
        handlingTotal:
          type: number
          description:
            Overall handling total, accounting for line and order-level
            handling costs, any handling discounts, and handling tax.
          format: double
        total:
          type: number
          description: Final total
          format: double
      additionalProperties: false
    CheckoutAction:
      type: object
      properties:
        actionName:
          type: string
          nullable: true
      additionalProperties: false
    CheckoutCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Checkout"
          nullable: true
      additionalProperties: false
      description: Paged collection of checkouts.
    CheckoutGrouping:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this grouping.
          nullable: true
        destinationId:
          type: string
          description:
            The DestinationId used by items in this grouping, which may be
            {null}.
          nullable: true
        fulfillmentMethod:
          type: string
          description: The FulfillmentMethod used by items in this grouping.
          nullable: true
        orderItemIds:
          type: array
          items:
            type: string
          description: Identifiers of the items that make up this grouping.
          nullable: true
        shippingMethodCode:
          type: string
          description:
            "Code that uniquely identifies the shipping method such as
            \"Ground,\" \"Overnight,\" or \"Digital.\"\r

            The site's shipping settings lists the valid shipping
            methods specified for this site."
          nullable: true
        shippingMethodName:
          type: string
          description: Readable name of the shipping method.
          nullable: true
        standaloneGroup:
          type: boolean
          description: Indicates whether a non ship group should combine with a ship group
        shippingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/ShippingDiscount"
          nullable: true
        handlingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeAppliedDiscount"
          nullable: true
        dutyAmount:
          type: number
          description:
            Any duty fee applied directly to this group. Items can also have
            their own duty fee.
          format: double
          nullable: true
        dutyTotal:
          type: number
          description: Total raw duty amounts for this group.
          format: double
        shippingAmount:
          type: number
          description:
            If a shipping method applies directly to this grouping (versus the
            items), this is the raw shipping amount for the group.
          format: double
          nullable: true
        shippingSubTotal:
          type: number
          description: The raw shipping amount minus shipping discounts.
          format: double
        itemLevelShippingDiscountTotal:
          type: number
          description:
            The total value of item-level shipping discounts applied to this
            group.
          format: double
        orderLevelShippingDiscountTotal:
          type: number
          description:
            The total value of order-level (group-level) shipping discounts
            applied to this group.
          format: double
        shippingTax:
          type: number
          description: Group-level shipping tax. Does not account for item shipping tax.
          format: double
          nullable: true
        shippingTaxTotal:
          type: number
          description:
            The total shipping tax for this group, accounting for both
            group-level and item-level shipping tax.
          format: double
        shippingTotal:
          type: number
          description:
            The total shipping cost for this group, accounting for discounts
            and tax.
          format: double
        handlingAmount:
          type: number
          description: The handling fee amount that's applicable to this grouping.
          format: double
          nullable: true
        handlingSubTotal:
          type: number
          description: The total raw handling amounts minus handling discounts.
          format: double
        itemLevelHandlingDiscountTotal:
          type: number
          description:
            The total value of item-level handling discounts applied to this
            group.
          format: double
        orderLevelHandlingDiscountTotal:
          type: number
          description:
            The total value of order-level (group-level) handling discounts
            applied to this group.
          format: double
        handlingTax:
          type: number
          description: Group-level handling tax. Does not account for item handling tax.
          format: double
          nullable: true
        handlingTaxTotal:
          type: number
          description:
            The total handling tax for this group, accounting for both
            group-level and item-level handling tax.
          format: double
        handlingTotal:
          type: number
          description:
            The total handling cost for this group, accounting for discounts
            and tax.
          format: double
        taxData:
          type: object
          nullable: true
      additionalProperties: false
    CheckoutGroupRates:
      type: object
      properties:
        groupingId:
          type: string
          nullable: true
        shippingRates:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeShippingRate"
          nullable: true
      additionalProperties: false
    CheckoutGroupShippingMethod:
      type: object
      properties:
        groupingId:
          type: string
          nullable: true
        shippingRate:
          $ref: "#/components/schemas/CommerceRuntimeShippingRate"
      additionalProperties: false
    CheckPayment:
      type: object
      properties:
        checkNumber:
          type: string
          nullable: true
      additionalProperties: false
    CollectionOfDigitalPackageItem:
      type: object
      properties:
        id:
          type: string
          description: ID of the fulfillment unit.
          nullable: true
        code:
          type: string
          description:
            "A human-readable identifier for this fulfillment unit.  If not set
            on create, will be autogenerated as a string of the form\r

            \    {fulfillmentUnitType} #{next available int}"
          nullable: true
        status:
          type: string
          description: "Status of the fulfillment unit\r

            See FulfillmentStatusConst"
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/DigitalPackageItem"
          description: List of items in the fulfillment unit
          nullable: true
        fulfillmentDate:
          type: string
          description: Date of the pickup
          format: date-time
          nullable: true
        fulfillmentLocationCode:
          type: string
          description: Location code from which to obtain this item
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        availableActions:
          type: array
          items:
            type: string
          description: Actions that can be taken on this fulfillment unit
          nullable: true
        changeMessages:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeChangeMessage"
          description: Change messages related to the fulfillment unit.
          nullable: true
      additionalProperties: false
    CollectionOfPackageItem:
      type: object
      properties:
        id:
          type: string
          description: ID of the fulfillment unit.
          nullable: true
        code:
          type: string
          description:
            "A human-readable identifier for this fulfillment unit.  If not set
            on create, will be autogenerated as a string of the form\r

            \    {fulfillmentUnitType} #{next available int}"
          nullable: true
        status:
          type: string
          description: "Status of the fulfillment unit\r

            See FulfillmentStatusConst"
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/PackageItem"
          description: List of items in the fulfillment unit
          nullable: true
        fulfillmentDate:
          type: string
          description: Date of the pickup
          format: date-time
          nullable: true
        fulfillmentLocationCode:
          type: string
          description: Location code from which to obtain this item
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        availableActions:
          type: array
          items:
            type: string
          description: Actions that can be taken on this fulfillment unit
          nullable: true
        changeMessages:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeChangeMessage"
          description: Change messages related to the fulfillment unit.
          nullable: true
      additionalProperties: false
    CollectionOfPickupItem:
      type: object
      properties:
        id:
          type: string
          description: ID of the fulfillment unit.
          nullable: true
        code:
          type: string
          description:
            "A human-readable identifier for this fulfillment unit.  If not set
            on create, will be autogenerated as a string of the form\r

            \    {fulfillmentUnitType} #{next available int}"
          nullable: true
        status:
          type: string
          description: "Status of the fulfillment unit\r

            See FulfillmentStatusConst"
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimePickupItem"
          description: List of items in the fulfillment unit
          nullable: true
        fulfillmentDate:
          type: string
          description: Date of the pickup
          format: date-time
          nullable: true
        fulfillmentLocationCode:
          type: string
          description: Location code from which to obtain this item
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        availableActions:
          type: array
          items:
            type: string
          description: Actions that can be taken on this fulfillment unit
          nullable: true
        changeMessages:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeChangeMessage"
          description: Change messages related to the fulfillment unit.
          nullable: true
      additionalProperties: false
    CommerceAggregate:
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier of the shopper who created the cart.
          nullable: true
        id:
          type: string
          description:
            Unique identifier of the CommerceAggregate object (e.g. order,
            cart, wishlist, etc.).
          nullable: true
        tenantId:
          type: integer
          description: Unique identifier of the Tenant.
          format: int32
          nullable: true
        siteId:
          type: integer
          description: Unique identifier of the Site.
          format: int32
          nullable: true
        channelCode:
          type: string
          description: Unique identifier of the channel for this item.
          nullable: true
        currencyCode:
          type: string
          description: ISO Currency Code. Currently, only USD is supported.
          nullable: true
        visitId:
          type: string
          description:
            Identifies the Visit ID that was current when the order was placed
            or when the cart was last updated.
          nullable: true
        webSessionId:
          type: string
          description:
            Identifies the web session used to place the order or last update
            the cart.
          nullable: true
        customerInteractionType:
          type: string
          description:
            "Determines the interaction type that a customer will use to create
            this object.\r

            Valid values are: Website, Store, Call, Unknown"
          nullable: true
        fulfillmentInfo:
          $ref: "#/components/schemas/FulfillmentInfo"
        orderDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeAppliedDiscount"
          description:
            The discount that has been applied to the cart itself. If multiple
            discounts exist, this is the discount that the system applies
            because it offers the best savings for the shopper. This is a
            negative number.
          nullable: true
        suggestedDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/SuggestedDiscount"
          nullable: true
        rejectedDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/SuggestedDiscount"
          nullable: true
        data:
          type: object
          description: Custom data for a given vendor set within the commerce process.
          nullable: true
        taxData:
          type: object
          description: Storage for any additional/custom tax data.
          nullable: true
        subtotal:
          type: number
          description:
            Combined price for all cart items, including all selected options
            but excluding any discounts.
          format: double
          nullable: true
        discountedSubtotal:
          type: number
          description:
            Combined price for all cart items, including all selected options
            as well as any discounts.
          format: double
          nullable: true
        discountTotal:
          type: number
          description:
            Amount of the discounts applied to all items in the cart. This is a
            negative number.  This also includes the order level discounts.
          format: double
          nullable: true
        discountedTotal:
          type: number
          description: Subtotal minus the discounted total
          format: double
          nullable: true
        shippingTotal:
          type: number
          description: Shipping does not appear on cart.
          format: double
          nullable: true
        shippingSubTotal:
          type: number
          description: Shipping total without discounts applied.
          format: double
          nullable: true
        shippingTaxTotal:
          type: number
          description: Not implemented. Tax does not appear on cart.
          format: double
          nullable: true
        handlingTaxTotal:
          type: number
          description: Total tax on handling
          format: double
          nullable: true
        itemTaxTotal:
          type: number
          description: Not implemented. Tax does not appear on cart.
          format: double
          nullable: true
        taxTotal:
          type: number
          description: Tax does not appear on cart.
          format: double
          nullable: true
        feeTotal:
          type: number
          description: Not implemented. Total cost of fees for all items in the cart.
          format: double
          nullable: true
        total:
          type: number
          description:
            Final total amount of the order including all discounts, shipping,
            and tax.
          format: double
          nullable: true
        lineItemSubtotalWithOrderAdjustments:
          type: number
          description: Line Item Subtotals with Order Adjustments
          format: double
          nullable: true
        shippingAmountBeforeDiscountsAndAdjustments:
          type: number
          description: Shipping Amount before discount and adjustements
          format: double
          nullable: true
        lastValidationDate:
          type: string
          description:
            "Occasionally the commerce runtime may validate that item/product
            names, descriptions, and prices have not changed. \r

            If changed, it updates LastValidationDate."
          format: date-time
          nullable: true
        expirationDate:
          type: string
          description:
            "When the order will no longer be active. That is, the order is
            considered abandoned. \r

            Orders of anonymous shoppers expire after 14 days of
            inactivity. \r

            An order never expires for shoppers who are logged into
            their account. \r

            Date in UTC Date/Time."
          format: date-time
          nullable: true
        changeMessages:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeChangeMessage"
          description:
            List of messages displayed by the system based on the last cart
            action, for example, when a product price has changed or is
            out-of-stock. System-supplied and read-only.
          nullable: true
        extendedProperties:
          type: array
          items:
            $ref: "#/components/schemas/ExtendedProperty"
          description:
            Extra properties (key-value pairs) that extend the primary object.
            Think of this as a property bag of string keys and string values.
          nullable: true
        discountThresholdMessages:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeThresholdMessage"
          description:
            List of Mozu.CommerceRuntime.Contracts.Commerce.ThresholdMessage
            objects that are valid for the current value of the cart/order.
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Base class for cart and order
    CommerceItem:
      type: object
      properties:
        localeCode:
          type: string
          description:
            "Locale code for language that appears in text and descriptions on
            the site, for example, en_US. \r

            This is not the currency code. Currently only en_US is
            supported."
          nullable: true
        purchaseLocation:
          type: string
          description:
            "The location where the product is being purchased.. default is
            null. Products can have different prices\r

            by purchaseLocation via custom priceListResolution..."
          nullable: true
        lineId:
          type: integer
          description:
            "The line id assigned to the order item. Visible only in the Admin,
            this is set from the Admin or\r

            in CommerceRuntime when a cart is converted to an
            order."
          format: int32
          nullable: true
        product:
          $ref: "#/components/schemas/CommerceRuntimeProduct"
        quantity:
          type: integer
          description: Number of products ordered.
          format: int32
        isRecurring:
          type: boolean
          description:
            If true, the cart item lists a product that can be purchased or
            fulfilled at regular intervals, for example, monthly billing or a
            subscription.
          nullable: true
        isTaxable:
          type: boolean
          description: Not implemented. If true, the cart item is eligible for tax.
          nullable: true
        subtotal:
          type: number
          description: Line item subtotal (quantity multiplied by price) before discounts.
          format: double
          nullable: true
        extendedTotal:
          type: number
          description:
            Line item extended total (quantity multiplied by unit extended
            price) before discounts.
          format: double
          nullable: true
        taxableTotal:
          type: number
          description: Line item subtotal (quantity multiplied by price) before discounts.
          format: double
          nullable: true
        discountTotal:
          type: number
          description:
            How much the shopper saves with the applied discount or sale price.
            This is a negative number.
          format: double
          nullable: true
        discountedTotal:
          type: number
          description: Subtotal minus any discounts.
          format: double
          nullable: true
        itemTaxTotal:
          type: number
          description: Total price of taxes that apply to products in this item.
          format: double
          nullable: true
        shippingTaxTotal:
          type: number
          description: Total price of taxes that apply to the shipping of this item.
          format: double
          nullable: true
        shippingTotal:
          type: number
          description: Total price of shipping that apply to this item.
          format: double
          nullable: true
        handlingAmount:
          type: number
          description: Handling Amount for this item
          format: double
          nullable: true
        feeTotal:
          type: number
          description: Not implemented. Total cost of fees that apply to this item.
          format: double
          nullable: true
        total:
          type: number
          description: Total price of this cart item taking into account any discounts.
          format: double
          nullable: true
        unitPrice:
          $ref: "#/components/schemas/CommerceUnitPrice"
        productDiscount:
          $ref: "#/components/schemas/CommerceRuntimeAppliedLineItemProductDiscount"
        productDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeAppliedLineItemProductDiscount"
          description: A list of discounts applied to the product
          nullable: true
        shippingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeAppliedLineItemShippingDiscount"
          description: A discount applied to the shipping
          nullable: true
        data:
          type: object
          description: Custom data for a given vendor set within the commerce process.
          nullable: true
        taxData:
          type: object
          description: Storage for any additional/custom tax data.
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        shippingAmountBeforeDiscountsAndAdjustments:
          type: number
          description: Shipping amount before Discounts and adjustments
          format: double
          nullable: true
        weightedOrderAdjustment:
          type: number
          description: Order Level Manual Adjustment applied to this Item
          format: double
          nullable: true
        weightedOrderDiscount:
          type: number
          description: Order Level Discount applied to this Item
          format: double
          nullable: true
        adjustedLineItemSubtotal:
          type: number
          description: Order Level taxable sub total
          format: double
          nullable: true
        totalWithoutWeightedShippingAndHandling:
          type: number
          description: Taxable Subtotal including Weighted Order amounts
          format: double
          nullable: true
        weightedOrderTax:
          type: number
          description: Order Level tax applied to this Item
          format: double
          nullable: true
        weightedOrderShipping:
          type: number
          description: Order Level Shipping applied to this Item
          format: double
          nullable: true
        weightedOrderShippingDiscount:
          type: number
          description: Order Level Shipping discount applied to this Item
          format: double
          nullable: true
        weightedOrderShippingManualAdjustment:
          type: number
          description: Order Level Shipping Manual Adjustment applied to this Item
          format: double
          nullable: true
        weightedOrderShippingTax:
          type: number
          description: Order Level Shipping Tax applied to this Item
          format: double
          nullable: true
        weightedOrderHandlingFee:
          type: number
          description: Order Level handling fee applied to this item
          format: double
          nullable: true
        weightedOrderHandlingFeeTax:
          type: number
          description: Order Level handling fee tax applied to this item
          format: double
          nullable: true
        weightedOrderHandlingFeeDiscount:
          type: number
          description: Order Level handling fee discount applied to this item
          format: double
          nullable: true
        weightedOrderDuty:
          type: number
          description: Order Level Duty applied to this Item
          format: double
          nullable: true
        totalWithWeightedShippingAndHandling:
          type: number
          description:
            Line item total with line item, Tax, Weighted Tax with Weighted
            shipping and handling costs
          format: double
          nullable: true
        weightedOrderHandlingAdjustment:
          type: number
          description: Order level handling adjusment that applies to this item.
          format: double
          nullable: true
        autoAddDiscountId:
          type: integer
          description: Track the discoutid from which the item was auto added
          format: int32
          nullable: true
      additionalProperties: false
      description: Base class for cart and order items
    CommerceUnitPrice:
      type: object
      properties:
        extendedAmount:
          type: number
          description:
            "Extended amount, this is in order of precedence: OverrideAmount,
            SaleAmount, ListAmount"
          format: double
          nullable: true
        listAmount:
          type: number
          description: Product list amount.
          format: double
          nullable: true
        saleAmount:
          type: number
          description: Sale amount indicated on the product.
          format: double
          nullable: true
        overrideAmount:
          type: number
          description: Amount as manually overridden by the Merchant
          format: double
          nullable: true
      additionalProperties: false
      description:
        Pricing details for the product listed on a cart item, including
        the original price, discount amount, and final price.
    DigitalPackage:
      type: object
      allOf:
        - $ref: "#/components/schemas/CollectionOfDigitalPackageItem"
      additionalProperties: false
    DigitalPackageItem:
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractFulfillmentItem"
      properties:
        giftCardCode:
          type: string
          nullable: true
      additionalProperties: false
    DigitalWallet:
      type: object
      properties:
        digitalWalletData:
          type: string
          description: "Digital wallet data.\r

            Note: Transform the Json data to a string."
          nullable: true
        cartId:
          type: string
          description: "Cart ID\r

            Note: This property should only be set if the order is
            not created and user opted to \r

            create the order from cart using digital wallet."
          nullable: true
      additionalProperties: false
      description: Digital wallet contract
    EmailGatewayGiftCard:
      type: object
      allOf:
        - $ref: "#/components/schemas/GatewayGiftCard"
      properties:
        cardPin:
          type: string
          nullable: true
        orderId:
          type: string
          nullable: true
        returnId:
          type: string
          nullable: true
        paymentId:
          type: string
          nullable: true
        shipmentId:
          type: string
          nullable: true
        orderItemId:
          type: string
          nullable: true
      additionalProperties: false
    ExtendedProperty:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    FulfillmentAction:
      type: object
      properties:
        actionName:
          type: string
          description: Name of the fulfillment action to perform
          nullable: true
        packageIds:
          type: array
          items:
            type: string
          description: Ids of packages to mark as fulfilled
          nullable: true
        pickupIds:
          type: array
          items:
            type: string
          description: Ids of pickups to mark as fulfilled
          nullable: true
        digitalPackageIds:
          type: array
          items:
            type: string
          description: Ids of digital packages to mark as fulfilled
          nullable: true
      additionalProperties: false
      description: Action to perform a fulfillment operation on the order.
    FulfillmentInfo:
      type: object
      properties:
        fulfillmentContact:
          $ref: "#/components/schemas/CommerceRuntimeContact"
        isDestinationCommercial:
          type: boolean
          description: Indicates that the destination is commercial
          nullable: true
        shippingMethodCode:
          type: string
          description:
            "Code that uniquely identifies the shipping method such as
            \"Ground,\" \"Overnight,\" or \"Digital.\"\r

            The site's shipping settings lists the valid shipping
            methods specified for this site."
          nullable: true
        shippingMethodName:
          type: string
          description: Readable name of the shipping method
          nullable: true
        data:
          type: object
          description: Custom data originated by the shipping service.
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description:
        "Shipment information, which includes the shipping address, price,
        estimated delivery date, tracking information, method (for example,
        Ground, Overnight, or Pick-up), \r

        carrier (for example, USPS, UPS, FedEx), and current status (for
        example, Not Shipped, In Transit, Delayed, or Returned To Sender)."
    FulfillmentTask:
      type: object
      properties:
        links:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/CommerceRuntimeLink"
          nullable: true
        active:
          type: boolean
          nullable: true
        attributes:
          type: object
          additionalProperties: {}
          nullable: true
        completed:
          type: boolean
          nullable: true
        completedDate:
          type: string
          format: date-time
          nullable: true
        description:
          type: string
          nullable: true
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeTaskInput"
          nullable: true
        name:
          type: string
          nullable: true
        skippable:
          type: boolean
          nullable: true
        subject:
          type: string
          nullable: true
        taskId:
          type: string
          nullable: true
      additionalProperties: false
    GatewayGiftCard:
      type: object
      properties:
        cardNumber:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
    InvalidCoupon:
      type: object
      properties:
        couponCode:
          type: string
          description: Code that identifies the coupon.
          nullable: true
        reasonCode:
          type: integer
          description: Code that identifies the reason the coupon was invalid.
          format: int32
        reason:
          type: string
          description: Description text of the reason.
          nullable: true
        createDate:
          type: string
          description: Create date of the invalid coupon.
          format: date-time
        discountId:
          type: integer
          format: int32
      additionalProperties: false
      description:
        Represents a coupon that is considered invalid by the Mozu pricing
        service.
    ItemsForDestination:
      type: object
      properties:
        destinationId:
          type: string
          nullable: true
        itemIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    Order:
      type: object
      allOf:
        - $ref: "#/components/schemas/CommerceAggregate"
      properties:
        orderNumber:
          type: integer
          description:
            Order Number. This is an integer that is only assigned after an
            order is placed and enters the open state.
          format: int32
          nullable: true
        locationCode:
          type: string
          description:
            Identifies the location at which the order was placed if the order
            was placed externally.
          nullable: true
        version:
          type: string
          description: Version for concurrency purposes
          nullable: true
        parentOrderId:
          type: string
          description: If this Order has a parent order, this should be the parent's ID.
          nullable: true
        parentOrderNumber:
          type: integer
          description:
            If this order has a parent order, this should be the parent's
            Mozu.CommerceRuntime.Contracts.Orders.Order.OrderNumber.
          format: int32
          nullable: true
        parentCheckoutId:
          type: string
          description:
            If this order originated from a multi-ship enabled site, this is
            the identifier of the originating checkout.
          nullable: true
        parentCheckoutNumber:
          type: integer
          description:
            If this order originated from a multi-ship enabled site, this is
            the number of the originating checkout.
          format: int32
          nullable: true
        partialOrderNumber:
          type: integer
          description:
            If this order originated from a checkout, this is a sequence number
            out of the total orders created from that checkout.
          format: int32
          nullable: true
        partialOrderCount:
          type: integer
          description:
            If this order originated from a checkout, this is the total number
            of orders created from that checkout.
          format: int32
          nullable: true
        isPartialOrder:
          type: boolean
          description:
            Returns {true} if this order originated from a checkout and has
            sibling partial orders, otherwise {false}.
        parentReturnId:
          type: string
          description:
            If this order was created as part of a return, this should be the
            return's ID.
          nullable: true
        parentReturnNumber:
          type: integer
          description:
            If this order was created as part of a return, this should be the
            return's ReturnNumber.
          format: int32
          nullable: true
        originalCartId:
          type: string
          description: Unique identifier for the cart that was converted to order.
          nullable: true
        priceListCode:
          type: string
          description: Pricelist code for the order
          nullable: true
        availableActions:
          type: array
          items:
            type: string
          description: Actions available to the payment
          nullable: true
        shopperNotes:
          $ref: "#/components/schemas/CommerceRuntimeShopperNotes"
        customerAccountId:
          type: integer
          description: Unique identifier of the customer account.
          format: int32
          nullable: true
        customerTaxId:
          type: string
          description:
            The customers tax ID.  If Customer Account ID exists in the system,
            will set this.
          nullable: true
        isTaxExempt:
          type: boolean
          description: Unique identifier of the customer account.
          nullable: true
        email:
          type: string
          description: Email address of the customer at the time the order is placed.
          nullable: true
        ipAddress:
          type: string
          description: IP address of the user placing the order. (User or customer?)
          nullable: true
        sourceDevice:
          type: string
          description: Source device of the user placing the order. (User or customer?)
          nullable: true
        acceptsMarketing:
          type: boolean
          description: Does the customer accept marketing
          nullable: true
        status:
          type: string
          description: Current status of the order, which can be viewed in
            OrderStatusConst. System-supplied and read-only.
          nullable: true
        type:
          type: string
          description:
            Is this Order Online or Offline? Online means shopper entered at
            checkout, offline means a phone order.
          nullable: true
        paymentStatus:
          type: string
          description: "Current status of payment, which can be \"Null,\"
            \"AwaitingCheck,\" \"AwaitingPayment,\" \"Paid,\" \"Authorized,\" or
            \"Void.\" \r

            System-supplied and read-only."
          nullable: true
        returnStatus:
          type: string
          description: System-supplied and read-only.
          nullable: true
        isEligibleForReturns:
          type: boolean
          description:
            Marker for determining if the order is a) complete or b) has some
            items that are shipped and not part of any other return
        totalCollected:
          type: number
          description: Total amount of money collected on the order via payments.
          format: double
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/OrderAttribute"
          nullable: true
        adjustment:
          $ref: "#/components/schemas/Adjustment"
        shippingAdjustment:
          $ref: "#/components/schemas/Adjustment"
        handlingAdjustment:
          $ref: "#/components/schemas/Adjustment"
        shippingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/ShippingDiscount"
          nullable: true
        handlingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeAppliedDiscount"
          description:
            The list of historically-applied handling discounts.  The active
            one will have IsExcluded == false
          nullable: true
        handlingAmount:
          type: number
          description: Order level handling fees excluding any discounts.
          format: double
          nullable: true
        handlingSubTotal:
          type: number
          description:
            Handling fees for the Order as well as OrderItems (e.g. if the
            Order has a $5 handling fee and an OrderItem has a $2 handling fee
            per item quantity and the quantity of items is 2 then the value in
            this property would be $9)
          format: double
          nullable: true
        handlingTotal:
          type: number
          description: Handling fees including any discounts.
          format: double
          nullable: true
        dutyAmount:
          type: number
          description:
            Order level duty or tariff amount. Does not take into account
            duties or tariffs specifically on items on the order
          format: double
          nullable: true
        dutyTotal:
          type: number
          description:
            Duties or tariffs for the Order as well as OrderItems (e.g. if the
            Order has a $5 duty or tariff for any reason and an OrderItem has a
            $2 duty or tariff then the value in this property would be $7)
          format: double
          nullable: true
        fulfillmentStatus:
          type: string
          description:
            "Current fulfillment status, which can be \"NotFulfilled,\",
            \"PartiallyFulfilled\", or \"Fufilled.\" \r

            System-supplied and read-only.  Values are available in
            FulfillmentStatusConst of this class."
          nullable: true
        submittedDate:
          type: string
          description: When the customer placed (submitted) the order.
          format: date-time
          nullable: true
        cancelledDate:
          type: string
          description: Date the order was cancelled.
          format: date-time
          nullable: true
        closedDate:
          type: string
          description:
            Date the order was closed. A closed order means that the order has
            been processed and items shipped.
          format: date-time
          nullable: true
        acceptedDate:
          type: string
          description: When the order was accepted by the merchant
          format: date-time
          nullable: true
        notes:
          type: array
          items:
            $ref: "#/components/schemas/OrderNote"
          description:
            Internal notes that a merchant may add to the order. Maximum 250
            characters.
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeOrderItem"
          description: List of items in the order.
          nullable: true
        validationResults:
          type: array
          items:
            $ref: "#/components/schemas/OrderValidationResult"
          description:
            Validation results for the order when processes against validation
            capabilities.
          nullable: true
        billingInfo:
          $ref: "#/components/schemas/BillingInfo"
        payments:
          type: array
          items:
            $ref: "#/components/schemas/Payment"
          description:
            "Payment transaction associated with this order. It is the entire
            payment interchange between the merchant \r

            who is forwarding the customer's payment information and
            the payment service who is authorizing and \r

            capturing payment. Payment can be either by credit card,
            check, or PayPal."
          nullable: true
        refunds:
          type: array
          items:
            $ref: "#/components/schemas/Refund"
          description:
            "Refunds associated with this order. A refund is a single exchange
            of money from merchant to customer\r

            that either encapsulates a refund to a credit card or an
            issuance of a store credit.\r

            Refunds does not reduce the 'amount collected' on an
            order and it is possible for refunds to exceed the total order
            amount."
          nullable: true
        packages:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimePackage"
          description: Shipping package associated with this order.
          nullable: true
        pickups:
          type: array
          items:
            $ref: "#/components/schemas/Pickup"
          description: Fulfillment pickups associated with this order.
          nullable: true
        digitalPackages:
          type: array
          items:
            $ref: "#/components/schemas/DigitalPackage"
          description: Fulfillment digital packages associated with this order.
          nullable: true
        shipments:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeShipment"
          description: Package shipments associated with this order.
          nullable: true
        isDraft:
          type: boolean
          description: Is this order a draft version
          nullable: true
        hasDraft:
          type: boolean
          description: Does this order have a draft version.
          nullable: true
        isImport:
          type: boolean
          description: Was this order initiated from an external system
          nullable: true
        importDate:
          type: string
          description: Date this item was imported
          format: date-time
          nullable: true
        isUnified:
          type: boolean
          description: Was this order created by the Unified platform.
        externalId:
          type: string
          description: An order number to link this order to an external system
          nullable: true
        couponCodes:
          type: array
          items:
            type: string
          description: Coupon codes associated with this order.  Only set on order import.
          nullable: true
        invalidCoupons:
          type: array
          items:
            $ref: "#/components/schemas/InvalidCoupon"
          description: A list of invalid coupons that were attempted on the order
          nullable: true
        amountAvailableForRefund:
          type: number
          description:
            "This property represents AmountCaptured - AmountRefunded via
            returns.\r

            It is read only."
          format: double
        amountRemainingForPayment:
          type: number
          description:
            "A counter for how much of the order total has not been claimed by
            payments.\r

            This is computed by Order.Total-(sum of Order.Payments
            where State is not voided/declined)"
          format: double
        amountRefunded:
          type: number
          description:
            "A counter for how much money has been issued in refunds.\r

            This calculated field does NOT include refunds issued in
            returns."
          format: double
        readyToCapture:
          type: boolean
        isOptInForSms:
          type: boolean
          description: Whether the shopper opts in to curbside text notifications.
      additionalProperties: false
      description: Order form.
    OrderAction:
      type: object
      properties:
        actionName:
          type: string
          nullable: true
      additionalProperties: false
    OrderAttribute:
      type: object
      properties:
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        fullyQualifiedName:
          type: string
          nullable: true
        attributeDefinitionId:
          type: integer
          format: int32
          nullable: true
        values:
          type: array
          items: {}
          nullable: true
      additionalProperties: false
    OrderCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Order"
          nullable: true
      additionalProperties: false
      description:
        "Paged collection of orders. This is paged in case it's returning a
        long list the orders. \r

        for a store."
    OrderItemCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeOrderItem"
          nullable: true
      additionalProperties: false
      description: Collection of items listed on the order.
    OrderNote:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the note. System-supplied and read-only.
          nullable: true
        text:
          type: string
          description: Text of the note. Maximum 250 characters.
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description:
        Internal notes that a merchant may add to the order. Maximum 250
        characters.
    OrderReturnableItem:
      type: object
      properties:
        productCode:
          type: string
          description: The product code of the associated item.
          nullable: true
        productName:
          type: string
          description: The name of the associated product.
          nullable: true
        shipmentNumber:
          type: integer
          description: Shipment Number associated with product
          format: int32
          nullable: true
        shipmentItemId:
          type: integer
          description: Shipment Item Id Number associated with product
          format: int32
          nullable: true
        quantityOrdered:
          type: integer
          description: The number of units ordered.
          format: int32
        quantityFulfilled:
          type: integer
          description: The number of units fulfilled.
          format: int32
        quantityReturned:
          type: integer
          description:
            The number if times this item configuration was found in live
            returns (not cancelled or rejected).
          format: int32
        quantityReturnable:
          type: integer
          format: int32
          readOnly: true
        fulfillmentStatus:
          type: string
          nullable: true
        orderItemId:
          type: string
          nullable: true
        orderLineId:
          type: integer
          format: int32
        orderItemOptionAttributeFQN:
          type: string
          nullable: true
        unitQuantity:
          type: integer
          format: int32
        parentProductCode:
          type: string
          nullable: true
        parentProductName:
          type: string
          nullable: true
      additionalProperties: false
    OrderReturnableItemCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderReturnableItem"
          nullable: true
      additionalProperties: false
      description: Collection of fulfillment information for items on an order.
    OrderValidationMessage:
      type: object
      properties:
        orderItemId:
          type: string
          description: Order item id that this message applies to.  Can be empty.
          nullable: true
        messageType:
          type: string
          description: Identifier to indicate the type of the message, See
            OrderValidatorMessageTypeConst for options.
          nullable: true
        message:
          type: string
          description: Actual message returned by the validator.
          nullable: true
      additionalProperties: false
      description: Validation message returned by an order validator.
    OrderValidationResult:
      type: object
      properties:
        validationId:
          type: string
          description:
            Identifier set by the capability that states the id of this
            specific validation attempt
          nullable: true
        validatorName:
          type: string
          description:
            Identifier set by the capability that states the specific name of
            this validator.
          nullable: true
        validatorType:
          type: string
          description:
            Identifies the type of the validator (types are enumerated in
            OrderValidatorTypeConst)
          nullable: true
        status:
          type: string
          description: Status of the order validation result.  See
            OrderValidatorStatusConst for options.
          nullable: true
        createdDate:
          type: string
          description: DateTime that this validation result was created
          format: date-time
          nullable: true
        messages:
          type: array
          items:
            $ref: "#/components/schemas/OrderValidationMessage"
          description: Messages returned by the order validator
          nullable: true
      additionalProperties: false
      description: The result of an order validator.
    PackageItem:
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractFulfillmentItem"
      additionalProperties: false
      description: An item in a package representing a particular product.
    Payment:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of this order transaction.
          nullable: true
        groupId:
          $ref: "#/components/schemas/PaymentActionTarget"
        paymentServiceTransactionId:
          type: string
          description:
            Unique identifier of the transaction, specified by the payment
            service processesing this transaction.
          nullable: true
        availableActions:
          type: array
          items:
            type: string
          description: Actions available to the payment
          nullable: true
        orderId:
          type: string
          description:
            Unique identifier of the order with which this transaction is
            associated.
          nullable: true
        paymentType:
          type: string
          description: Type of Payment
          nullable: true
        paymentWorkflow:
          type: string
          description:
            The source of data for this payment.  By default, this will be set
            to 'mozu'
          nullable: true
        externalTransactionId:
          type: string
          description:
            The external/third party transaction Id for this payment. This is
            used to store the transaction Id from digital wallet like Visa
            Checkout
          nullable: true
        billingInfo:
          $ref: "#/components/schemas/BillingInfo"
        data:
          type: object
          description: Custom data from payment providers
          nullable: true
        status:
          type: string
          description:
            Current status of this transaction which are described by the
            PaymentStatusConst class.
          nullable: true
        subPayments:
          type: array
          items:
            $ref: "#/components/schemas/SubPayment"
          description:
            List of sub payments that correspond to child orders in case of
            multiship orders.
          nullable: true
        interactions:
          type: array
          items:
            $ref: "#/components/schemas/PaymentInteraction"
          description:
            "List of intereactions for this transaction. A transaction is
            created upon authorization and lasts across the payment \r

            interchange, which can consist of multiple interactions,
            such as consecutive captures."
          nullable: true
        isRecurring:
          type: boolean
          description:
            "If true, the product is purchased or fulfilled at regular
            intervals, for example, \r

            monthly billing or a subscription. (Not currently
            supported.)"
        amountCollected:
          type: number
          description: Amount collected on the payment
          format: double
        amountCredited:
          type: number
          description: Amount credited back to the payment.
          format: double
        amountRequested:
          type: number
          description:
            "Derived from the Amount on the initial payment create, used to
            help storefront determine how much can be captured for multiple
            payments.\r

            See Order.AmountRemainingForPayment for an example."
          format: double
        changeMessages:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeChangeMessage"
          description: Change messages related to the payment.
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        gatewayGiftCard:
          $ref: "#/components/schemas/GatewayGiftCard"
      additionalProperties: false
      description:
        "Payment transaction associated with this order. It is the entire
        payment interchange between the merchant who is forwarding the
        customer's payment \r

        information and the payment service who is authorizing and
        capturing payment. Payment can be either by credit card, check, or
        PayPal. (PayPal not\r

        currently supported.)"
    PaymentAction:
      type: object
      properties:
        actionName:
          type: string
          description: Name of the Action to post
          nullable: true
        currencyCode:
          type: string
          description:
            ISO currency code for the transaction. Currently, only USD is
            supported.
          nullable: true
        checkNumber:
          type: string
          description: If paying by check, the check number.
          nullable: true
        returnUrl:
          type: string
          description:
            If paying by Paypal Express or some other potential non-gateway
            payment provider, a return redirect URL must be provided.
          nullable: true
        cancelUrl:
          type: string
          description:
            "If paying by Paypal Express or some other potential non-gateway
            payment provider, a cancel redirect URL must be provided.\r

            This will be used if something goes wrong on the
            third-party side."
          nullable: true
        amount:
          type: number
          description: Amount of funds to withdraw to pay for this order.
          format: double
          nullable: true
        interactionDate:
          type: string
          description: Date the interaction occurred
          format: date-time
          nullable: true
        newBillingInfo:
          $ref: "#/components/schemas/BillingInfo"
        referenceSourcePaymentId:
          type: string
          description: Reference payment id from which to copy the billing info.
          nullable: true
        manualGatewayInteraction:
          $ref: "#/components/schemas/PaymentGatewayInteraction"
        externalTransactionId:
          type: string
          nullable: true
        data:
          type: object
          description: Custom data from payment providers
          nullable: true
      additionalProperties: false
    PaymentActionTarget:
      type: object
      properties:
        targetType:
          type: string
          description: Specifies if the
            Mozu.CommerceRuntime.Contracts.Payments.PaymentActionTarget.TargetId
            is a Checkout Id, Order Id, or Return Id.
          nullable: true
        targetId:
          type: string
          description: The Id of the Checkout/Order/Return to target.
          nullable: true
        targetNumber:
          type: integer
          description: The number of the Checkout/Order/Return to target.
          format: int32
          nullable: true
      additionalProperties: false
    PaymentCard:
      type: object
      allOf:
        - $ref: "#/components/schemas/PaymentCardReference"
      properties:
        paymentServiceCardId:
          type: string
          description: Credit card number.
          nullable: true
        isUsedRecurring:
          type: boolean
          description:
            If true, the credit card is charged on a regular interval, such as
            for a subscription. (Not supported currently.)
          nullable: true
        nameOnCard:
          type: string
          description: Card holder's name as it appears on the card.
          nullable: true
        isCardInfoSaved:
          type: boolean
          description: If true, the card information is stored in the customer's account.
        isTokenized:
          type: boolean
          description: If true, the card is tokenized by external provider
      additionalProperties: false
      description: "If the customer is paying by credit card, the card holder's
        details, such as the name on the card, number, billing \r

        address, and expiration dates."
    PaymentCardReference:
      type: object
      properties:
        paymentOrCardType:
          type: string
          description: Card type such as Visa, MasterCard, American Express, or Discover.
          nullable: true
        cardNumberPartOrMask:
          type: string
          description:
            "The visible part of the card number that the merchant uses to
            refer to \r

            payment information, for example, the last for digits of
            the card number."
          nullable: true
        expireMonth:
          type: integer
          description: Month when the card expires.
          format: int32
        expireYear:
          type: integer
          description: Year when the card expires.
          format: int32
        bin:
          type: string
          description: Year when the card expires.
          nullable: true
      additionalProperties: false
    PaymentCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Payment"
          nullable: true
      additionalProperties: false
      description: A collection of payment transactions.
    PaymentGatewayInteraction:
      type: object
      properties:
        gatewayInteractionId:
          type: integer
          description:
            Gateway Transaction Id from PCIaaS.  Not populated by incoming
            request.
          format: int32
          nullable: true
        gatewayTransactionId:
          type: string
          description:
            Gateway Transaction Id from PCIaaS.  Not populated by incoming
            request.
          nullable: true
        gatewayAuthCode:
          type: string
          description:
            Gateway Transaction Id from PCIaaS.  Not populated by incoming
            request.
          nullable: true
        gatewayAVSCodes:
          type: string
          description: Not populated by incoming request.
          nullable: true
        gatewayCVV2Codes:
          type: string
          description: Not populated by incoming request.
          nullable: true
        gatewayResponseCode:
          type: string
          description: Not populated by incoming request.
          nullable: true
        gatewayResponseText:
          type: string
          description: Gateway response text. Supplied by PCIaaS.
          nullable: true
      additionalProperties: false
      description: Represents a manually entered payment gateway interaction.
    PaymentGatewayResponseData:
      type: object
      properties:
        key:
          type: string
          description: Key from payment gateway
          nullable: true
        value:
          type: string
          description: Value from payment gateway
          nullable: true
      additionalProperties: false
      description: Payment gateway reponse data
    PaymentInteraction:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of this payment transaction interaction.
          nullable: true
        gatewayInteractionId:
          type: integer
          description:
            "Unique identifier of the gateway interaction. Used for credit card
            transactions, where the\r

            payment service creates a GatewayInteractionId for each
            transaction interaction."
          format: int32
          nullable: true
        paymentId:
          type: string
          description:
            Unique identifier of the original transaction of which this current
            interaction is a part.
          nullable: true
        orderId:
          type: string
          description:
            Unique identifier of the order with which this transaction is
            associated.
          nullable: true
        target:
          $ref: "#/components/schemas/PaymentActionTarget"
        currencyCode:
          type: string
          description:
            ISO currency code for the transaction. Currently, only USD is
            supported.
          nullable: true
        interactionType:
          type: string
          description:
            "Types of transaction interactions which can be \"Authorization,\"
            \"Capture,\" \"AuthorizeAndCapture,\"\r

            \"Void,\" or \"Credit,\" \"CheckRequested,\" or
            \"CheckReceived.\""
          nullable: true
        checkNumber:
          type: string
          description: If paying by check, the check number.
          nullable: true
        status:
          type: string
          description:
            Status of the payment transaction interaction which can be either
            "Success" or "Failure."
          nullable: true
        paymentEntryStatus:
          type: string
          description: Status of the payment when the transaction interaction was created
          nullable: true
        isRecurring:
          type: boolean
          description: If true, the product is purchased or fulfilled at regular
            intervals, for example, a monthly billing or a subscription. (Not
            currently implemented.)
          nullable: true
        isManual:
          type: boolean
          description: If the payment is a manual payment, this is set to true
        gatewayTransactionId:
          type: string
          description: Unique identifier of the transaction supplied by PCIaaS.
          nullable: true
        gatewayAuthCode:
          type: string
          description:
            If required by the payment gateway, the authorization code of the
            transaction. Supplied by PCIaaS.
          nullable: true
        gatewayAVSCodes:
          type: string
          description: Gateway AVS Codes. Supplied by PCIaaS.
          nullable: true
        gatewayCVV2Codes:
          type: string
          description: Gateway CVV2 Codes. Supplied by PCIaaS.
          nullable: true
        gatewayResponseCode:
          type: string
          description: Gateway response code. Supplied by PCIaaS.
          nullable: true
        gatewayResponseText:
          type: string
          description: Gateway response text. Supplied by PCIaaS.
          nullable: true
        gatewayResponseData:
          type: array
          items:
            $ref: "#/components/schemas/PaymentGatewayResponseData"
          description:
            A List of payment response data required to act on authorization
            when using external order management systems
          nullable: true
        paymentTransactionInteractionIdReference:
          type: integer
          description:
            "Unique identifier of previous PaymentTransactionInteraction that
            this PaymentTransactionInteraction is modifying.\r

            For instance, when crediting a capture, set the
            PaymentTransactionInteractionIdReference to the capture
            PaymentTransactionInteractionID."
          format: int32
          nullable: true
        amount:
          type: number
          description: Amount of funds associated with this interaction.
          format: double
          nullable: true
        note:
          type: string
          description: Note to be entered by merchant/application
          nullable: true
        interactionDate:
          type: string
          description: Date the interaction occurred
          format: date-time
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        returnId:
          type: string
          description: Return Id, if the interaction is a Credit for a return-refund.
          nullable: true
        refundId:
          type: string
          description: Refund Id, if the interaction is for a stand alone refund.
          nullable: true
        capturableShipmentsSummary:
          type: array
          items:
            $ref: "#/components/schemas/CapturableShipmentSummary"
          description:
            Stores pairings of shipment number to shipment total for all
            captured shipments. This was added for generating TLogs.
          nullable: true
      additionalProperties: false
      description:
        "A single interaction of a potential list of intereactions for a
        transaction. The scope of the transaction is the entire payment\r

        interchange. It is created upon authorization and is used for
        all subsequent interactions performed against the authorize,\r

        such as consecutive captures."
    PaymentToken:
      type: object
      properties:
        paymentServiceTokenId:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
      additionalProperties: false
    Pickup:
      type: object
      allOf:
        - $ref: "#/components/schemas/CollectionOfPickupItem"
      additionalProperties: false
      description: Represents a pickup by a customer from a merchant.
    PricingAppliedDiscount:
      type: object
      properties:
        impact:
          type: number
          format: double
        discount:
          $ref: "#/components/schemas/PricingDiscount"
        couponCode:
          type: string
          nullable: true
        couponSetId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    PricingAppliedLineItemDiscount:
      type: object
      allOf:
        - $ref: "#/components/schemas/PricingAppliedDiscount"
      properties:
        quantity:
          type: integer
          format: int32
        impactPerUnit:
          type: number
          format: double
        isForced:
          type: boolean
        normalizedImpact:
          type: number
          format: double
      additionalProperties: false
    PricingAppliedLineItemProductDiscount:
      type: object
      allOf:
        - $ref: "#/components/schemas/PricingAppliedLineItemDiscount"
      properties:
        appliesToSalePrice:
          type: boolean
      additionalProperties: false
    PricingAppliedLineItemShippingDiscount:
      type: object
      allOf:
        - $ref: "#/components/schemas/PricingAppliedLineItemDiscount"
      properties:
        shippingMethodCode:
          type: string
          nullable: true
      additionalProperties: false
    PricingAppliedOrderShippingDiscount:
      type: object
      allOf:
        - $ref: "#/components/schemas/PricingAppliedDiscount"
      properties:
        shippingMethodCode:
          type: string
          nullable: true
      additionalProperties: false
    PricingAppliedProductDiscount:
      type: object
      allOf:
        - $ref: "#/components/schemas/PricingAppliedDiscount"
      properties:
        appliesToSalePrice:
          type: boolean
        normalizedImpact:
          type: number
          format: double
      additionalProperties: false
    PricingDiscount:
      type: object
      properties:
        discountId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        friendlyDescription:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        scope:
          type: string
          nullable: true
        maxRedemptions:
          type: integer
          format: int32
          nullable: true
        maximumUsesPerUser:
          type: integer
          format: int32
          nullable: true
        requiresAuthenticatedUser:
          type: boolean
        doesNotApplyToProductsWithSalePrice:
          type: boolean
        maximumRedemptionsPerOrder:
          type: integer
          format: int32
          nullable: true
        maximumDiscountValuePerOrder:
          type: number
          format: double
          nullable: true
        maxDiscountValuePerRedemption:
          type: number
          format: double
          nullable: true
        doesNotApplyToMultiShipToOrders:
          type: boolean
          nullable: true
        includedPriceLists:
          type: array
          items:
            type: string
          nullable: true
        redemptions:
          type: integer
          format: int32
        type:
          type: string
          nullable: true
        amountType:
          type: string
          nullable: true
        target:
          $ref: "#/components/schemas/PricingDiscountTarget"
        condition:
          $ref: "#/components/schemas/PricingDiscountCondition"
        expirationDate:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        stackingLayer:
          type: integer
          format: int32
      additionalProperties: false
    PricingDiscountCondition:
      type: object
      properties:
        requiresCoupon:
          type: boolean
        couponCode:
          type: string
          nullable: true
        minimumQuantityProductsRequiredInCategories:
          type: integer
          format: int32
          nullable: true
        includedCategoryIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        excludedCategoryIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        minimumQuantityRequiredProducts:
          type: integer
          format: int32
          nullable: true
        includedProductCodes:
          type: array
          items:
            type: string
          nullable: true
        excludedProductCodes:
          type: array
          items:
            type: string
          nullable: true
        paymentWorkflows:
          type: array
          items:
            type: string
          nullable: true
        customerSegmentIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        minimumOrderAmount:
          type: number
          format: double
          nullable: true
        maximumOrderAmount:
          type: number
          format: double
          nullable: true
        minimumLifetimeValueAmount:
          type: number
          format: double
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        expirationDate:
          type: string
          format: date-time
          nullable: true
        minimumCategorySubtotalBeforeDiscounts:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    PricingDiscountTarget:
      type: object
      properties:
        type:
          type: string
          nullable: true
        includedCategoryIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        excludedCategoryIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        includedCategoriesOperator:
          type: string
          nullable: true
        excludedCategoriesOperator:
          type: string
          nullable: true
        includedProductCodes:
          type: array
          items:
            type: string
          nullable: true
        excludedProductCodes:
          type: array
          items:
            type: string
          nullable: true
        includeAllProducts:
          type: boolean
        shippingMethods:
          type: array
          items:
            type: string
          nullable: true
        shippingZones:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    PricingProductAttribute:
      type: object
      properties:
        inputType:
          type: string
          nullable: true
        valueType:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    PricingProductProperty:
      type: object
      properties:
        attributeFQN:
          type: string
          nullable: true
        values:
          type: array
          items:
            $ref: "#/components/schemas/PricingProductPropertyValue"
          nullable: true
        attributeDetail:
          $ref: "#/components/schemas/PricingProductAttribute"
        isHidden:
          type: boolean
          nullable: true
        isMultiValue:
          type: boolean
          nullable: true
      additionalProperties: false
    PricingProductPropertyValue:
      type: object
      properties:
        value:
          nullable: true
        stringValue:
          type: string
          nullable: true
      additionalProperties: false
    PricingTaxableLineItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        productCode:
          type: string
          nullable: true
        variantProductCode:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        productProperties:
          type: array
          items:
            $ref: "#/components/schemas/PricingProductProperty"
          nullable: true
        quantity:
          type: integer
          format: int32
        lineItemPrice:
          type: number
          format: double
        discountTotal:
          type: number
          format: double
          nullable: true
        discountedTotal:
          type: number
          format: double
          nullable: true
        shippingAmount:
          type: number
          format: double
        handlingAmount:
          type: number
          format: double
          nullable: true
        feeTotal:
          type: number
          format: double
          nullable: true
        isTaxable:
          type: boolean
          nullable: true
        reason:
          type: string
          nullable: true
        data:
          type: object
          nullable: true
        productDiscount:
          $ref: "#/components/schemas/PricingAppliedLineItemProductDiscount"
        shippingDiscount:
          $ref: "#/components/schemas/PricingAppliedLineItemShippingDiscount"
        productDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/PricingAppliedLineItemProductDiscount"
          nullable: true
        shippingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/PricingAppliedLineItemShippingDiscount"
          nullable: true
        originAddress:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
        destinationAddress:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
      additionalProperties: false
    PricingTaxableOrder:
      type: object
      properties:
        orderDate:
          type: string
          format: date-time
        taxContext:
          $ref: "#/components/schemas/PricingTaxContext"
        lineItems:
          type: array
          items:
            $ref: "#/components/schemas/PricingTaxableLineItem"
          nullable: true
        shippingAmount:
          type: number
          format: double
        currencyCode:
          type: string
          nullable: true
        handlingFee:
          type: number
          format: double
        originalDocumentCode:
          type: string
          nullable: true
        orderId:
          type: string
          nullable: true
        orderNumber:
          type: integer
          format: int32
          nullable: true
        originalOrderDate:
          type: string
          format: date-time
        data:
          type: object
          nullable: true
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/PricingTaxAttribute"
          nullable: true
        shippingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/PricingAppliedOrderShippingDiscount"
          nullable: true
        shippingDiscount:
          $ref: "#/components/schemas/PricingAppliedOrderShippingDiscount"
        orderDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/PricingAppliedDiscount"
          nullable: true
        orderDiscount:
          $ref: "#/components/schemas/PricingAppliedDiscount"
        handlingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/PricingAppliedDiscount"
          nullable: true
        handlingDiscount:
          $ref: "#/components/schemas/PricingAppliedDiscount"
        shippingMethodCode:
          type: string
          nullable: true
        shippingMethodName:
          type: string
          nullable: true
        taxRequestType:
          type: string
          nullable: true
      additionalProperties: false
    PricingTaxAttribute:
      type: object
      properties:
        fullyQualifiedName:
          type: string
          nullable: true
        attributeDefinitionId:
          type: integer
          format: int32
          nullable: true
        values:
          type: array
          items: {}
          nullable: true
      additionalProperties: false
    PricingTaxContext:
      type: object
      properties:
        taxContextId:
          type: string
          nullable: true
        customerId:
          type: string
          nullable: true
        taxExemptId:
          type: string
          nullable: true
        originAddress:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
        destinationAddress:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
      additionalProperties: false
    ProductBase:
      type: object
      properties:
        productCode:
          type: string
          description: Merchant-created code that uniquely identifies the product.
          nullable: true
        name:
          type: string
          description:
            Name of the product, this is the current value of the product's
            name in the language specified by LocaleCode.
          nullable: true
        description:
          type: string
          description:
            Short description of the product in the language specified by
            LocaleCode.
          nullable: true
        goodsType:
          type: string
          description: Goods Type
          nullable: true
        isPackagedStandAlone:
          type: boolean
          description: Indicates that this product ships by itself.
        stock:
          $ref: "#/components/schemas/ProductStock"
        productReservationId:
          type: integer
          description: Reservation ID associated with this product in the bundle.
          format: int32
          nullable: true
        allocationId:
          type: integer
          description: Allocation ID associated with this product on this order.
          format: int32
          nullable: true
        allocationExpiration:
          type: string
          description: Allocation ID associated with this product on this order.
          format: date-time
          nullable: true
        measurements:
          $ref: "#/components/schemas/CommerceRuntimePackageMeasurements"
        fulfillmentStatus:
          type: string
          description: Fulfillment status of the product.
          nullable: true
      additionalProperties: false
    ProductStock:
      type: object
      properties:
        manageStock:
          type: boolean
        isOnBackOrder:
          type: boolean
        availableDate:
          type: string
          format: date-time
          nullable: true
        stockAvailable:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    PurchaseOrderPayment:
      type: object
      properties:
        purchaseOrderNumber:
          type: string
          description: Purchase order number
          nullable: true
        paymentTerm:
          $ref: "#/components/schemas/CommerceRuntimePurchaseOrderPaymentTerm"
        customFields:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimePurchaseOrderCustomField"
          description: Memo/custom fields
          nullable: true
      additionalProperties: false
      description: Purchase order payment
    Quote:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier.
          nullable: true
        name:
          type: string
          description: Name of the quote
          nullable: true
        siteId:
          type: integer
          description: Unique identifier of the Site.
          format: int32
        tenantId:
          type: integer
          description: Unique identifier of the Tenant.
          format: int32
        number:
          type: integer
          description: Auto generated number that is assigned to the quote when creation.
          format: int32
          nullable: true
        submittedDate:
          type: string
          description: When the customer placed (submitted) the Quote.
          format: date-time
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeOrderItem"
          description: List of items in the Quote.
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        comments:
          type: array
          items:
            type: string
          description: Comments on a quote
          nullable: true
        expirationDate:
          type: string
          description:
            "When the quote will no longer be active. That is, the quote is
            considered abandoned. \r

            Date in UTC Date/Time."
          format: date-time
          nullable: true
        destinations:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeDestination"
          nullable: true
        userId:
          type: string
          nullable: true
        customerAccountId:
          type: integer
          description: Unique identifier of the customer account.
          format: int32
          nullable: true
        email:
          type: string
          description: Email address for checkout
          nullable: true
        customerTaxId:
          type: string
          description:
            The customers tax ID. If Customer Account ID exists in the system,
            will set this.
          nullable: true
          readOnly: true
        isTaxExempt:
          type: boolean
          description: Unique identifier of the customer account.
          nullable: true
          readOnly: true
        currencyCode:
          type: string
          description: ISO Currency Code.
          nullable: true
        priceListCode:
          type: string
          description: Pricelist code for the checkout
          nullable: true
        data:
          type: object
          description: Custom data for a given vendor set within the commerce process.
          nullable: true
        taxData:
          type: object
          description: Storage for any additional/custom tax data.
          nullable: true
        channelCode:
          type: string
          description: Unique identifier of the channel for this item.
          nullable: true
        locationCode:
          type: string
          description:
            Identifies the location at which the order was placed if the order
            was placed externally.
          nullable: true
        ipAddress:
          type: string
          description: IP address of the user placing the order. (User or customer?)
          nullable: true
        sourceDevice:
          type: string
          description: Source device of the user placing the order. (User or customer?)
          nullable: true
        visitId:
          type: string
          description:
            Identifies the Visit ID that was current when the order was placed
            or when the cart was last updated.
          nullable: true
        webSessionId:
          type: string
          description:
            Identifies the web session used to place the order or last update
            the cart.
          nullable: true
        customerInteractionType:
          type: string
          description:
            "Determines the interaction type that a customer will use to create
            this object.\r

            Valid values are: Website, Store, Call, Unknown"
          nullable: true
        orderDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeAppliedDiscount"
          nullable: true
        subTotal:
          type: number
          description: Subtotal before any coupon codes, taxes, fees, etc.
          format: double
        itemLevelProductDiscountTotal:
          type: number
          description: The total value of item-level product discounts.
          format: double
        orderLevelProductDiscountTotal:
          type: number
          description: The total value of order-level (group-level) product discounts.
          format: double
        itemTaxTotal:
          type: number
          description: Total tax on products.
          format: double
        itemTotal:
          type: number
          description: The total product cost, accounting for discounts and tax.
          format: double
        total:
          type: number
          description: Final total
          format: double
        shippingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/ShippingDiscount"
          nullable: true
        itemLevelShippingDiscountTotal:
          type: number
          format: double
        orderLevelShippingDiscountTotal:
          type: number
          format: double
        shippingAmount:
          type: number
          format: double
        shippingSubTotal:
          type: number
          format: double
        shippingTax:
          type: number
          format: double
          nullable: true
        shippingTaxTotal:
          type: number
          format: double
        shippingTotal:
          type: number
          format: double
        handlingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeAppliedDiscount"
          nullable: true
        itemLevelHandlingDiscountTotal:
          type: number
          format: double
        orderLevelHandlingDiscountTotal:
          type: number
          format: double
        handlingAmount:
          type: number
          format: double
          nullable: true
        handlingSubTotal:
          type: number
          format: double
        handlingTax:
          type: number
          format: double
          nullable: true
        handlingTaxTotal:
          type: number
          format: double
        handlingTotal:
          type: number
          format: double
        dutyAmount:
          type: number
          format: double
          nullable: true
        dutyTotal:
          type: number
          format: double
        feeTotal:
          type: number
          format: double
        shippingMethodCode:
          type: string
          nullable: true
        shippingMethodName:
          type: string
          nullable: true
      additionalProperties: false
    QuoteCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Quote"
          nullable: true
      additionalProperties: false
    ReasonCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ReasonItemBase:
      type: object
      properties:
        reasonCode:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        needsMoreInfo:
          type: boolean
      additionalProperties: false
    Refund:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of this order transaction.
          nullable: true
        orderId:
          type: string
          description: Unique identifier of the order with which this refund is associated.
          nullable: true
        reason:
          type: string
          description: Merchant-entered reason for this refund.
          nullable: true
        reasonCode:
          type: string
          nullable: true
        payment:
          $ref: "#/components/schemas/Payment"
        amount:
          type: number
          description: Amount refunded.
          format: double
        refundMethod:
          type: string
          description: Refund Method.
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description:
        "Refund associated with an order. A refund is a single exchange of
        money from merchant to customer\r

        that either encapsulates a refund to a credit card or an
        issuance of a store credit.\r

        A refund does not reduce the 'amount collected' on an order and
        it is possible for a refund to exceed the total order amount."
    RefundReasonCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/RefundReasonItem"
          nullable: true
      additionalProperties: false
    RefundReasonItem:
      type: object
      allOf:
        - $ref: "#/components/schemas/ReasonItemBase"
      additionalProperties: false
    RepriceShipmentObject:
      type: object
      properties:
        originalShipment:
          $ref: "#/components/schemas/CommerceRuntimeShipment"
        newShipment:
          $ref: "#/components/schemas/CommerceRuntimeShipment"
      additionalProperties: false
    RestockableReturnItem:
      type: object
      properties:
        returnItemId:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        locationCode:
          type: string
          nullable: true
      additionalProperties: false
    Return:
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier for this Return
          nullable: true
        customerAccountId:
          type: integer
          description: Unique identifier of the customer account.
          format: int32
          nullable: true
        visitId:
          type: string
          description:
            Identifies the Visit ID that was current when the order was placed
            or when the cart was last updated.
          nullable: true
        webSessionId:
          type: string
          description:
            Identifies the web session used to place the order or last update
            the cart.
          nullable: true
        customerInteractionType:
          type: string
          description:
            "Determines the interaction type that a customer will use to create
            this object.\r

            Valid values are: Website, Store, Call, Unknown"
          nullable: true
        availableActions:
          type: array
          items:
            type: string
          description: Current available actions.
          nullable: true
        returnNumber:
          type: integer
          description:
            A human-facing identifier that is unique within a tenant to
            represent the sequential ordering of Returns.
          format: int32
          nullable: true
        contact:
          $ref: "#/components/schemas/CommerceRuntimeContact"
        locationCode:
          type: string
          description: Location code where the return was made/processed
          nullable: true
        originalOrderId:
          type: string
          description: The Id of the Order that this Return was generated from.
          nullable: true
        originalOrderNumber:
          type: integer
          description: The order number that this return was generated from.
          format: int32
          nullable: true
        returnOrderId:
          type: string
          description:
            The Id of the Order that represents the items shipped to the
            shopper for this Return.
          nullable: true
        currencyCode:
          type: string
          description: ISO Currency Code. Currently, only USD is supported.
          nullable: true
        status:
          type: string
          description: "The Status of the Return.  Valid values are \r

            \    Null, Created, ReturnAuthorized, ReturnPending,
            ReturnReceived, ReplacementShipped, Cancelled, and Closed."
          nullable: true
        receiveStatus:
          type: string
          description:
            "A rollup status describing whether the return items have been
            received.\r

            See
            Mozu.CommerceRuntime.Contracts.Returns.Return.ReceiveStatusConst for
            possible values."
          nullable: true
        refundStatus:
          type: string
          description:
            "A rollup status describing whether the return items have been
            refunded.\r

            See
            Mozu.CommerceRuntime.Contracts.Returns.Return.RefundStatusConst for
            possible values."
          nullable: true
        replaceStatus:
          type: string
          description:
            "A rollup status describing whether the return items have been
            marked as replaced.\r

            See
            Mozu.CommerceRuntime.Contracts.Returns.Return.ReplaceStatusConst for
            possible values."
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/ReturnItem"
          description:
            The list of items being returned by the Shopper and replaced by the
            Merchant in this Return.
          nullable: true
        notes:
          type: array
          items:
            $ref: "#/components/schemas/OrderNote"
          description: Any Merchant Notes for this Return.
          nullable: true
        rmaDeadline:
          type: string
          description:
            The deadline for a Shopper to ship the items in this Return to the
            Merchant.
          format: date-time
          nullable: true
        returnType:
          type: string
          description: Specifies whether this Return was a Refund or a Replace
          nullable: true
        refundAmount:
          type: number
          description:
            If this Return was refunded,  how much was credited to the shopper?
            This amount is summed from the refund payments.
          format: double
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        payments:
          type: array
          items:
            $ref: "#/components/schemas/Payment"
          description: Any Refund payments associated with this Return.
          nullable: true
        packages:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimePackage"
          description: Shipping package associated with this return.
          nullable: true
        productLossTotal:
          type: number
          description:
            "The Total Loss Amount is equal to the (cost of item) * quantity of
            item returned.\r

            It is meant to represent the product value to the
            merchant of the items damaged or returned by a shopper."
          format: double
          nullable: true
        shippingLossTotal:
          type: number
          description:
            "The Shipping Loss Total is equal to the (shipping cost of item) *
            quantity of item returned.\r

            It is meant to represent the product value to the
            merchant of the items damaged or returned by a shopper."
          format: double
          nullable: true
        lossTotal:
          type: number
          description: Sum of the ProductLossTotal and the ShippingLossTotal.
          format: double
          nullable: true
        productLossTaxTotal:
          type: number
          description: The Total Taxes assessed on the product loss.
          format: double
          nullable: true
        shippingLossTaxTotal:
          type: number
          description: The Total Taxes assessed on the shipping loss.
          format: double
          nullable: true
        tenantId:
          type: integer
          description: Unique identifier of the Tenant.
          format: int32
          nullable: true
        siteId:
          type: integer
          description: Unique identifier of the Site.
          format: int32
          nullable: true
        userId:
          type: string
          description: Unique identifier of the current user.
          nullable: true
        channelCode:
          type: string
          description: Unique identifier of the channel for this item.
          nullable: true
        changeMessages:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeChangeMessage"
          description: Change messages related to the return.
          nullable: true
        actionRequired:
          type: boolean
          description: To find Returns that have failed to refund.
        isUnified:
          type: boolean
          description: Was this return created by the Unified platform.
      additionalProperties: false
      description: ""
    ReturnAction:
      type: object
      properties:
        actionName:
          type: string
          description:
            The name of the action to perform, query the Return for Available
            actions to get valid values. This is required.
          nullable: true
        returnIds:
          type: array
          items:
            type: string
          description:
            The list of Returns upon which to perform the action. This is
            required.
          nullable: true
      additionalProperties: false
      description: ""
    ReturnBundle:
      type: object
      properties:
        productCode:
          type: string
          description: Merchant-created code that uniquely identifies the product.
          nullable: true
        quantity:
          type: integer
          description:
            The amount of this particular product in a bundle that is in this
            Return
          format: int32
      additionalProperties: false
    ReturnCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Return"
          nullable: true
      additionalProperties: false
      description:
        "Paged collection of returns. This is paged in case it's returning
        a long list of returns. \r

        for a store."
    ReturnItem:
      type: object
      properties:
        id:
          type: string
          description: The identifer of the return
          nullable: true
        orderItemId:
          type: string
          description:
            The OrderItem that this ReturnItem is associated with. Either the
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.Product or the
            OrderItemId must be present.
          nullable: true
        orderLineId:
          type: integer
          description:
            The OrderLineId that this ReturnItem is associated with. If
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.OrderItemId is
            present, the OrderLineId should be present also.
          format: int32
          nullable: true
        orderItemOptionAttributeFQN:
          type: string
          description:
            If this item refers to a product extra, provide the item's
            corresponding OptionAttributeFQN.
          nullable: true
        product:
          $ref: "#/components/schemas/CommerceRuntimeProduct"
        reasons:
          type: array
          items:
            $ref: "#/components/schemas/ReturnReason"
          description:
            "For a given return reason (Damaged, Defective, MissingParts,
            DifferentExpectations, Late, NoLongerWanted, Other),\r

            how many of the above OrderItem are to be
            replaced.  This value is provided by the Shopper when they request a
            Return."
          nullable: true
        excludeProductExtras:
          type: boolean
          description:
            "If this return item refers to a product/bundle that has product
            extras, this specifies whether those child items should be included
            or excluded.\r

            For backward compatibility, a null value will be treated
            as false, i.e. include the extras."
          nullable: true
        returnType:
          type: string
          description:
            Specifies whether the requested resolution for this item is Refund
            or Replace.
          nullable: true
        returnNotRequired:
          type: boolean
          description:
            "Specifies whether this item should be returned to the merchant,
            e.g. if the item is irreparably damaged and it's not worth shipping
            back.\r

            Even if this is set to true,
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.QuantityShipped
            should still be set to the quantity of items involved in the
            return."
        quantityReceived:
          type: integer
          description:
            "The amount of this item actually received from the shopper. It may
            differ from the sum of the ReturnReasons.\r

            This is populated by the system when the Receive action
            is performed."
          format: int32
        receiveStatus:
          type: string
          description: "Describes the receive status of this item.\r

            If
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ReturnNotRequired
            is {true}, then this should be
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReceiveStatus\
            Const.NOT_REQUESTED.\r

            Otherwise the value should be
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReceiveStatus\
            Const.RECEIVED or
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReceiveStatus\
            Const.WAITING depending on
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.QuantityReceived."
          nullable: true
        quantityShipped:
          type: integer
          description: The quantity of this item fulfilled on the parent order.
          format: int32
        replaceStatus:
          type: string
          description: "Describes the replace status of this item.\r

            If
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ReturnType is
            Mozu.CommerceRuntime.Contracts.Returns.Return.ReturnTypeConst.REFUN\
            D, then this should be
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReplaceStatus\
            Const.NOT_REQUESTED.\r

            Otherwise the value should be
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReplaceStatus\
            Const.REPLACED or
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReplaceStatus\
            Const.NOT_REPLACED depending on
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.QuantityReplaced."
          nullable: true
        quantityRestockable:
          type: integer
          description:
            "Of the quantity returned, how many of this item can be added back
            into the inventory? This item is set by the merchant via an
            UpdateReturn call.\r

            It is used during the Restock action to set some
            quantity of this item back into the inventory management system."
          format: int32
        quantityRestocked:
          type: integer
          description: Field to specify How many items added to inventory
          format: int32
        refundAmount:
          type: number
          description:
            If a refund is issued for the return, how much of the refund amount
            is for this particular item.
          format: double
          nullable: true
        refundStatus:
          type: string
          description: "Describes the refund status of this item.\r

            If
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ReturnType is
            Mozu.CommerceRuntime.Contracts.Returns.Return.ReturnTypeConst.REPLA\
            CE, then this should be
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemRefundStatusC\
            onst.NOT_REQUESTED.\r

            Otherwise the value should be
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemRefundStatusC\
            onst.REFUNDED or
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemRefundStatusC\
            onst.NOT_REFUNDED depending on
            Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.RefundAmount."
          nullable: true
        quantityReplaced:
          type: integer
          description:
            "Specifies the quantity of this item that has been marked as
            replaced, i.e. it has been used to generate a replacement order for
            the return.\r

            Note that the quantity replaced may not line up with the
            quantity of the item actually sent back to the shopper,\r

            such as in the case of an exchange, e.g. swapping a
            medium shirt for a large shirt."
          format: int32
          nullable: true
        notes:
          type: array
          items:
            $ref: "#/components/schemas/OrderNote"
          description: Any merchant-supplied notes for this ReturnItem.
          nullable: true
        productLossAmount:
          type: number
          description:
            The loss incurred of the returned products, used for accounting
            purposes.
          format: double
          nullable: true
        productLossTaxAmount:
          type: number
          description: The tax on the returned products, used for accounting purposes.
          format: double
          nullable: true
        shippingLossAmount:
          type: number
          description:
            The loss incurred of the returned product shipping, used for
            accounting purposes.
          format: double
          nullable: true
        shippingLossTaxAmount:
          type: number
          description:
            The tax on the returned product shipping, used for accounting
            purposes.
          format: double
          nullable: true
        bundledProducts:
          type: array
          items:
            $ref: "#/components/schemas/ReturnBundle"
          description: Deprecated. Not used.
          nullable: true
          deprecated: true
        totalWithoutWeightedShippingAndHandling:
          type: number
          description: Taxable Subtotal including Weighted Order amounts
          format: double
          nullable: true
        totalWithWeightedShippingAndHandling:
          type: number
          description:
            Line item total with line item, Tax, Weighted Tax with Weighted
            shipping and handling costs
          format: double
          nullable: true
        shipmentItemId:
          type: integer
          description: The identifer of the item
          format: int32
          nullable: true
        shipmentNumber:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      description: ""
    ReturnItemCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ReturnItem"
          nullable: true
      additionalProperties: false
      description: Collection of return items listed on the order.
    ReturnItemSpecifier:
      type: object
      properties:
        returnItemId:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
      additionalProperties: false
    ReturnReason:
      type: object
      properties:
        reason:
          type: string
          description: The reason this item has been returned.
          nullable: true
        quantity:
          type: integer
          description: The quantity associated with this Reason.
          format: int32
      additionalProperties: false
      description: Represents a quantity associated with a given reason for a return
    ShipmentAdjustment:
      type: object
      properties:
        itemAdjustment:
          type: number
          format: double
          nullable: true
        itemTaxAdjustment:
          type: number
          format: double
          nullable: true
        shippingAdjustment:
          type: number
          format: double
          nullable: true
        shippingTaxAdjustment:
          type: number
          format: double
          nullable: true
        handlingAdjustment:
          type: number
          format: double
          nullable: true
        handlingTaxAdjustment:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    ShipmentItem:
      type: object
      properties:
        lineId:
          type: integer
          format: int32
        originalOrderItemId:
          type: string
          nullable: true
        parentId:
          type: string
          nullable: true
        productCode:
          type: string
          nullable: true
        variationProductCode:
          type: string
          nullable: true
        optionAttributeFQN:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        fulfillmentLocationCode:
          type: string
          nullable: true
        imageUrl:
          type: string
          nullable: true
        isTaxable:
          type: boolean
        quantity:
          type: integer
          format: int32
        unitPrice:
          type: number
          format: double
        actualPrice:
          type: number
          format: double
        overridePrice:
          type: number
          format: double
          nullable: true
        itemDiscount:
          type: number
          format: double
        lineItemCost:
          type: number
          format: double
        itemTax:
          type: number
          format: double
        shipping:
          type: number
          format: double
        shippingDiscount:
          type: number
          format: double
        shippingTax:
          type: number
          format: double
        handling:
          type: number
          format: double
        handlingDiscount:
          type: number
          format: double
        handlingTax:
          type: number
          format: double
        duty:
          type: number
          format: double
        isPackagedStandAlone:
          type: boolean
          nullable: true
        readyForPickupQuantity:
          type: integer
          format: int32
          nullable: true
        backorderReleaseDate:
          type: string
          format: date-time
          nullable: true
        measurements:
          $ref: "#/components/schemas/CommerceRuntimePackageMeasurements"
        options:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeProductOption"
          nullable: true
        data:
          type: object
          nullable: true
        taxData:
          type: object
          nullable: true
        weightedShipmentAdjustment:
          type: number
          format: double
        weightedLineItemTaxAdjustment:
          type: number
          format: double
        weightedShippingAdjustment:
          type: number
          format: double
        weightedShippingTaxAdjustment:
          type: number
          format: double
        weightedHandlingAdjustment:
          type: number
          format: double
        weightedHandlingTaxAdjustment:
          type: number
          format: double
        weightedDutyAdjustment:
          type: number
          format: double
        taxableShipping:
          type: number
          format: double
        taxableLineItemCost:
          type: number
          format: double
        taxableHandling:
          type: number
          format: double
      additionalProperties: false
    ShipmentItemAdjustment:
      type: object
      properties:
        overridePrice:
          type: number
          description: Unit price override
          format: double
          nullable: true
      additionalProperties: false
    ShippingDiscount:
      type: object
      properties:
        methodCode:
          type: string
          description: Unique identifier of the shipping method discount.
          nullable: true
        discount:
          $ref: "#/components/schemas/CommerceRuntimeAppliedDiscount"
      additionalProperties: false
      description: Value of the shipping discount.
    ShippingPrice:
      type: object
      properties:
        currencyCode:
          type: string
          description:
            ISO currency code such as US dollars. Currently, only USD is
            supported.
          nullable: true
        price:
          type: number
          description:
            How much the customer pays for shipping which includes any shipping
            discounts that the merchant offers.
          format: double
          nullable: true
      additionalProperties: false
      description: Shipping pricing information which includes the cost to the
        merchant and the price that the customer pays.
    SplitShipmentsObject:
      type: object
      properties:
        originalShipment:
          $ref: "#/components/schemas/CommerceRuntimeShipment"
        newShipments:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeShipment"
          nullable: true
      additionalProperties: false
    SubPayment:
      type: object
      properties:
        status:
          type: string
          nullable: true
        amountCollected:
          type: number
          format: double
        amountCredited:
          type: number
          format: double
        amountRequested:
          type: number
          format: double
        amountRefunded:
          type: number
          format: double
        target:
          $ref: "#/components/schemas/PaymentActionTarget"
      additionalProperties: false
    SuggestedDiscount:
      type: object
      properties:
        productCode:
          type: string
          nullable: true
        autoAdd:
          type: boolean
        discountId:
          type: integer
          format: int32
        hasMultipleProducts:
          type: boolean
        hasOptions:
          type: boolean
      additionalProperties: false
    Wishlist:
      type: object
      allOf:
        - $ref: "#/components/schemas/CommerceAggregate"
      properties:
        customerAccountId:
          type: integer
          description: Unique identifier of the customer account.
          format: int32
          nullable: true
        typeTag:
          type: string
          description:
            Open-ended Wishlist type, e.g. giftlist, gift, wish, wishlist,
            wedding, baby.  If the merchant does not need this level of
            granularity this is always null.
          nullable: true
        name:
          type: string
          description:
            Name of the list that is display or potentially shared (e.g.
            friends and family may view this description if the list is public
            and the list owner may see this description when viewing the list)
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/WishlistItem"
          description: List of items in the wishlist.
          nullable: true
        privacyType:
          type: string
          description:
            Is the wishlist public, viewable only through a shared link, or
            private (only the owner of the list may view the wishlist)?
          nullable: true
        sortOrder:
          type: integer
          description:
            The wishlist sort order.  Useful for scenarios where there is a
            default wishlist and other wishlists or arbitrary ordering
          format: int32
          nullable: true
        version:
          type: string
          description: Version for concurrency purposes
          nullable: true
        isImport:
          type: boolean
          description: Was this object imported from an external system?
          nullable: true
        importDate:
          type: string
          description: Date this item was imported
          format: date-time
          nullable: true
        externalId:
          type: string
          description: Id in an external system this item may have been imported from
          nullable: true
      additionalProperties: false
      description:
        Details of the wishlist, items listed in the wishlist, and any
        system messages.
    WishlistCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Wishlist"
          nullable: true
      additionalProperties: false
      description: Paged collection of wishlists.
    WishlistItem:
      type: object
      allOf:
        - $ref: "#/components/schemas/CommerceItem"
      properties:
        id:
          type: string
          description:
            Unique identifier of the wishlist line item. System-supplied and
            read-only.
          nullable: true
        comments:
          type: string
          description: Comments for the wishlist item that are entered by the wishlist owner
          nullable: true
        priorityType:
          type: string
          description:
            Wishlist item priority that is a hint to how much this item is
            needed or desired
          nullable: true
        purchasableStatusType:
          type: string
          description: Is the item purchasable?
          nullable: true
      additionalProperties: false
      description: A single line item of an order.
    WishlistItemCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/WishlistItem"
          nullable: true
      additionalProperties: false
      description: Paged collection of wishlists.
    CommerceRuntimeAttribute:
      required:
        - attributeCode
        - displayGroup
        - valueType
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        adminName:
          maxLength: 50
          type: string
          nullable: true
        namespace:
          maxLength: 200
          type: string
          nullable: true
        attributeCode:
          maxLength: 50
          type: string
        inputType:
          type: string
          nullable: true
        valueType:
          type: string
        dataType:
          type: string
          nullable: true
        attributeMetadata:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeAttributeMetadataItem"
          nullable: true
        attributeFQN:
          type: string
          nullable: true
        content:
          $ref: "#/components/schemas/CommerceRuntimeAttributeLocalizedContent"
        validation:
          $ref: "#/components/schemas/CommerceRuntimeAttributeValidation"
        vocabularyValues:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeAttributeVocabularyValue"
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        isActive:
          type: boolean
          nullable: true
        isRequired:
          type: boolean
          nullable: true
        isReadOnly:
          type: boolean
        isMultiValued:
          type: boolean
          nullable: true
        isVisible:
          type: boolean
          nullable: true
        order:
          type: integer
          format: int32
          nullable: true
        displayGroup:
          type: string
      additionalProperties: false
    CommerceRuntimePackage:
      type: object
      allOf:
        - $ref: "#/components/schemas/CollectionOfPackageItem"
      properties:
        shippingMethodCode:
          type: string
          description: Code describing the shipping method.
          nullable: true
        shippingMethodName:
          type: string
          description: Name of the shipping method
          nullable: true
        shipmentId:
          type: string
          description: ID of the related shipment
          nullable: true
        trackingNumber:
          type: string
          description: Tracking number of this package (to support classic use cases)
          nullable: true
        trackingNumbers:
          type: array
          items:
            type: string
          description: Tracking number of this package
          nullable: true
        packagingType:
          type: string
          description: Packaging type of this package
          nullable: true
        hasLabel:
          type: boolean
          description:
            If there is a shipping label present for this Package, this will be
            set to true
        measurements:
          $ref: "#/components/schemas/CommerceRuntimePackageMeasurements"
        carrier:
          type: string
          description: Carrier of this package
          nullable: true
        signatureRequired:
          type: boolean
          description: SignatureRequired for this package
          nullable: true
        trackings:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeTracking"
          description: Tracking number and url data for this package
          nullable: true
      additionalProperties: false
      description: Describes a package that will be shipped to somebody
    CommerceRuntimeAddress:
      type: object
      properties:
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        address3:
          type: string
          nullable: true
        address4:
          type: string
          nullable: true
        cityOrTown:
          type: string
          nullable: true
        stateOrProvince:
          type: string
          nullable: true
        postalOrZipCode:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        addressType:
          type: string
          nullable: true
        isValidated:
          type: boolean
          nullable: true
      additionalProperties: false
    CommerceRuntimeAppliedDiscount:
      type: object
      properties:
        impact:
          type: number
          description:
            Value of the discount applied. This is a negative number to be
            subtracted from the original price to get the final price.
          format: double
          nullable: true
        discount:
          $ref: "#/components/schemas/CommerceRuntimeDiscount"
        couponCode:
          type: string
          description:
            Code of the coupon associated with the discount if a coupon code is
            required to get the discount.
          nullable: true
        excluded:
          type: boolean
          description:
            Determines whether or not this discount is set up to be ignored by
            the pricing runtime.
          nullable: true
      additionalProperties: false
      description:
        "Discount applied to the order, which is a negative number to be
        subtracted from the original price to get the final price. \r

        If multiple discounts for the order exist, this is the value
        most advantageous to the shopper."
    CommerceRuntimeAppliedLineItemProductDiscount:
      type: object
      allOf:
        - $ref: "#/components/schemas/CommerceRuntimeAppliedProductDiscount"
      properties:
        appliesToSalePrice:
          type: boolean
          description: Determines if the discount applies to the sale price of the order
          nullable: true
        discountQuantity:
          type: integer
          description:
            The number of the line item that can be used for this particular
            discount.
          format: int32
      additionalProperties: false
    CommerceRuntimeAppliedLineItemShippingDiscount:
      type: object
      allOf:
        - $ref: "#/components/schemas/ShippingDiscount"
      properties:
        methodCode:
          type: string
          description: Unique identifier of the shipping method discount.
          nullable: true
        discount:
          $ref: "#/components/schemas/CommerceRuntimeAppliedDiscount"
        discountQuantity:
          type: integer
          description:
            The number of the line item that can be used for this particular
            discount.
          format: int32
        impactPerUnit:
          type: number
          description: The impact of this discount pur discount quantity.
          format: double
      additionalProperties: false
    CommerceRuntimeAppliedProductDiscount:
      type: object
      allOf:
        - $ref: "#/components/schemas/CommerceRuntimeAppliedDiscount"
      properties:
        productQuantity:
          type: integer
          description:
            Quantity of products priced. This is always one unless calculating
            pricing on the order or cart.
          format: int32
          nullable: true
          deprecated: true
        impactPerUnit:
          type: number
          description:
            Impact for a quantity of one product; that is, the value of the
            discount for one product.
          format: double
          nullable: true
          deprecated: true
        appliesToSalePrice:
          type: boolean
          description: Determines if the discount applies to the sale price of the order
          nullable: true
      additionalProperties: false
      description: Details of the discount applied to a product.
    CommerceRuntimeAttributeCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeAttribute"
          nullable: true
      additionalProperties: false
    CommerceRuntimeAttributeLocalizedContent:
      type: object
      properties:
        localeCode:
          maxLength: 8
          type: string
          nullable: true
        value:
          maxLength: 100
          type: string
          nullable: true
      additionalProperties: false
    CommerceRuntimeAttributeMetadataItem:
      required:
        - key
        - value
      type: object
      properties:
        key:
          maxLength: 50
          type: string
        value:
          type: string
      additionalProperties: false
    CommerceRuntimeAttributeValidation:
      type: object
      properties:
        regularExpression:
          maxLength: 200
          type: string
          nullable: true
        minStringLength:
          type: integer
          format: int32
          nullable: true
        maxStringLength:
          type: integer
          format: int32
          nullable: true
        minNumericValue:
          type: number
          format: double
          nullable: true
        maxNumericValue:
          type: number
          format: double
          nullable: true
        minDateTime:
          type: string
          format: date-time
          nullable: true
        maxDateTime:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    CommerceRuntimeAttributeVocabularyValue:
      required:
        - value
      type: object
      properties:
        value:
          maxLength: 50
          type: string
        sequence:
          type: integer
          format: int32
          nullable: true
        isHidden:
          type: boolean
          nullable: true
        content:
          $ref: "#/components/schemas/AttributeValueLocalizedContent"
      additionalProperties: false
    CommerceRuntimeBundledProduct:
      type: object
      allOf:
        - $ref: "#/components/schemas/ProductBase"
      properties:
        quantity:
          type: integer
          description: Quantity of the product included in the bundle.
          format: int32
        optionAttributeFQN:
          type: string
          description: Fully Qualified Name of the selected option's attribute
          nullable: true
        optionValue:
          description: Value of the selected option
          nullable: true
        creditValue:
          type: number
          description:
            Credit value.  Only populated if the bundled product is a gift card
            or digital credit
          format: double
          nullable: true
        deltaPrice:
          type: number
          description: Only populated for extras
          format: double
          nullable: true
      additionalProperties: false
      description: Describes products that are bundled inside of a main bundle product.
    CommerceRuntimeCanceledItem:
      type: object
      allOf:
        - $ref: "#/components/schemas/ShipmentItem"
      properties:
        canceledReason:
          $ref: "#/components/schemas/CommerceRuntimeCanceledReason"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    CommerceRuntimeCanceledReason:
      type: object
      properties:
        reasonCode:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        moreInfo:
          type: string
          nullable: true
      additionalProperties: false
    CommerceRuntimeCategory:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the category. System-supplied and read-only.
          format: int32
          nullable: true
        parent:
          $ref: "#/components/schemas/CommerceRuntimeCategory"
      additionalProperties: false
      description:
        Categories to which the product belongs. Discounts can apply to
        categories where any product in the category is discounted.
    CommerceRuntimeChangeMessage:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the  message. System-supplied. Read-only.
          nullable: true
        correlationId:
          type: string
          description: Correlation Id
          nullable: true
        userId:
          type: string
          description: User Id that identifies the user that performed the related change
          nullable: true
        userFirstName:
          type: string
          description: User First Name
          nullable: true
        userLastName:
          type: string
          description: User Last Name
          nullable: true
        userScopeType:
          type: string
          description: User Type (e.g. Shopper, Admin, etc.)
          nullable: true
        appId:
          type: string
          description: App Id that identifies the user that performed the related change
          nullable: true
        appKey:
          type: string
          description: App Key
          nullable: true
        appName:
          type: string
          description: App Name
          nullable: true
        subjectType:
          type: string
          description:
            Subject of the message, for example, "Product." System-supplied.
            Read-only.
          nullable: true
        success:
          type: boolean
          description: Indicates if the message is related to a success or failure.
          nullable: true
        identifier:
          type: string
          description:
            Unique identifier to what the message pertains, which can be a cart
            item, cart or another generic entity. System-supplied. Read-only.
          nullable: true
        subject:
          type: string
          description:
            Text on the subject line of the message, for example, the product
            name. System-supplied. Read-only.
          nullable: true
        verb:
          type: string
          description:
            "Action applicable to the message. This can be \"Increased,\" when
            the product price has increased, \"Decreased,\" when the \r

            product price has decreased, and \"Invalidated,\" when
            the product is no longer available. System-supplied. Read-only."
          nullable: true
        message:
          type: string
          description: Human readable message. System-supplied. Read-only.
          nullable: true
        metadata:
          description:
            Data. This property will be a JSON array that will contain 0-N
            items, when there is 1 item it will still be an array containing
            only one item. System-supplied. Read-only.
          nullable: true
        oldValue:
          type: string
          description: Original price of the item. System-supplied. Read-only.
          nullable: true
          deprecated: true
        newValue:
          type: string
          description: Current price of the item. System-supplied. Read-only.
          nullable: true
          deprecated: true
        amount:
          type: number
          description: Monetary amount that pertains to the change if applicable
          format: double
          nullable: true
          deprecated: true
        createDate:
          type: string
          description: When the message was created. System-supplied. Read-only.
          format: date-time
          nullable: true
      additionalProperties: false
      description:
        A message displayed by the system based on the last  action, for
        example, when a product price has changed. System-supplied and
        read-only.
    CommerceRuntimeContact:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        email:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        middleNameOrInitial:
          type: string
          nullable: true
        lastNameOrSurname:
          type: string
          nullable: true
        companyOrOrganization:
          type: string
          nullable: true
        phoneNumbers:
          $ref: "#/components/schemas/CommerceRuntimePhone"
        address:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
      additionalProperties: false
    CommerceRuntimeDestination:
      type: object
      properties:
        id:
          type: string
          description: An identifier for this entry.
          nullable: true
        destinationContact:
          $ref: "#/components/schemas/CommerceRuntimeContact"
        isDestinationCommercial:
          type: boolean
          description: Indicates that the destination is commercial
          nullable: true
        data:
          type: object
          description: Custom data
          nullable: true
      additionalProperties: false
    CommerceRuntimeDiscount:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the discount.
          format: int32
        name:
          type: string
          description: Name of the discount in the language specified by LocaleCode.
          nullable: true
        itemIds:
          type: array
          items:
            type: string
          description: List of discounts for each order item.
          nullable: true
        expirationDate:
          type: string
          description: Date when the discount expires. Default is null (no expiration date).
          format: date-time
          nullable: true
        hasMultipleTargetProducts:
          type: boolean
          description:
            "Indicates that the discount targets more than a product.  Used\r

            primarily for BoGa discounts with multiple targets."
      additionalProperties: false
      description:
        "Discounts that apply to the order, if any. For example, when the
        \r

        subtotal of the order exceeds a certain amount, or for free
        shipping."
    CommerceRuntimeLink:
      type: object
      properties:
        deprecation:
          type: string
          nullable: true
        href:
          type: string
          nullable: true
        hreflang:
          type: string
          nullable: true
        media:
          type: string
          nullable: true
        rel:
          type: string
          nullable: true
        templated:
          type: boolean
          nullable: true
        title:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
      additionalProperties: false
    CommerceRuntimeMeasurement:
      type: object
      properties:
        unit:
          type: string
          nullable: true
        value:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    CommerceRuntimeOrderItem:
      type: object
      allOf:
        - $ref: "#/components/schemas/CommerceItem"
      properties:
        id:
          type: string
          description:
            Unique identifier of the order line item. System-supplied and
            read-only.
          nullable: true
        destinationId:
          type: string
          description:
            The destination associated with this item when used with a
            multi-ship checkout.
          nullable: true
        originalCartItemId:
          type: string
          description:
            "Unique identifier of the cart item that is associated with this
            line item. \r

            (This is the original Cart Item ID expressed as a
            GUID.)"
          nullable: true
        fulfillmentLocationCode:
          type: string
          description: Location code from which to obtain this item
          nullable: true
        fulfillmentMethod:
          type: string
          description: Fulfillment method used to fulfill this item
          nullable: true
        dutyAmount:
          type: number
          description: Duty or Tariff for this item
          format: double
          nullable: true
        expectedDeliveryDate:
          type: string
          description: Expected Delivery Date of shipment
          format: date-time
          nullable: true
      additionalProperties: false
      description: A single line item of an order.
    CommerceRuntimePackageMeasurements:
      type: object
      properties:
        height:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        width:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        length:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        weight:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
      additionalProperties: false
      description:
        Physical dimensions of the package required to ship the product and
        its weight.
    CommerceRuntimePhone:
      type: object
      properties:
        home:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        work:
          type: string
          nullable: true
      additionalProperties: false
    CommerceRuntimePickupItem:
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractFulfillmentItem"
      additionalProperties: false
      description:
        Item that goes into the pickup to determine which items will be
        picked up.
    CommerceRuntimeProduct:
      type: object
      allOf:
        - $ref: "#/components/schemas/ProductBase"
      properties:
        mfgPartNumber:
          type: string
          description: Manufacturing Part Number of the product.
          nullable: true
        upc:
          type: string
          description: Universal Product Code of the product.
          nullable: true
        sku:
          type: string
          description: Product Identifier specific to the store
          nullable: true
        fulfillmentTypesSupported:
          type: array
          items:
            type: string
          description: Types of fulfillment that are supported for this product.
          nullable: true
        imageAlternateText:
          type: string
          description:
            Descriptive text of the image associated with the product in the
            language specified by LocaleCode.
          nullable: true
        imageUrl:
          type: string
          description:
            URL of the image that appears next to the product on the order
            item. Optional.
          nullable: true
        variationProductCode:
          type: string
          description:
            For configurable products, the unique identifier of the product
            variation that has been selected.
          nullable: true
        options:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeProductOption"
          description:
            If the product contains configurable or stand-alone options, the
            list of product options that the shopper selected for this product.
          nullable: true
        properties:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeProductProperty"
          description:
            If the product contains properties, the list of properties that the
            shopper selected for this product.
          nullable: true
        categories:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeCategory"
          description: Categories to which this product belongs.
          nullable: true
        price:
          $ref: "#/components/schemas/CommerceRuntimeProductPrice"
        discountsRestricted:
          type: boolean
          description: Is the product discount restricted
          nullable: true
        discountsRestrictedStartDate:
          type: string
          description: Product discount restriction start date
          format: date-time
          nullable: true
        discountsRestrictedEndDate:
          type: string
          description: Product discount restriction end date
          format: date-time
          nullable: true
        isRecurring:
          type: boolean
          description: If true, the product is purchased or fulfilled at regular
            intervals, for example, a monthly billing or a subscription.
          nullable: true
        isTaxable:
          type: boolean
          description: If true, the product is eligible for tax.
          nullable: true
        productType:
          type: string
          description:
            Type of product, which can be a product with configurable options,
            a product with stand-alone options, or a simple product with no
            options.
          nullable: true
        productUsage:
          type: string
          description:
            Usage of the product, primarily used to indicate a bundle in this
            context
          nullable: true
        bundledProducts:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeBundledProduct"
          description:
            Products bundled with this product (if the current product is a
            bundle)
          nullable: true
      additionalProperties: false
      description: The product as it appears on the order item.
    CommerceRuntimeProductOption:
      type: object
      properties:
        name:
          type: string
          description:
            Name of the product option that appears with the order item in the
            language specified by LocaleCode.
          nullable: true
        value:
          description: Value of the product option.
          nullable: true
        shopperEnteredValue:
          description:
            The value entered by the shopper if this is an option that requires
            shopper input, for example, a monogram.
          nullable: true
        attributeFQN:
          type: string
          description: Value of the product option.
          nullable: true
        dataType:
          type: string
          description: Value of the product option.
          nullable: true
        stringValue:
          type: string
          description: Value of the product option.
          nullable: true
      additionalProperties: false
      description:
        "Product option for the product listed on this order item. If the
        product contains \r

        configurable or stand-alone options, this is a product option
        that the shopper has selected."
    CommerceRuntimeProductPrice:
      type: object
      properties:
        price:
          type: number
          description:
            Price of the product. This is the price that the merchant intends
            to sell the product if no sale price is present.
          format: double
          nullable: true
        salePrice:
          type: number
          description:
            Current sale price of the product, which is a specific numerical
            amount (not a percentage off).
          format: double
          nullable: true
        tenantOverridePrice:
          type: number
          description: An override price applied on the product by the tenant.
          format: double
          nullable: true
        msrp:
          type: number
          description: MSRP of product.
          format: double
          nullable: true
        creditValue:
          type: number
          description:
            Credit Value when the product happens to be a gift card or similar
            product
          format: double
          nullable: true
        priceListCode:
          type: string
          description: Pricelist code for the product
          nullable: true
        priceListEntryMode:
          type: string
          description: "Pricelist entry mode of the product.\r

            Note: possible values are below\r

            1. null : Product doesn't participate in pricelist\r

            2. Bulk : Bulk volume price available(unit price vary
            based on quantity)\r

            3. Simple:"
          nullable: true
      additionalProperties: false
      description: Price of the product with any sale and discounts applied.
    CommerceRuntimeProductProperty:
      type: object
      properties:
        attributeFQN:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
        isMultiValue:
          type: boolean
        values:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeProductPropertyValue"
          nullable: true
      additionalProperties: false
    CommerceRuntimeProductPropertyValue:
      type: object
      properties:
        stringValue:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    CommerceRuntimePurchaseOrderCustomField:
      type: object
      properties:
        code:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    CommerceRuntimePurchaseOrderPaymentTerm:
      type: object
      properties:
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    CommerceRuntimeShipment:
      type: object
      properties:
        id:
          type: string
          description: ID of the shipment
          nullable: true
        externalShipmentId:
          type: string
          nullable: true
        number:
          type: integer
          format: int32
          nullable: true
        orderId:
          type: string
          nullable: true
        orderNumber:
          type: integer
          format: int32
        email:
          type: string
          nullable: true
        currencyCode:
          type: string
          nullable: true
        customerAccountId:
          type: integer
          format: int32
          nullable: true
        customerTaxId:
          type: string
          nullable: true
          readOnly: true
        shipmentType:
          type: string
          nullable: true
        shippingMethodCode:
          type: string
          nullable: true
        shippingMethodName:
          type: string
          nullable: true
        fulfillmentLocationCode:
          type: string
          nullable: true
        origin:
          $ref: "#/components/schemas/CommerceRuntimeContact"
        destination:
          $ref: "#/components/schemas/CommerceRuntimeDestination"
        shipmentStatus:
          type: string
          nullable: true
        shipmentStatusReason:
          $ref: "#/components/schemas/CommerceRuntimeShipmentStatusReason"
        transferShipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        isTransfer:
          type: boolean
          nullable: true
        originalShipmentNumber:
          type: integer
          format: int32
          nullable: true
        parentShipmentNumber:
          type: integer
          format: int32
          nullable: true
        fulfillmentStatus:
          type: string
          nullable: true
        workflowProcessId:
          type: string
          nullable: true
        workflowProcessContainerId:
          type: string
          nullable: true
        workflowState:
          $ref: "#/components/schemas/CommerceRuntimeWorkflowState"
        backorderCreatedDate:
          type: integer
          format: int32
          nullable: true
        fulfillmentDate:
          type: string
          format: date-time
          nullable: true
        orderSubmitDate:
          type: string
          format: date-time
          nullable: true
        pickStatus:
          type: string
          nullable: true
        pickType:
          type: string
          nullable: true
        changeMessages:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeChangeMessage"
          nullable: true
        packages:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimePackage"
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/ShipmentItem"
          nullable: true
        canceledItems:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeCanceledItem"
          nullable: true
        data:
          type: object
          nullable: true
        taxData:
          type: object
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        shipmentAdjustment:
          type: number
          format: double
        lineItemSubtotal:
          type: number
          format: double
        lineItemTaxAdjustment:
          type: number
          format: double
        lineItemTaxTotal:
          type: number
          format: double
        lineItemTotal:
          type: number
          format: double
        shippingAdjustment:
          type: number
          format: double
        shippingSubtotal:
          type: number
          format: double
        shippingTaxAdjustment:
          type: number
          format: double
        shippingTaxTotal:
          type: number
          format: double
        shippingTotal:
          type: number
          format: double
        handlingAdjustment:
          type: number
          format: double
        handlingSubtotal:
          type: number
          format: double
        handlingTaxAdjustment:
          type: number
          format: double
        handlingTaxTotal:
          type: number
          format: double
        handlingTotal:
          type: number
          format: double
        dutyAdjustment:
          type: number
          format: double
        dutyTotal:
          type: number
          format: double
        total:
          type: number
          format: double
        cost:
          type: number
          format: double
          nullable: true
        externalOrderId:
          type: string
          nullable: true
        isExpress:
          type: boolean
          nullable: true
        readyToCapture:
          type: boolean
        pickupInfo:
          type: object
          nullable: true
      additionalProperties: false
    CommerceRuntimeShipmentStatusReason:
      type: object
      properties:
        reasonCode:
          type: string
          nullable: true
        moreInfo:
          type: string
          nullable: true
      additionalProperties: false
    CommerceRuntimeShippingRate:
      type: object
      allOf:
        - $ref: "#/components/schemas/ShippingPrice"
      properties:
        shippingMethodCode:
          type: string
          description: Code that uniquely identifies the selected shipping method.
          nullable: true
        shippingMethodName:
          type: string
          description: Shipping Method Name
          nullable: true
        shippingZoneCode:
          type: string
          description: The shipping zone to which this rate applies.
          nullable: true
        isValid:
          type: boolean
          description: If true, the shipping rate is valid.
          nullable: true
        messages:
          type: array
          items:
            type: string
          description: Messages and detail about why the shipping rate may be invalid.
          nullable: true
        data:
          type: object
          description: Custom data returned by the shipping service.
          nullable: true
      additionalProperties: false
      description:
        "How much the customer and merchant pay for shipping based on the
        current shipping rate. \r

        The cost can differ between the merchant and customer depending
        on any merchant discounts or \r

        extra fees."
    CommerceRuntimeShopperNotes:
      type: object
      properties:
        giftMessage:
          type: string
          description: Gift message associated with this order.
          nullable: true
        comments:
          type: string
          description: Comments associated with this order.
          nullable: true
      additionalProperties: false
      description:
        Notes that the shopper has added to this order, for example, a gift
        message or other comments.
    CommerceRuntimeTaskInput:
      type: object
      properties:
        helpMessage:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        maxLength:
          type: integer
          format: int32
          nullable: true
        maximum:
          type: number
          format: double
        minLength:
          type: integer
          format: int32
          nullable: true
        minimum:
          type: number
          format: double
        name:
          type: string
          nullable: true
        options:
          type: array
          items: {}
          nullable: true
        pattern:
          type: string
          nullable: true
        required:
          type: boolean
          nullable: true
        type:
          type: string
          nullable: true
      additionalProperties: false
    CommerceRuntimeThresholdMessage:
      type: object
      properties:
        discountId:
          type: integer
          format: int32
        message:
          type: string
          nullable: true
        thresholdValue:
          type: number
          format: double
        showOnCheckout:
          type: boolean
        showInCart:
          type: boolean
        requiresCouponCode:
          type: boolean
      additionalProperties: false
    CommerceRuntimeTracking:
      type: object
      properties:
        attributes:
          type: object
          additionalProperties: {}
          nullable: true
        number:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
      additionalProperties: false
    CommerceRuntimeWorkflowState:
      type: object
      properties:
        attributes:
          type: object
          additionalProperties: {}
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        completedDate:
          type: string
          format: date-time
          nullable: true
        processInstanceId:
          type: string
          nullable: true
        shipmentState:
          type: string
          nullable: true
        taskList:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentTask"
          nullable: true
      additionalProperties: false
    AddOrDeletePublishItem:
      type: object
      properties:
        documentId:
          type: string
          nullable: true
        docListFQN:
          type: string
          nullable: true
        scopeType:
          type: string
          nullable: true
        scopeId:
          type: integer
          format: int32
      additionalProperties: false
    Document:
      type: object
      properties:
        id:
          type: string
          description:
            Read-only, system generated 32 digit alpha-numeric string that
            uniquely identifies the document.
          nullable: true
        name:
          type: string
          description:
            The name of the document, unique within the documentList. This
            field is a required field, but it can be updated.
          nullable: true
        publishSetCode:
          type: string
          description: The name of the publish set that this document belongs to, if any.
          nullable: true
        extension:
          type: string
          description:
            If applicable, the file extension associated with the document
            content.
          nullable: true
        documentTypeFQN:
          type: string
          description:
            The full name of the documentType that underlies this document.
            This field must be supplied upon document creation and cannot be
            updated.
          nullable: true
        listFQN:
          type: string
          description:
            The fully qualified name of the documentList to which the document
            belongs. This field is read-only and represents which documentList
            the document is created in.
          nullable: true
        contentLength:
          type: integer
          description:
            "The size of the content subresource in decimal number of OCTETs.
            When updating the content subresource, the contentLength is captured
            from the Content-Length header, if present, or is otherwise
            computed\r

            from the total size of the http body."
          format: int64
          nullable: true
        contentMimeType:
          type: string
          description:
            The mime type of the document's binary content, provided via the
            Content-Type header when updating the content subresource. If no
            value is provided then "application/octet-stream" is set by default.
          nullable: true
        contentUpdateDate:
          type: string
          description:
            The date and time the most recent content update was made via the
            content subresource. UTC date/time. System-supplied and read-only.
          format: date-time
          nullable: true
        publishState:
          type: string
          description:
            "The current publish status of the document. If publishing is not
            supported or is currently disabled in the documentList then the
            value will be \"active\".\r

            If publishing is supported and enabled, then the publish
            state may be \"draft\" or \"active\". A document may have both an
            \"active\" and \"draft\" version. The publishState\r

            denotes which version of the document being interacted
            with. This field is read-only."
          nullable: true
        properties:
          description:
            "A JSON object of name/value pairs. Name parts are matched against
            the underlying documentType properties names. Any matching name
            parts must have a value part that conforms to the matching property
            schema.\r

            Any non-matching name/value pairs are considered dynamic
            schema and may have a value part of valid JSON.\r

            The properties field can be used for sorting/filtering
            and can be projected in the documents returned within a documentList
            view."
          nullable: true
        insertDate:
          type: string
          description:
            The date and time the document was added to the documentList. This
            field is system-supplied and read-only.
          format: date-time
          nullable: true
        updateDate:
          type: string
          description:
            "The date and time the most recent document update was made. If
            publishing is enabled, then this value will represent\r

            the last draft update if the publishState is draft, or
            the last publish date if the publishState is active."
          format: date-time
          nullable: true
        activeDateRange:
          $ref: "#/components/schemas/ContentActiveDateRange"
      additionalProperties: false
      description:
        "Container for schema-enforced and schemaless data. A document is
        primarily used to store content (html, text, numbers, dates, JSON,
        binary data) \r

        that is directly or indirectly used for the storefront website
        experience and may be addressed via the Hypr theming engine language. A
        document belongs to a documentList and has an underlying documentType.
        \r

        The documentType describes any required and optional schema.
        Additionally, a binary object may be stored on the document's content
        subresource and edge cached via the Mozu CDN."
    DocumentCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Document"
          nullable: true
      additionalProperties: false
    DocumentDraftSummary:
      type: object
      properties:
        id:
          type: string
          description:
            The system generated 32 digit alpha-numeric string that uniquely
            identifies the document.
          nullable: true
        name:
          type: string
          description: The unique name of the document.
          nullable: true
        documentTypeFQN:
          type: string
          description: The full name of the documentType that underlies this document.
          nullable: true
        listFQN:
          type: string
          description:
            The fully qualified name of the documentList to which the document
            belongs.
          nullable: true
        activeUpdateDate:
          type: string
          description: The date and time the document was last published, if any.
          format: date-time
          nullable: true
        draftUpdateDate:
          type: string
          description: The date and time the document draft was last updated.
          format: date-time
        updatedBy:
          type: string
          description: The userId or applicationId that last updated the draft document.
          nullable: true
        activeUpdatedBy:
          type: string
          nullable: true
        publishType:
          type: string
          description: "Denotes the type of draft. \r

            \"Created\" -- the document has never been published. \r

            \"Updated\" -- the document has an \"active\" version
            and this is a subsequent draft.\r

            \"Deleted\" -- the \"active\" document will be
            permanently deleted when this draft is published."
          nullable: true
        publishSetCode:
          type: string
          nullable: true
        masterCatalogId:
          type: integer
          format: int32
          nullable: true
        catalogId:
          type: integer
          format: int32
          nullable: true
        siteId:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      description: Summary information on a Document Draft
    DocumentDraftSummaryPagedCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/DocumentDraftSummary"
          nullable: true
      additionalProperties: false
    DocumentInstallation:
      type: object
      properties:
        name:
          type: string
          description: The name of the document to create.
          nullable: true
        documentTypeFQN:
          type: string
          description: The full name of the documentType that underlies this document.
          nullable: true
        properties:
          description: The properties of this document.
          nullable: true
        locale:
          type: string
          description: tbd
          nullable: true
      additionalProperties: false
      description: The definition of a document to create when a documentList is created.
    DocumentList:
      type: object
      properties:
        name:
          type: string
          description:
            "The name component of the listFQN, name@namespace. The name must
            be unique within the namespace component and cannot be updated.\r

            If the documentList is based on a documentListType, then
            this value will be derived from the documentListType."
          nullable: true
        namespace:
          type: string
          description:
            "The namespace component of the listFQN, name@namespace. The issued
            dev account namespace must be used unless elevated privileges allow
            a blank namespace to be used. The namespace cannot be updated.\r

            If the documentList is based on a documentListType, then
            this value will be derived from the documentListType."
          nullable: true
        listFQN:
          type: string
          description:
            "The unique identifier of the documentList, represented by
            name@namespace. The listFQN must be provided when creating the
            documentList, or the name and namespace fields must be provided.\r

            If the documentList is based on a documentListType, then
            this value will be derived from the documentListType."
          nullable: true
        documentTypes:
          type: array
          items:
            type: string
          description:
            "An array of the full names (name@namespace) of the documentTypes
            supported by the documentList. A document in the documentList must
            belong to one of these documentTypes.\r

            If the documentList is based on a documentListType, then
            this value will be derived from the documentListType. DocumentTypes
            can be added/removed to the documentList, even when\r

            based on a documentListType. Existing documents that
            belong to a documentType removed from the documentList will not be
            removed."
          nullable: true
        supportsPublishing:
          type: boolean
          description: "Determines if the documentList will support drafting and
            publishing documents. \r

            This field defaults to false and cannot be updated.\r

            If the documentList is based on a documentListType, then
            this value will be derived from the documentListType."
          nullable: true
        enablePublishing:
          type: boolean
          description:
            "Determines if the documentList has publishing turned on or off. If
            the documentList has a supportsPublishing value of true, then the
            enablePublishing value will be honored.\r

            If enablePublishing is true, then a document draft will
            be created for a document create or update operation. A document
            must then be published to become \"active\".\r

            If enablePublish is false, then all document changes are
            immediately \"active\".\r

            If enablePublish is true, then updating it to false will
            immediately publish all draft changes.\r

            If the documentList is based on a documentListType, then
            this value will be derived from the documentListType, but can be
            overridden on update."
          nullable: true
        supportsActiveDateRanges:
          type: boolean
          description:
            "Determines if the documentList will support ranges of dates that
            documents are considered 'active'. \r

            This field defaults to false and cannot be updated.\r

            If the documentList is based on a documentListType, then
            this value will be derived from the documentListType."
          nullable: true
        enableActiveDateRanges:
          type: boolean
          description:
            "Determines if the documentList has ActiveDateRanges turned on or
            off. If the documentList has a supportsActiveDateRanges value of
            true, then the enableActiveDateRanges value will be honored.\r

            If enableActiveDateRanges is true, then a document will
            only be returned if the request is made within the time frame the
            document has been set to be 'active'.\r

            If enableActiveDateRanges is false, then the properties
            can be set but will not be honored.\r

            If enableActiveDateRanges is true, then updating it to
            false will immediately start honoring the previously-set date
            range.\r

            If the documentList is based on a documentListType, then
            this value will be derived from the documentListType, but can be
            overridden on update."
          nullable: true
        views:
          type: array
          items:
            $ref: "#/components/schemas/View"
          description:
            "An array of one or more views, which each allow GET access to a
            projection of fields from the documents in the given documentList.
            \r

            If the documentList is based on a documentListType, then
            this value will be derived from the documentListType. Views can be
            added/removed to the documentList, even when\r

            the documentList derives from a documentListType."
          nullable: true
        usages:
          type: array
          items:
            type: string
          description:
            "An array of strings that describes to the Mozu platform the
            manner(s) in which a documentList can be used. The following values
            are valid:\r

            entitymanager -- the documentList should be visible in
            the Admin Content/Entities UI, which allows admin users to create,
            manage and publish documents within the documentList.\r

            sitebuilder -- the documentList should be visible in
            Site Builder. A documentList will display in the Site Builder
            Navigation Content List node, which supports document creation,
            management and web cms integration.\r

            If the documentList is based on a documentListType, then
            this value will be derived from the documentListType. Usages can be
            added or removed from the documentList, even when the documentList
            derives from a\r

            documentListType."
          nullable: true
        security:
          type: string
          description: tbd
          nullable: true
        scopeId:
          type: integer
          description:
            "Used in conjunction with the scopeType field to determine the
            exact context within which the documentList resides.\r

            Example: A documentList with a scopeId of 5 and
            scopeType of masterCatalog belongs to masterCatalog 5.\r

            If the documentList is based on a documentListType, then
            this value will be derived from the documentListType. This value is
            read-only after the documentList is created."
          format: int32
          nullable: true
        scopeType:
          type: string
          description:
            "The context level the documentList resides in. Valid values are
            \"tenant\", \"masterCatalog\", \"catalog\" and \"site\". This field
            is used in conjunction with the scopeId field\r

            to determine the exact context within which this
            documentList resides. This field is read-only after insert.\r

            If the documentList is based on a documentListType, then
            this value will be derived from the documentListType. This value is
            read-only after the documentList is created."
          nullable: true
        documentListType:
          type: string
          description:
            "The full name of the documentListType (name@namespace) that
            underlies the documentList. This value is only populated when the
            Mozu platform creates a documentList from a documentListType.\r

            A documentList that is directly created cannot specify a
            documentListType. This field is therefore read-only."
          nullable: true
        metadata:
          description:
            "Allows arbitrary data to be stored on the documentList.\r

            If the documentList is based on a documentListType, then
            this value will be derived from the documentListType, but can be
            overridden on update."
          nullable: true
      additionalProperties: false
      description:
        "A container for documents and related settings, such as supported
        documentTypes and publishing. \r

        A documentList belongs to a Mozu context, denoted by the
        documentList scopyeType and scopeId fields. \r

        Example: documentList A belongs to catalog 123, denoted by the
        documentList scopeType value of catalog and scopeId value of 123.\r

        A documentList can only be accessed if the API context is
        inclusive of the documentList's scope.\r

        Example: documentList A belongs to catalog 123. An API call with
        an API context of catalog 123 will be able to address documentList A.\r

        Example: site 456 uses catalog 123. An API call with an API
        context of site 456 will be able to address documentList A.\r

        Example: masterCatalog 789 is the parent of catalog 123. An API
        call with an API context of masterCatalog 789 will NOT be able to
        address documentList A.\r

        Documents can be created, queried, managed and published from
        within a documentList. A documentList may be directly created, or
        indirectly created from a documentListType."
    DocumentListCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/DocumentList"
          nullable: true
      additionalProperties: false
    DocumentListType:
      type: object
      properties:
        name:
          type: string
          description:
            "The name component of the documentListTypeFQN, name@namespace. The
            name must be unique within the namespace component and cannot be
            updated.\r

            Each documentList created from the documentListType will
            use this value."
          nullable: true
        namespace:
          type: string
          description: "The namespace component of the documentListTypeFQN,
            name@namespace. The issued dev account namespace must be used unless
            elevated privileges allow a blank namespace to be used. The
            namespace cannot be updated.\r

            Each documentList created from the documentListType will
            use this value."
          nullable: true
        documentListTypeFQN:
          type: string
          description:
            "The unique identifier of the documentListType, represented by
            name@namespace. The documentListTypeFQN must be provided when
            creating the documentListType, or the name and namespace fields must
            be provided.\r

            This field cannot be updated and each documentList
            created from the documentListType will use this value."
          nullable: true
        scopeType:
          type: string
          description:
            The context level at which this documentListType will create
            documentLists. Valid values are "tenant", "masterCatalog", "catalog"
            and "site". This field is read-only after insert.
          nullable: true
        installationPackage:
          type: string
          description: "Optionally, a documentListType can be defined in an
            installationPackage and then installed into a tenant. Installed
            documentListsTypes can only be updated via installation upgrades. \r

            Currently only internal Mozu platform components can
            create installations. This field is system-supplied and read-only."
          nullable: true
        version:
          type: string
          description:
            The version of the installationPackge installed. This field is
            read-only.
          nullable: true
        defaultDocuments:
          type: array
          items:
            $ref: "#/components/schemas/DocumentInstallation"
          description:
            The definition of any documents to create when a documentList is
            created.
          nullable: true
        documentTypeFQNs:
          type: array
          items:
            type: string
          description:
            "The full names (name@namespace) of the types of documents that can
            be created within the documentLists belonging to this
            documentListType. \r

            Each documentList created from the documentListType will
            use this value, but it can be overridden in an individual
            documentList."
          nullable: true
        supportsPublishing:
          type: boolean
          description:
            "Determines if documentLists belonging to this documentListType
            will support drafting and publishing documents. \r

            This field defaults to false and cannot be updated. Each
            documentList created from the documentListType will use this value."
        enablePublishing:
          type: boolean
          description:
            "Determines if documentLists belonging to this documentListType
            have publishing turned on or off. \r

            Each documentList created from the documentListType will
            use this value, but it can be overridden in an individual
            documentList."
          nullable: true
        supportsActiveDateRanges:
          type: boolean
          description:
            "Determines if documentLists belonging to this documentListType
            will support drafting and ActiveDateRanges documents. \r

            This field defaults to false and cannot be updated. Each
            documentList created from the documentListType will use this value."
        enableActiveDateRanges:
          type: boolean
          description:
            "Determines if documentLists belonging to this documentListType
            have ActiveDateRanges turned on or off. \r

            Each documentList created from the documentListType will
            use this value, but it can be overridden in an individual
            documentList."
          nullable: true
        views:
          type: array
          items:
            $ref: "#/components/schemas/View"
          description:
            "An array of one or more views, which each allow GET access to a
            projection of fields from the documents in the given documentList.
            \r

            Each documentList created from this documentListType
            will use this value, but it can be overridden in an individual
            documentList."
          nullable: true
        usages:
          type: array
          items:
            type: string
          description:
            "An array of strings that describes to the Mozu platform the
            manner(s) in which a documentList can be used. The following values
            are valid:\r

            entitymanager -- the documentList should be visible in
            the Admin Content/Entities screen, which allows admin users to
            create, manage and publish documents within the documentList.\r

            sitebuilder -- the documentList should be visible in
            Sitebuilder. A documentList will display in the Sitebuilder
            Navigation Content List node, which supports document creation,
            management and web cms integration.\r

            Each documentList created from this documentListType
            will use this value, but it can be overridden in an individual
            documentList."
          nullable: true
        metadata:
          description:
            "Allows arbitrary data to be stored on the documentListType. Each
            documentList created from this documentListType will use this value,
            \r

            but it can be overridden in an individual documentList."
          nullable: true
      additionalProperties: false
      description:
        "A documentListType instructs the Mozu platform to automatically
        create documentLists within a scopeType. Example: Creating a
        documentListType in tenant X with a \r

        scopeType of site tells the Mozu platform to immediately create
        a documentList in each site tenant X has. The Mozu platform will also
        automatically create a new \r

        documentList for every site subsequently provisioned in tenant
        X. Any defaultDocuments defined on the documentListType will be created
        within \r

        each documentList. Each documentList will be addressable via the
        documenetListType's fully qualified name and will, by default, use the
        documentListType's views, \r

        usages and metadata. Therefore the documentListType can be used
        to centrally manage each associated documentList."
    DocumentListTypeCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/DocumentListType"
          nullable: true
      additionalProperties: false
    DocumentType:
      type: object
      properties:
        name:
          type: string
          description:
            The name component of the documentType, name@namespace. The name
            must be unique within the namespace component and cannot be updated.
          nullable: true
        namespace:
          type: string
          description:
            The namespace component of the documentType, name@namespace. The
            issued dev account namespace must be used unless elevated privileges
            allow a blank namespace to be used. The namespace cannot be updated.
          nullable: true
        documentTypeFQN:
          type: string
          description: The unique identifier of the documentType, represented by
            name@namespace. The documentTypeFQN must be provided when creating
            the documentType, or the name and namespace fields must be provided.
          nullable: true
        adminName:
          type: string
          description: The administrative name of the documentType.
          nullable: true
        installationPackage:
          type: string
          description: "Optionally, a documentType can be defined in an
            installationPackage and then installed into a tenant. Installed
            documentTypes can only be updated via installation upgrades. \r

            Currently only internal Mozu platform components can
            create installations. This field is system-supplied and read-only."
          nullable: true
        version:
          type: string
          description:
            The version of the installationPackge installed. This field is
            read-only.
          nullable: true
        metadata:
          description: Allows arbitrary data to be stored on the documentType.
          nullable: true
        properties:
          type: array
          items:
            $ref: "#/components/schemas/Property"
          description:
            An array of the schema elements that a document implementing this
            documentType will have.
          nullable: true
      additionalProperties: false
      description:
        The schema a document must implement and associated metadata. A
        documentType is created at a tenant scope and is therefore shared
        amongst all child contexts (masterCatalog, catalog, site).
    DocumentTypeCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/DocumentType"
          nullable: true
      additionalProperties: false
    Property:
      type: object
      properties:
        name:
          type: string
          description:
            "The name portion of the name/value pair stored on a document's
            properties field. The property name value must be unique within the
            properties defined on the documentType.\r

            This value cannot be updated after property creation."
          nullable: true
        isRequired:
          type: boolean
          description:
            True if the property must be present on the document. This value is
            false by default.
        isMultiValued:
          type: boolean
          description:
            True if the property value is an array, where each array value must
            conform to the propertyType. When false, the property value must
            directly conform to the propertyType. This value is false by
            default.
        propertyType:
          $ref: "#/components/schemas/PropertyType"
      additionalProperties: false
      description:
        A schema element describing a name/value pair that can be stored on
        a document's properties field, where the name is directly defined by the
        propertyName and the value is constrained by the propertyType.
    PropertyType:
      type: object
      properties:
        name:
          type: string
          description:
            The name component of the propertyType, name@namespace. The name
            must be unique within the namespace component and cannot be updated.
          nullable: true
        namespace:
          type: string
          description:
            The namespace component of the propertyType, name@namespace. The
            issued dev account namespace must be used unless elevated privileges
            allow a blank namespace to be used. The namespace cannot be updated.
          nullable: true
        propertyTypeFQN:
          type: string
          description: The unique identifier of the propertyTYpe, represented by
            name@namespace. The propertyTypeFQN must be provided when creating
            the propertyType, or the name and namespace fields must be provided.
          nullable: true
        adminName:
          type: string
          description: The administrative name of the propertyType.
          nullable: true
        installationPackage:
          type: string
          description: "Optionally, a propertyType can be defined in an
            installationPackage and then installed into a tenant. Installed
            propertyTypes can only be updated via installation upgrades. \r

            Currently only internal Mozu platform components can
            create installations. This field is system-supplied and read-only."
          nullable: true
        version:
          type: string
          description:
            The version of the installationPackge installed. This field is
            read-only.
          nullable: true
        dataType:
          type: string
          description:
            "The underlying value type that can be held in the document's
            property value. Valid values are\r

            string\r

            number\r

            boolean\r

            datetime\r

            json\r

            The dataType is analogous to an intrinsic value type in
            object oriented programming, or to a column data type in relational
            database terminology."
          nullable: true
        isQueryable:
          type: boolean
          description: tbd
          nullable: true
        isSortable:
          type: boolean
          description: tbd
          nullable: true
        isAggregatable:
          type: boolean
          description: tbd
          nullable: true
      additionalProperties: false
      description: "The schema a document property value must implement. A
        propertyType is created at a tenant scope and is therefore shared
        amongst all child contexts (masterCatalog, catalog, site).\r

        A propertyType is analogous to the type argument of a class
        property in object oriented programming. \r

        A propertyType's dataType field is analogous to an intrinsic
        value type in object oriented programming, or to a column data type in
        relational database terminology."
    PropertyTypeCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/PropertyType"
          nullable: true
      additionalProperties: false
    PublishSetSummary:
      type: object
      properties:
        publishSetCode:
          type: string
          description: the code of the associated publish set
          nullable: true
        count:
          type: integer
          description: the count of documents in the associated publish set
          format: int32
      additionalProperties: false
      description: Summary information of documents in a publishing set
    PublishSetSummaryPagedCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/PublishSetSummary"
          nullable: true
      additionalProperties: false
    View:
      type: object
      properties:
        name:
          type: string
          description:
            A view is addressed via its name, which is unique within the
            documentList or documentListType in which it is defined.
          nullable: true
        usages:
          type: array
          items:
            type: string
          description: tbd
          nullable: true
        metadata:
          description: The metadata field allows arbitrary data to be stored on the view.
          nullable: true
        isVisibleInStorefront:
          type: boolean
          description:
            "The isVisibleInStorefront field indicates whether documents in the
            view can be accessed from the Mozu storefront application. If true,
            the storefront application and storefront client application
            (javascript tier) \r

            can GET documents from the view."
          nullable: true
        filter:
          type: string
          description:
            "Filter criteria to apply automatically when documents from this
            view are accessed, using the standard Mozu filter syntax. Only
            documents matching the filter criteria will be returned. \r

            Any filter provided by an operation is combined with the
            view filter."
          nullable: true
        includeInactiveMode:
          type: string
          description:
            "If view documents are requested with includeInactive=true, then
            this controls which documents return. If includeInactive is not
            provided or set to false, then only active documents return.\r

            If not set, or set to \"all\", then all documents
            return.\r

            If set to \"active\", then only documents within the
            active date range and documents with no active date range are
            returned.\r

            If set to \"scheduled\", then only documents with an
            active date range in the future are returned.\r

            If set to \"activeOrScheduled\", then only documents
            that are active or documents with an active date range in the future
            are returned.\r

            If set to \"ended\", then only documents with an active
            date range in the past are returned."
          nullable: true
        isAdminDefault:
          type: boolean
          nullable: true
        fields:
          type: array
          items:
            $ref: "#/components/schemas/ViewField"
          description:
            Designation of which document fields are returned (projection) when
            GETing documents from the view.
          nullable: true
      additionalProperties: false
      description:
        "A view provides GET access to documents within the documentList
        the view belongs to. The view can designate which document fields are
        returned (projection) and\r

        a security model for providing GET access independent of the
        documentList's security model."
    ViewField:
      type: object
      properties:
        name:
          type: string
          description:
            "The name of the field projected into the view document, meaning
            the name given to the target field after it is projected.\r

            The name must be unique within the list of viewFields
            provided in the view."
          nullable: true
        target:
          type: string
          description:
            "Specifies the document field to project. First-class fields will
            be returned on the document, but can be projected into the view
            properties. \r

            Valid first-class fields include name, id,
            documentTypeFqn, listFqn and publishState. Dynamic fields within the
            properties field can be projected by prefixing the target string
            with \"properties.\"\r

            Example: \"properties.property1\". If a property is an
            object, then dot notation can be used to walk to particular
            subelements. Example: \"properties.property1.subProperty1\"\r

            Individual array elements can be selected as well.
            Example:
            \"properties.property1.subProperty1.subSubArray[2].propertyOnArrayI\
            tem\"\r

            Any target miss will result in a null value returning
            for the projected field."
          nullable: true
      additionalProperties: false
      description: The projection of an individual field in a view.
    ContentDocument:
      type: object
      properties:
        contentLength:
          type: integer
          format: int64
        contentMimeType:
          type: string
          nullable: true
        contentUpdateDate:
          type: string
          format: date-time
          nullable: true
        documentListName:
          type: string
          nullable: true
        documentType:
          type: string
          nullable: true
        extension:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        insertDate:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          nullable: true
        properties:
          type: array
          items:
            $ref: "#/components/schemas/PropertyValue"
          nullable: true
        publishState:
          type: string
          nullable: true
        updateDate:
          type: string
          format: date-time
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        publishSetCode:
          type: string
          nullable: true
      additionalProperties: false
    ContentDocumentCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ContentDocument"
          nullable: true
      additionalProperties: false
    PropertyValue:
      type: object
      properties:
        propertyType:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    ContentActiveDateRange:
      type: object
      properties:
        startDate:
          type: string
          description: The beginning of the active date range of this document
          format: date-time
          nullable: true
        endDate:
          type: string
          description: The end of the active date range for this document
          format: date-time
          nullable: true
      additionalProperties: false
    ContentFacet:
      type: object
      properties:
        name:
          type: string
          nullable: true
        count:
          type: integer
          format: int32
      additionalProperties: false
    AccountBase:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the account, also known as a customer number.
          format: int32
        customerSet:
          type: string
          nullable: true
        commerceSummary:
          $ref: "#/components/schemas/CommerceSummary"
        contacts:
          type: array
          items:
            $ref: "#/components/schemas/CustomerContact"
          description:
            List of contacts for this account. A customer account can have
            multiple contacts for billing and shipping addresses.
          nullable: true
        companyOrOrganization:
          type: string
          description: The company or organization name for an account.
          nullable: true
        notes:
          type: array
          items:
            $ref: "#/components/schemas/CustomerNote"
          description:
            "List of notes for the account. Merchants use these internal notes,
            for example, to make a note of a customer's interests or complaints.
            \r

            Notes are available only from the merchant's view,
            customers cannot view these notes."
          nullable: true
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/CustomerAttribute"
          description: List of attributes for the account.
          nullable: true
        segments:
          type: array
          items:
            $ref: "#/components/schemas/CustomerCustomerSegment"
          description:
            "List of segments assigned to account to indicate. Merchants create
            segments, for example, to manage discounts or assign VIP status. \r

            Then they assign the account to the segment. An account
            can belong to several segments or none at all."
          nullable: true
        taxExempt:
          type: boolean
        taxId:
          type: string
          nullable: true
        externalId:
          type: string
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        customerSinceDate:
          type: string
          format: date-time
          nullable: true
        accountType:
          type: string
          nullable: true
      additionalProperties: false
      description:
        "Customer account. Customers provide contact information, view
        order history, and set email preferences on their account. \r

        Merchants can edit accounts to add internal notes or assign them
        to segments."
    AccountPasswordInfo:
      type: object
      properties:
        accountId:
          type: integer
          description: The Id of the Account which this password info applies
          format: int32
        userId:
          type: string
          description: If the account has multiple users, provide the Id of a specific user
          nullable: true
        unlockAccount:
          type: boolean
          description: Indicates to unlock the Account
          nullable: true
        passwordInfo:
          $ref: "#/components/schemas/CustomerPasswordInfo"
      additionalProperties: false
      description: Password information for an Account
    AccountPasswordInfoCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/AccountPasswordInfo"
          nullable: true
      additionalProperties: false
    AddressValidationRequest:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
      additionalProperties: false
      description: Address Validation Request
    AddressValidationResponse:
      type: object
      properties:
        addressCandidates:
          type: array
          items:
            $ref: "#/components/schemas/CommerceRuntimeAddress"
          description: Address Candidates
          nullable: true
      additionalProperties: false
      description: Address Validation Response
    B2BAccount:
      type: object
      allOf:
        - $ref: "#/components/schemas/AccountBase"
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/B2BUser"
          nullable: true
        isActive:
          type: boolean
          nullable: true
        priceList:
          type: string
          nullable: true
      additionalProperties: false
      description:
        "Customer account. Customers provide contact information, view
        order history, and set email preferences on their account. \r

        Merchants can edit accounts to add internal notes or assign them
        to segments."
    B2BAccountCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/B2BAccount"
          nullable: true
      additionalProperties: false
      description: Collection of all the B2B Accounts returned as a whole. A
        collection is not paged.
    B2BUser:
      type: object
      properties:
        emailAddress:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        localeCode:
          type: string
          nullable: true
        userId:
          type: string
          description:
            Unique identifier of the user who is currently logged in. This is
            null if the user is anonymous (not logged in).  Unicode data with a
            maximum length of 55 characters.
          nullable: true
        roles:
          type: array
          items:
            $ref: "#/components/schemas/UserRole"
          nullable: true
        isLocked:
          type: boolean
        isActive:
          type: boolean
        isRemoved:
          type: boolean
        acceptsMarketing:
          type: boolean
          description:
            If true, the customer prefers to receive marketing material such as
            newsletters or email offers.
        hasExternalPassword:
          type: boolean
          description: Indicates if an external password is set on this account
      additionalProperties: false
      description:
        "Customer account. Customers provide contact information, view
        order history, and set email preferences on their account. \r

        Merchants can edit accounts to add internal notes or assign them
        to segments."
    B2BUserAndAuthInfo:
      type: object
      properties:
        b2BUser:
          $ref: "#/components/schemas/B2BUser"
        externalPassword:
          type: string
          nullable: true
        isImport:
          type: boolean
      additionalProperties: false
    B2BUserCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/B2BUser"
          nullable: true
      additionalProperties: false
      description: Collection of users in a B2B account.
    Card:
      type: object
      properties:
        id:
          type: string
          description: Card ID from Payment Service
          nullable: true
        nameOnCard:
          type: string
          nullable: true
        cardType:
          type: string
          nullable: true
        expireMonth:
          type: integer
          format: int32
          nullable: true
        expireYear:
          type: integer
          format: int32
          nullable: true
        cardNumberPart:
          type: string
          nullable: true
        contactId:
          type: integer
          format: int32
        isDefaultPayMethod:
          type: boolean
      additionalProperties: false
    CardCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Card"
          nullable: true
      additionalProperties: false
    ChangePasswordResult:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        succeeded:
          type: boolean
        errorMessage:
          type: string
          nullable: true
      additionalProperties: false
    ChangePasswordResultCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ChangePasswordResult"
          nullable: true
      additionalProperties: false
    CommerceSummary:
      type: object
      properties:
        totalOrderAmount:
          $ref: "#/components/schemas/CurrencyAmount"
        orderCount:
          type: integer
          description: Number of orders listed in the order history of a customer account.
          format: int32
        lastOrderDate:
          type: string
          description: When the last order was placed.
          format: date-time
          nullable: true
        wishlistCount:
          type: integer
          description:
            Number of wishlists listed in the wishlist count of a customer
            account
          format: int32
        visitsCount:
          type: integer
          description: Number of visits for this customer across the entire tenant.
          format: int32
      additionalProperties: false
      description:
        Commerce (orders and wishlists) on a customer account which lists
        all the orders the customer has made with the order date, order amount,
        and status. Includes cancellations and returns.  Also includes wishlist
        information.
    ContactType:
      type: object
      properties:
        name:
          type: string
          nullable: true
        isPrimary:
          type: boolean
      additionalProperties: false
    Credit:
      type: object
      properties:
        code:
          type: string
          description: "Unique number identifier representing this credit.\r

            Number may be generated or set by the Tenant\r

            Number is unique within the Tenant context.\r

            ReadOnly after credit creation"
          nullable: true
        activationDate:
          type: string
          description:
            "Date the credit was activated.  Null if card is not active.\r

            Credits must be activated before they can be used.\r

            ReadOnly after activation"
          format: date-time
          nullable: true
        creditType:
          type: string
          description: "Type of Credit.\r

            Mozu.Customer.Contracts.Credit.Credit.CreditTypeConst\r

            Required.\r

            ReadOnly after credit creation"
          nullable: true
        customCreditType:
          type: string
          description: "Name of custom credit type\r

            Optional."
          nullable: true
        currencyCode:
          type: string
          description: Currency Code
          nullable: true
        initialBalance:
          type: number
          description: "Balance assigned when credit was initially created.\r

            May be zero and updated later.\r

            ReadOnly after intial credit creation"
          format: double
          nullable: true
        currentBalance:
          type: number
          description: "Do we want to track this here?\r

            Current Balance\r

            ReadOnly"
          format: double
          nullable: true
        expirationDate:
          type: string
          description: "Date after which this credit is no longer valid\r

            Optional\r

            Defaults to 365 days"
          format: date-time
          nullable: true
        customerId:
          type: integer
          description: "Id of the N:Mozu.Customer\r

            that this credit is assigned to.\r

            Optional."
          format: int32
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        creditTypeId:
          type: integer
          format: int32
      additionalProperties: false
      description: Represetation of a store credit or gift card.
    CreditAuditEntry:
      type: object
      properties:
        activityType:
          type: string
          description: Mozu.Customer.Contracts.Credit.CreditAuditEntry.CreditAuditActivityType
          nullable: true
        details:
          type: string
          description: Detials of what was done
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        activityTypeId:
          type: integer
          format: int32
      additionalProperties: false
      description: "Log entry for any change made to a Credit.\r

        \r

        The system will generate all entries.  Contract is for display
        only.\r

        All values are ReadOnly."
    CreditAuditEntryCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CreditAuditEntry"
          nullable: true
      additionalProperties: false
    CreditCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Credit"
          nullable: true
      additionalProperties: false
    CreditTransaction:
      type: object
      properties:
        id:
          type: integer
          description: "Id unique within the tenant\r

            ReadOnly"
          format: int32
          nullable: true
        transactionType:
          type: string
          description:
            "Mozu.Customer.Contracts.Credit.CreditTransaction.CreditTransactio\
            nType\r

            \            Requried"
          nullable: true
        comments:
          type: string
          description:
            Comments about the transaction.  Depending on the user interface,
            these comments may be readable by authorized users or customers.
          nullable: true
        impactAmount:
          type: number
          description: "Amount to apply to Credit Balance\r

            Required"
          format: double
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        orderId:
          type: string
          nullable: true
        data:
          description: Custom data for credit transactions
          nullable: true
      additionalProperties: false
      description: Credit Transactions are used to make adjustments to a Credit Balance
    CreditTransactionCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CreditTransaction"
          nullable: true
      additionalProperties: false
    CurrencyAmount:
      type: object
      properties:
        currencyCode:
          type: string
          description:
            Currency code for the amount of the order. Currently, only "USD" is
            supported.
          nullable: true
        amount:
          type: number
          description:
            Total amount of the order. Currently, only US dollar amounts are
            supported.
          format: double
      additionalProperties: false
      description: The currency code and amount of an order listed in the order
        history of a customer account. Currently, only USD is supported.
    CustomerAccount:
      type: object
      allOf:
        - $ref: "#/components/schemas/AccountBase"
      properties:
        emailAddress:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        localeCode:
          type: string
          nullable: true
        userId:
          type: string
          description:
            Unique identifier of the user who is currently logged in. This is
            null if the user is anonymous (not logged in).  Unicode data with a
            maximum length of 55 characters.
          nullable: true
        isAnonymous:
          type: boolean
        isLocked:
          type: boolean
        isActive:
          type: boolean
        acceptsMarketing:
          type: boolean
          description:
            If true, the customer prefers to receive marketing material such as
            newsletters or email offers.
        hasExternalPassword:
          type: boolean
          description: Indicates if an external password is set on this account
      additionalProperties: false
      description:
        "Customer account. Customers provide contact information, view
        order history, and set email preferences on their account. \r

        Merchants can edit accounts to add internal notes or assign them
        to segments."
    CustomerAccountAndAuthInfo:
      type: object
      properties:
        account:
          $ref: "#/components/schemas/CustomerAccount"
        password:
          type: string
          nullable: true
        externalPassword:
          type: string
          nullable: true
        isImport:
          type: boolean
      additionalProperties: false
    CustomerAccountCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CustomerAccount"
          nullable: true
      additionalProperties: false
      description:
        Collection of all the merchant's customers returned as a whole. A
        collection is not paged.
    CustomerAttribute:
      type: object
      properties:
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        fullyQualifiedName:
          type: string
          nullable: true
        attributeDefinitionId:
          type: integer
          format: int32
          nullable: true
        values:
          type: array
          items: {}
          nullable: true
      additionalProperties: false
    CustomerAttributeCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CustomerAttribute"
          nullable: true
      additionalProperties: false
      description: Collection of notes added to a customer account returned as a
        whole. A collection is not paged.
    CustomerAuditEntry:
      type: object
      properties:
        customerAccountId:
          type: integer
          description: Customer associated with this entry
          format: int32
        customerAuditEntryId:
          type: integer
          description: Id of this entry
          format: int32
        entryDate:
          type: string
          description: Date of the Entry
          format: date-time
        entryUser:
          type: string
          description: User ID associated with this Entry
          nullable: true
        application:
          type: string
          description: Applicattion associated with this entry
          nullable: true
        site:
          type: string
          description: Site associated wit this entry
          nullable: true
        description:
          type: string
          description: Description of the change (UI Displayable)
          nullable: true
        fieldPath:
          type: string
          description: Path of the field value being changed (e.g.
            /Customer/Contacts/1/FirstName)
          nullable: true
        oldValue:
          type: string
          description: Original value before this event
          nullable: true
        newValue:
          type: string
          description: New Value after this event
          nullable: true
      additionalProperties: false
    CustomerAuditEntryCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CustomerAuditEntry"
          nullable: true
      additionalProperties: false
    CustomerAuthTicket:
      type: object
      properties:
        customerAccount:
          $ref: "#/components/schemas/CustomerAccount"
        accessToken:
          type: string
          nullable: true
        accessTokenExpiration:
          type: string
          format: date-time
        refreshToken:
          type: string
          nullable: true
        refreshTokenExpiration:
          type: string
          format: date-time
        userId:
          type: string
          nullable: true
        jwtAccessToken:
          type: string
          nullable: true
      additionalProperties: false
    CustomerContact:
      type: object
      properties:
        accountId:
          type: integer
          format: int32
        types:
          type: array
          items:
            $ref: "#/components/schemas/ContactType"
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        faxNumber:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
          nullable: true
        email:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        middleNameOrInitial:
          type: string
          nullable: true
        lastNameOrSurname:
          type: string
          nullable: true
        companyOrOrganization:
          type: string
          nullable: true
        phoneNumbers:
          $ref: "#/components/schemas/CommerceRuntimePhone"
        address:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
      additionalProperties: false
      description:
        CustomerContact information for a customer account including the
        name, company, phone numbers, email addresses, and billing and shipping
        addresses (if supplied).
    CustomerContactCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CustomerContact"
          nullable: true
      additionalProperties: false
      description: Collection of contacts returned as a whole.
    CustomerLoginInfo:
      type: object
      properties:
        emailAddress:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        externalPassword:
          type: string
          nullable: true
        isImport:
          type: boolean
          nullable: true
      additionalProperties: false
    CustomerNote:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the note.
          format: int32
        content:
          type: string
          description: Content of the note that the merchant added.
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description:
        Note added to the customer account. Merchants can add internal
        notes, for example, to keep track of a customer's interests or
        complaints.
    CustomerNoteCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CustomerNote"
          nullable: true
      additionalProperties: false
      description: Collection of notes added to a customer account returned as a
        whole. A collection is not paged.
    CustomerPurchaseOrderAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
        accountId:
          type: integer
          format: int32
        isEnabled:
          type: boolean
        creditLimit:
          type: number
          format: double
        availableBalance:
          type: number
          format: double
        totalAvailableBalance:
          type: number
          format: double
        overdraftAllowance:
          type: number
          format: double
          nullable: true
        overdraftAllowanceType:
          type: string
          description:
            Indicates type of overdraft. Possible values are "Percent" and
            "Amount"
          nullable: true
        customerPurchaseOrderPaymentTerms:
          type: array
          items:
            $ref: "#/components/schemas/CustomerPurchaseOrderPaymentTerm"
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    CustomerPurchaseOrderAccountCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CustomerPurchaseOrderAccount"
          nullable: true
      additionalProperties: false
    CustomerPurchaseOrderPaymentTerm:
      type: object
      properties:
        siteId:
          type: integer
          format: int32
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    CustomerSegmentCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CustomerCustomerSegment"
          nullable: true
      additionalProperties: false
      description:
        Collection of customer segements returned as a whole. A collection
        is not paged.
    CustomerSet:
      type: object
      properties:
        code:
          type: string
          description: Unique identifier of the customer segment.
          nullable: true
        name:
          type: string
          description: Name of the customer segment.
          nullable: true
        description:
          type: string
          description: Description of the customer segment.
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        sites:
          type: array
          items:
            $ref: "#/components/schemas/CustomerSetSite"
          nullable: true
        isDefault:
          type: boolean
        aggregateInfo:
          $ref: "#/components/schemas/CustomerSetAggregateInfo"
      additionalProperties: false
      description: A customer segment.
    CustomerSetAggregateInfo:
      type: object
      properties:
        customerCount:
          type: integer
          format: int32
      additionalProperties: false
    CustomerSetCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CustomerSet"
          nullable: true
      additionalProperties: false
    CustomerSetSite:
      type: object
      properties:
        siteId:
          type: integer
          format: int32
        customerSetCode:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    CustomerUserAuthInfo:
      type: object
      properties:
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    InStockNotificationSubscription:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          format: int32
          nullable: true
        email:
          type: string
          description: Email.  E-mail or CustomerId are required.
          nullable: true
        customerId:
          type: integer
          description: "Id of the N:Mozu.Customer\r

            that this subscription is assigned to.\r

            Optional.  E-mail or CustomerId are required."
          format: int32
          nullable: true
        productCode:
          type: string
          description: Product Code
          nullable: true
        locationCode:
          type: string
          description: Location Code
          nullable: true
        userId:
          type: string
          description: User Id for multi-user b2b accounts
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Inventory in-stock notification subscription.  Notification
        sender/processor view.  Generally for internal consumption only.
    InStockNotificationSubscriptionCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/InStockNotificationSubscription"
          nullable: true
      additionalProperties: false
      description: Collection of InStockNotificationSubscriptions
    LoginState:
      type: object
      properties:
        isPasswordChangeRequired:
          type: boolean
        lastPasswordChangeOn:
          type: string
          format: date-time
          nullable: true
        isLocked:
          type: boolean
        lastLockedOn:
          type: string
          format: date-time
          nullable: true
        failedLoginAttemptCount:
          type: integer
          format: int32
        remainingLoginAttempts:
          type: integer
          format: int32
        firstFailedLoginAttemptOn:
          type: string
          format: date-time
          nullable: true
        lastLoginOn:
          type: string
          format: date-time
          nullable: true
        createdOn:
          type: string
          format: date-time
          nullable: true
        updatedOn:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    PurchaseOrderTransaction:
      type: object
      properties:
        customerPurchaseOrderAccountId:
          type: integer
          description: Unique identifier for Customer purchase order account
          format: int32
        externalId:
          type: string
          nullable: true
        siteId:
          type: integer
          description: Site Id associated with transaction log
          format: int32
        tenantId:
          type: integer
          description: Tenant Id associated with transaction log
          format: int32
        transactionDate:
          type: string
          description: Date when the transaction was made on a purchase order account
          format: date-time
        orderId:
          type: string
          description: Unique identifier for an order
          nullable: true
        purchaseOrderNumber:
          type: string
          description: Purchase order number
          nullable: true
        transactionAmount:
          type: number
          description: Transaction amount in transaction log for a purchase order account
          format: double
        creditLimit:
          type: number
          description: Maximum credit available on a purchase order account
          format: double
        additionalTransactionDetail:
          type: string
          description: Any additional transaction detail other than transaction description
          nullable: true
        availableBalance:
          type: number
          description: Current available balance on Purchase Order account
          format: double
        transactionTypeId:
          type: integer
          description: " Purchase Order transaction type\r

            1 - Line of Credit Change\r

            2 - Order Submitted\r

            3 - Payment Collected\r

            4 - Payment Voided\r

            5 - Payment Refund\r

            6 - Manual Adjustment"
          format: int32
        transactionDescription:
          type: string
          description: "Purchase Order transaction description\r

            Line of Credit Change\r

            Order Submitted\r

            Payment Collected\r

            Payment Voided\r

            Payment Refund\r

            Manual Adjustment"
          nullable: true
        author:
          type: string
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Customer purchase order transaction log
    PurchaseOrderTransactionCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/PurchaseOrderTransaction"
          nullable: true
      additionalProperties: false
      description:
        "Collection of purchase order transactions returned as a whole. \r

        A collection is not paged."
    Transaction:
      type: object
      properties:
        transactionId:
          type: string
          nullable: true
        visitId:
          type: string
          nullable: true
        transactionType:
          type: string
          nullable: true
        interactionType:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        date:
          type: string
          format: date-time
        currencyCode:
          type: string
          nullable: true
      additionalProperties: false
    Visit:
      type: object
      properties:
        id:
          type: string
          nullable: true
        accountId:
          type: integer
          format: int32
          nullable: true
        type:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/Transaction"
          nullable: true
        userId:
          type: string
          nullable: true
        webSiteId:
          type: integer
          format: int32
          nullable: true
        webReferrer:
          type: string
          nullable: true
        webSessionId:
          type: string
          nullable: true
        webUserAgent:
          type: string
          nullable: true
        browserLocationCode:
          type: string
          nullable: true
        locationCode:
          type: string
          nullable: true
      additionalProperties: false
    VisitCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Visit"
          nullable: true
      additionalProperties: false
    CustomerPasswordInfo:
      type: object
      properties:
        oldPassword:
          type: string
          description: Old password.
          nullable: true
        newPassword:
          type: string
          description: New password.
          nullable: true
        externalPassword:
          type: string
          description:
            The External Password, typically used for imports in conjunction
            with a custom action
          nullable: true
      additionalProperties: false
      description: Old password and new password.
    CustomerResetPasswordInfo:
      type: object
      properties:
        emailAddress:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        customerSetCode:
          type: string
          nullable: true
      additionalProperties: false
    CustomerUserRoleCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/UserRole"
          nullable: true
      additionalProperties: false
    CustomerCustomerSegment:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the customer segment.
          format: int32
        code:
          type: string
          description: Unique identifier of the customer segment.
          nullable: true
        name:
          type: string
          description: Name of the customer segment.
          nullable: true
        description:
          type: string
          description: Description of the customer segment.
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: A customer segment.
    EventCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/EventEvent"
          nullable: true
      additionalProperties: false
      description: Collection of events returned as a whole.
    EventDeliveryAttempt:
      type: object
      properties:
        deliveryStatus:
          type: string
          description: Status of the delivery process (EventDeliveryStatusType).
            System-supplied and read-only.
          nullable: true
        errorType:
          type: string
          description: Type of error that occurred, if the delivery was unsuccessful
          nullable: true
        httpStatus:
          $ref: "#/components/schemas/HttpStatus"
        message:
          type: string
          description: HTTP message returned by the remote endpoint
          nullable: true
        executionDate:
          type: string
          description: The date that the delivery was attempted
          format: date-time
          nullable: true
      additionalProperties: false
      description:
        The external/public Event entity used specifically in PULL/POLL
        event scenarios
    EventDeliverySummary:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for an event delivery summary
          format: int32
          nullable: true
        deliveryStatus:
          type: string
          description: Status of the delivery process (EventDeliveryStatusType)
          nullable: true
        eventSummary:
          $ref: "#/components/schemas/EventSummary"
        isRunning:
          type: boolean
          description:
            Indicates whether delivery of the event is currently being
            attempted at this moment in time
        lastExecutionDate:
          type: string
          description:
            The date that the delivery was last attempted (either successfully
            or not)
          format: date-time
        nextExecutionDate:
          type: string
          description:
            The date that the delivery will next be attempted, if the event has
            not been successfully delivered yet and there are still retries
            remaining
          format: date-time
        retriesRemaining:
          type: integer
          description: Number of delivery attempts remaining
          format: int32
          nullable: true
        createDate:
          type: string
          description: Create Date
          format: date-time
          nullable: true
        updateDate:
          type: string
          description: Update Date
          format: date-time
          nullable: true
        deliveryAttempts:
          type: array
          items:
            $ref: "#/components/schemas/EventDeliveryAttempt"
          description: Details about each attempted delivery of the event to the endpoint
          nullable: true
      additionalProperties: false
      description:
        The external/public Event entity used specifically in PULL/POLL
        event scenarios
    EventDeliverySummaryCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/EventDeliverySummary"
          nullable: true
      additionalProperties: false
      description: Collection of event deliver summaries
    EventExtendedProperty:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
      description: Event Extended Property
    EventSummary:
      type: object
      properties:
        eventId:
          type: string
          description:
            'Note: Remember in the contract version to convert this Guid to
            ToString("N") so the dashes are not present'
          nullable: true
        tenantId:
          type: integer
          description: Tenant Id
          format: int32
          nullable: true
        masterCatalogId:
          type: integer
          description: Master Catalog Id
          format: int32
          nullable: true
        catalogId:
          type: integer
          description: Catalog Id
          format: int32
          nullable: true
        siteId:
          type: integer
          description: Site Id
          format: int32
          nullable: true
        entityId:
          type: string
          description: Entity Id
          nullable: true
        topic:
          type: string
          description: Topic
          nullable: true
        extendedProperties:
          type: array
          items:
            $ref: "#/components/schemas/EventExtendedProperty"
          description: "Extended properties. Note: This is purposefully not a
            CollectionBase type wrapper so consumers start to get used to not
            having counts returned."
          nullable: true
        correlationId:
          type: string
          description: Correlation Id
          nullable: true
        createDate:
          type: string
          description: Create Date
          format: date-time
          nullable: true
      additionalProperties: false
      description:
        Event Summary is a trimmed version of an event that is utilized
        when displaying the event delivery (aka webhook, HTTP callback, HTTP
        POST) process history/details
    HttpStatus:
      type: object
      properties:
        code:
          type: integer
          description:
            The higher-level integer based HTTP Status Code returned by the
            remote endpoint
          format: int32
        name:
          type: string
          description: Friendly text the HTTP Status Code returned by the remote endpoint
          nullable: true
      additionalProperties: false
      description: Http Status
    PingEvent:
      type: object
      allOf:
        - $ref: "#/components/schemas/EventEvent"
      properties:
        endpoint:
          type: string
          description: The Endpoint to ping
          nullable: true
      additionalProperties: false
      description: Only utilized for testing
    SubscribingSite:
      type: object
      properties:
        siteId:
          type: integer
          description: The site identifier
          format: int32
          nullable: true
        isActive:
          type: boolean
          description: Is the subscription active at the site level?
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: A site that is associated with a subscription
    SubscribingTenant:
      type: object
      properties:
        subscribingContextLevelType:
          type: string
          description: "Type of Subscribing Context\r

            !:SubscribingContextLevelTypeConst\r

            Derived from state of the subscription.  If any
            Subscribing Sites exist (e.g. subscription is not at the Tenant
            Level, then the value will be Site)"
          nullable: true
        tenantId:
          type: integer
          description: The tenant identifier
          format: int32
          nullable: true
        isActive:
          type: boolean
          description: Is the subscription active at the tenant level?  If the
            subscription context is at the Tenant Level this property will be
            utilized over the SiteLevel
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        subscribingSites:
          type: array
          items:
            $ref: "#/components/schemas/SubscribingSite"
          description: Subscribing Sites
          nullable: true
      additionalProperties: false
      description: A tenant that is associated with a subscription
    Subscription:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for a subscription
          nullable: true
        appId:
          type: string
          description: Application identifier for subscription
          nullable: true
        apiVersion:
          type: string
          description: ApiVersion
          nullable: true
        topics:
          type: array
          items:
            type: string
          description: A list of topics that the subscription relates to
          nullable: true
        subscribingTenants:
          type: array
          items:
            $ref: "#/components/schemas/SubscribingTenant"
          description:
            A list of subscribers or subscribing tenants that the subscription
            relates to
          nullable: true
        notificationDeliveryType:
          type: string
          description:
            "Notification delivery type which is a string representation of an
            enumeration of values.  Example: Http (this is case insensitive, so
            http may also be passed in)"
          nullable: true
        contentType:
          type: string
          description:
            "Content type of the payload that will be delivered.  This is
            utilized in combination with the notification delivery
            type.  Example:  A HTTP Post (notification delivery type) is
            performed with a JSON representation of the event data (content
            type)."
          nullable: true
        endpoint:
          type: string
          description:
            The delivery endpoint that will receive notifications when events
            concerning the specified topics on the subscription occur.  The
            format of the endpoint may differ depending on the notification
            type.  For example, the endpoint may be a URL in some cases and an
            email address in others if multiple notification types are
            available.
          nullable: true
        confirmed:
          type: boolean
          description:
            A boolean value that indicates if the subscription endpoint has
            been confirmed
          nullable: true
        isActive:
          type: boolean
          description:
            A boolean value that indicates if the subscription is active.  The
            subscription may be inactive due to repeated downtimes at the
            endpoint.  If they subscription is deactivated the subscription
            owner or application will need to reactivate it for notifications to
            be delivered.
          nullable: true
        noCallback:
          type: boolean
          description:
            A boolean value that indicates if events should be delivered that
            resulted from an API call by the application.  If true, any events
            that occur as a result of a direct API call by the same application
            will not be delivered. This can prevent an endless loop in certain
            scenarios.
          nullable: true
        createDate:
          type: string
          description: When the entity was created. System-supplied and read-only.
          format: date-time
          nullable: true
        updateDate:
          type: string
          description: When the entity was updated. System-supplied and read-only.
          format: date-time
          nullable: true
        createBy:
          type: string
          description:
            Identifier of the user who created the entity. System-supplied and
            read-only.
          nullable: true
        updateBy:
          type: string
          description:
            Identifier of the user who updated the entity. System-supplied and
            read-only.
          nullable: true
      additionalProperties: false
      description:
        The subscription entity used specifically in PUSH event scenarios
        where a third-party desires to receive notification of events
    SubscriptionCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Subscription"
          nullable: true
      additionalProperties: false
      description: Collection of subscriptions returned as a whole.
    EventEvent:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for an event
          nullable: true
        tenantId:
          type: integer
          description: TenantId
          format: int32
          nullable: true
        masterCatalogId:
          type: integer
          description: MasterCatalogId
          format: int32
          nullable: true
        catalogId:
          type: integer
          description: CatalogId
          format: int32
          nullable: true
        siteId:
          type: integer
          description: SiteId
          format: int32
          nullable: true
        topic:
          type: string
          description: The topic of the event (i.e. product.created)
          nullable: true
        entityId:
          type: string
          description: The identifier / ID of the entity that changed (i.e. product code)
          nullable: true
        isTest:
          type: boolean
          description: Is this a test?
          nullable: true
        correlationId:
          type: string
          description:
            The Correlation Id of the original API request that caused this
            event to occur
          nullable: true
        extendedProperties:
          type: array
          items:
            $ref: "#/components/schemas/EventExtendedProperty"
          description: "Extended properties. Note: This is purposefully not a
            CollectionBase type wrapper so consumers start to get used to not
            having counts returned."
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description:
        The external/public Event entity used specifically in PULL/POLL
        event scenarios
    BackorderItem:
      title: BackorderItem
      type: object
      properties:
        backorderReleaseDate:
          type: string
          format: date-time
        lineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    BackorderItemUpdate:
      title: BackorderItemUpdate
      type: object
      properties:
        backorderReleaseDate:
          type: string
          format: date-time
        lineId:
          type: integer
          format: int32
    BackorderItemsRequest:
      title: BackorderItemsRequest
      type: object
      properties:
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/BackorderItem"
    BackorderItemsUpdateRequest:
      title: BackorderItemsUpdateRequest
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/BackorderItemUpdate"
    BackorderShipmentRequest:
      title: BackorderShipmentRequest
      type: object
      properties:
        backorderReleaseDate:
          type: string
          format: date-time
    BinShipmentProductQuantity:
      title: BinShipmentProductQuantity
      type: object
      properties:
        actualQuantity:
          type: integer
          format: int32
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        binName:
          type: string
        productCode:
          type: string
        shipmentNumber:
          type: integer
          format: int32
        variationProductCode:
          type: string
    BpmVariable:
      title: BpmVariable
      type: object
      properties:
        name:
          type: string
        oldValue:
          type: string
        updateDate:
          type: string
          format: date-time
        value:
          type: string
    CancelItem:
      title: CancelItem
      type: object
      properties:
        canceledReason:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileCanceledReason"
        lineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    CancelItemsRequest:
      title: CancelItemsRequest
      type: object
      properties:
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/CancelItem"
        sendNotifications:
          type: boolean
    CancelShipment:
      title: CancelShipment
      type: object
      properties:
        canceledReason:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileCanceledReason"
        sendNotifications:
          type: boolean
    ClosePickWave:
      title: ClosePickWave
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        createRecovery:
          type: boolean
        quantities:
          type: array
          items:
            $ref: "#/components/schemas/BinShipmentProductQuantity"
    CollectionModelOfDashboardResponse:
      title: CollectionModelOfDashboardResponse
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/DashboardResponse"
        _links:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileLink"
    CollectionModelOfEntityModelOfCustomerSurvey:
      title: CollectionModelOfEntityModelOfCustomerSurvey
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/EntityModelOfCustomerSurvey"
        _links:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileLink"
    CollectionModelOfEntityModelOfShipment:
      title: CollectionModelOfEntityModelOfShipment
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/EntityModelOfShipment"
        _links:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileLink"
    CollectionModelOfLocationSummary:
      title: CollectionModelOfLocationSummary
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/LocationSummary"
        _links:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileLink"
    CollectionModelOfManifest:
      title: CollectionModelOfManifest
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/Manifest"
        _links:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileLink"
    CollectionModelOfPickWave:
      title: CollectionModelOfPickWave
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/PickWave"
        _links:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileLink"
    CollectionModelOfShipment:
      title: CollectionModelOfShipment
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileShipment"
        _links:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileLink"
    CollectionModelOfTask:
      title: CollectionModelOfTask
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/Task"
        _links:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileLink"
    CreatePickWave:
      title: CreatePickWave
      type: object
      properties:
        allowEmptyWave:
          type: boolean
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        binRanges:
          type: array
          items:
            $ref: "#/components/schemas/PickWaveBinRange"
        fulfillmentLocationCode:
          type: string
        includeZeroInventory:
          type: boolean
        lockWave:
          type: boolean
        maxShipments:
          type: integer
          format: int32
        pickWaveType:
          type: string
          enum:
            - NORMAL
            - SINGLE
            - MULTIPLE
        products:
          type: array
          items:
            $ref: "#/components/schemas/PickWaveProductMatch"
        shipmentDateEnd:
          type: string
          format: date-time
        shipmentDateStart:
          type: string
          format: date-time
        shipmentType:
          type: string
          enum:
            - STH
            - BOPIS
        shippingOption:
          type: string
          enum:
            - STANDARD_ONLY
            - EXPRESS_ONLY
            - ALL
    Customer:
      title: Customer
      type: object
      properties:
        customerContact:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileContact"
        data:
          type: object
          properties: {}
        isDestinationCommercial:
          type: boolean
    CustomerSurvey:
      title: CustomerSurvey
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        entries:
          type: array
          items:
            $ref: "#/components/schemas/CustomerSurveyEntry"
        id:
          type: string
        shipmentNumber:
          type: integer
          format: int32
        siteId:
          type: integer
          format: int32
        tenantId:
          type: integer
          format: int32
    CustomerSurveyEntry:
      title: CustomerSurveyEntry
      type: object
      properties:
        answer:
          type: object
          properties: {}
        question:
          type: string
    DashboardResponse:
      title: DashboardResponse
      type: object
      properties:
        shipmentType:
          type: string
        shipmentTypeDisplayName:
          type: string
        steps:
          type: array
          items:
            $ref: "#/components/schemas/DashboardStep"
    DashboardStep:
      title: DashboardStep
      type: object
      properties:
        _links:
          $ref: "#/components/schemas/Links"
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        name:
          type: string
        total:
          type: integer
          format: int32
    EntityModelOfCustomerSurvey:
      title: EntityModelOfCustomerSurvey
      type: object
      properties:
        _links:
          $ref: "#/components/schemas/Links"
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        entries:
          type: array
          items:
            $ref: "#/components/schemas/CustomerSurveyEntry"
        id:
          type: string
        shipmentNumber:
          type: integer
          format: int32
        siteId:
          type: integer
          format: int32
        tenantId:
          type: integer
          format: int32
    EntityModelOfDashboardResponse:
      title: EntityModelOfDashboardResponse
      type: object
      properties:
        _links:
          $ref: "#/components/schemas/Links"
        shipmentType:
          type: string
        shipmentTypeDisplayName:
          type: string
        steps:
          type: array
          items:
            $ref: "#/components/schemas/DashboardStep"
    EntityModelOfManifest:
      title: EntityModelOfManifest
      type: object
      properties:
        _links:
          $ref: "#/components/schemas/Links"
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        carrierId:
          type: string
        internalId:
          type: string
        locationCode:
          type: string
        manifestId:
          type: string
        manifestUrl:
          type: string
        numberOfPackages:
          type: integer
          format: int32
        numberOfShipments:
          type: integer
          format: int32
        shipments:
          type: array
          items:
            $ref: "#/components/schemas/ManifestShipment"
        tenantId:
          type: integer
          format: int32
        userDisplayName:
          type: string
        userId:
          type: string
    EntityModelOfPickWave:
      title: EntityModelOfPickWave
      type: object
      properties:
        _links:
          $ref: "#/components/schemas/Links"
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        contents:
          type: array
          items:
            $ref: "#/components/schemas/PickWaveContent"
        fulfillmentLocationCode:
          type: string
        maxShipments:
          type: integer
          format: int32
        parentPickWaveNumber:
          type: integer
          format: int32
        pickType:
          type: string
          enum:
            - NORMAL
            - SINGLE
            - MULTIPLE
        pickWaveId:
          type: string
        pickWaveNumber:
          type: integer
          format: int32
        pickWaveStatus:
          type: string
          enum:
            - ERROR
            - PENDING
            - IN_PROGRESS
            - CLOSED
            - PENDING_RECOVERY
        recoveryPickWaveNumber:
          type: integer
          format: int32
        shipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
        shipmentType:
          type: string
        tenantId:
          type: integer
          format: int32
        userDisplayName:
          type: string
        userId:
          type: string
    EntityModelOfShipment:
      title: EntityModelOfShipment
      type: object
      properties:
        _links:
          $ref: "#/components/schemas/Links"
        acceptedDate:
          type: string
          format: date-time
        assignedLocationCode:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        canceledItems:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileCanceledItem"
        changeMessages:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileChangeMessage"
        childShipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
        currencyCode:
          type: string
        customer:
          $ref: "#/components/schemas/Customer"
        customerAccountId:
          type: integer
          format: int32
        customerAddressId:
          type: integer
          format: int32
        customerTaxId:
          type: string
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
        deliveryFee:
          type: number
        deliveryTax:
          type: number
        destination:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileDestination"
        dutyAdjustment:
          type: number
        dutyTotal:
          type: number
        email:
          type: string
        externalOrderId:
          type: string
        fulfillmentDate:
          type: string
          format: date-time
        fulfillmentLocationCode:
          type: string
        fulfillmentStatus:
          type: string
          enum:
            - NotFulfilled
            - Fulfilled
        handlingAdjustment:
          type: number
        handlingSubtotal:
          type: number
        handlingTaxAdjustment:
          type: number
        handlingTaxTotal:
          type: number
        handlingTotal:
          type: number
        isExpress:
          type: boolean
        isOptInForSms:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileItem"
        lineItemSubtotal:
          type: number
        lineItemTaxAdjustment:
          type: number
        lineItemTaxTotal:
          type: number
        lineItemTotal:
          type: number
        orderId:
          type: string
        orderNumber:
          type: integer
          format: int32
        orderSubmitDate:
          type: string
          format: date-time
        originalShipmentNumber:
          type: integer
          format: int32
        packages:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfilePackage"
        parentShipmentNumber:
          type: integer
          format: int32
        pickStatus:
          type: string
          enum:
            - AVAILABLE
            - IN_WAVE
            - PICKED
            - TRANSFER
            - COMPLETE
        pickType:
          type: string
          enum:
            - NORMAL
            - SINGLE
            - MULTIPLE
        pickWaveNumber:
          type: integer
          format: int32
        pickupInfo:
          type: object
          additionalProperties:
            type: object
            properties: {}
        readyForPickup:
          type: boolean
        readyForPickupDate:
          type: string
          format: date-time
        readyToCapture:
          type: boolean
        reassignedItems:
          type: array
          items:
            $ref: "#/components/schemas/ReassignItem"
        receivedDate:
          type: string
          format: date-time
        rejectedItems:
          type: array
          items:
            $ref: "#/components/schemas/RejectedItem"
        sentCustomerAtStoreNotification:
          type: boolean
        sentCustomerInTransitNotification:
          type: boolean
        shipmentAdjustment:
          type: number
        shipmentNumber:
          type: integer
          format: int32
        shipmentStatus:
          type: string
          enum:
            - READY
            - REASSIGNED
            - BACKORDER
            - CANCELED
            - FULFILLED
            - CUSTOMER_CARE
        shipmentStatusReason:
          $ref:
            "#/components/schemas/FulfillmentAPI-ProductionProfileShipmentStatusReaso\
            n"
        shipmentType:
          type: string
        shippingAdjustment:
          type: number
        shippingMethodCode:
          type: string
        shippingMethodName:
          type: string
        shippingSubtotal:
          type: number
        shippingTaxAdjustment:
          type: number
        shippingTaxTotal:
          type: number
        shippingTotal:
          type: number
        shopperNotes:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileShopperNotes"
        siteId:
          type: integer
          format: int32
        taxData:
          type: object
          properties: {}
        tenantId:
          type: integer
          format: int32
        total:
          type: number
        transferShipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
        transitTime:
          type: string
        userId:
          type: string
        workflowProcessContainerId:
          type: string
        workflowProcessId:
          type: string
        workflowState:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileWorkflowState"
    EntityModelOfWorkflowProcess:
      title: EntityModelOfWorkflowProcess
      type: object
      properties:
        _links:
          $ref: "#/components/schemas/Links"
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        containerAlias:
          type: string
        containerId:
          type: string
        id:
          type: string
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/TaskDefinition"
        variables:
          type: array
          items:
            $ref: "#/components/schemas/WorkflowProcessVariable"
        version:
          type: string
    FulfillmentField:
      title: FulfillmentField
      type: object
      properties:
        name:
          type: string
        required:
          type: boolean
        userEnteredValue:
          type: object
          properties: {}
    GiftCard:
      title: GiftCard
      type: object
      properties:
        activationDate:
          type: string
          format: date-time
        cardNumber:
          type: string
        code:
          type: string
        creditType:
          type: string
        creditValue:
          type: number
        currencyCode:
          type: string
        currentBalance:
          type: number
        customerId:
          type: integer
          format: int32
        expirationDate:
          type: string
          format: date-time
        initialBalance:
          type: number
    HandleOption:
      title: HandleOption
      type: object
      properties:
        blockAssignment:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileItem"
        reason:
          $ref: "#/components/schemas/TaskReason"
    LinkRelation:
      title: LinkRelation
      type: object
    Links:
      title: Links
      type: object
      properties:
        empty:
          type: boolean
    LocationSummary:
      title: LocationSummary
      type: object
      properties:
        currencyCode:
          type: string
        currentAmount:
          type: number
        currentItems:
          type: integer
          format: int32
        currentShipments:
          type: integer
          format: int32
        locationCode:
          type: string
        totalAmount:
          type: number
        totalItems:
          type: integer
          format: int32
        totalShipments:
          type: integer
          format: int32
    Manifest:
      title: Manifest
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        carrierId:
          type: string
        internalId:
          type: string
        locationCode:
          type: string
        manifestId:
          type: string
        manifestUrl:
          type: string
        numberOfPackages:
          type: integer
          format: int32
        numberOfShipments:
          type: integer
          format: int32
        shipments:
          type: array
          items:
            $ref: "#/components/schemas/ManifestShipment"
        tenantId:
          type: integer
          format: int32
        userDisplayName:
          type: string
        userId:
          type: string
    ManifestRequest:
      title: ManifestRequest
      type: object
      properties:
        carrierId:
          type: string
        includedShipments:
          type: array
          items:
            $ref: "#/components/schemas/ManifestRequestShipment"
        locationCode:
          type: string
    ManifestRequestShipment:
      title: ManifestRequestShipment
      type: object
      properties:
        integratorIds:
          type: array
          items:
            type: string
        shipmentNumber:
          type: integer
          format: int32
    ManifestShipment:
      title: ManifestShipment
      type: object
      properties:
        destination:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileDestination"
        externalOrderId:
          type: string
        fulfillmentLocationCode:
          type: string
        orderNumber:
          type: integer
          format: int32
        packages:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfilePackage"
        shipmentNumber:
          type: integer
          format: int32
        shipmentType:
          type: string
    PageMetadata:
      title: PageMetadata
      type: object
      properties:
        number:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
    PagedModelOfEntityModelOfShipment:
      title: PagedModelOfEntityModelOfShipment
      type: object
      properties:
        _embedded:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/EntityModelOfShipment"
        _links:
          $ref: "#/components/schemas/Links"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PagedModelOfEntityModelOfWorkflowProcess:
      title: PagedModelOfEntityModelOfWorkflowProcess
      type: object
      properties:
        _embedded:
          type: array
          items:
            $ref: "#/components/schemas/EntityModelOfWorkflowProcess"
        _links:
          $ref: "#/components/schemas/Links"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PickWave:
      title: PickWave
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        contents:
          type: array
          items:
            $ref: "#/components/schemas/PickWaveContent"
        fulfillmentLocationCode:
          type: string
        maxShipments:
          type: integer
          format: int32
        parentPickWaveNumber:
          type: integer
          format: int32
        pickType:
          type: string
          enum:
            - NORMAL
            - SINGLE
            - MULTIPLE
        pickWaveId:
          type: string
        pickWaveNumber:
          type: integer
          format: int32
        pickWaveStatus:
          type: string
          enum:
            - ERROR
            - PENDING
            - IN_PROGRESS
            - CLOSED
            - PENDING_RECOVERY
        recoveryPickWaveNumber:
          type: integer
          format: int32
        shipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
        shipmentType:
          type: string
        tenantId:
          type: integer
          format: int32
        userDisplayName:
          type: string
        userId:
          type: string
    PickWaveBinRange:
      title: PickWaveBinRange
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        endBinName:
          type: string
        startBinName:
          type: string
    PickWaveContent:
      title: PickWaveContent
      type: object
      properties:
        actualQuantity:
          type: integer
          format: int32
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        binId:
          type: integer
          format: int32
        binName:
          type: string
        contentId:
          type: string
        externalOrderId:
          type: string
        imageUrl:
          type: string
        itemLineId:
          type: integer
          format: int32
        name:
          type: string
        optionAttributeFQN:
          type: string
        orderNumber:
          type: integer
          format: int32
        partNumber:
          type: string
        productCode:
          type: string
        quantity:
          type: integer
          format: int32
        shipmentNumber:
          type: integer
          format: int32
        sku:
          type: string
        status:
          type: string
          enum:
            - IN_PROGRESS
            - PICKED
            - REMOVED
        upc:
          type: string
        variationProductCode:
          type: string
    PickWaveProductMatch:
      title: PickWaveProductMatch
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        identifier:
          type: string
          enum:
            - UPC
            - PRODUCT_CODE
        matchType:
          type: string
          enum:
            - EXACT
            - CONTAINS
            - STARTS_WITH
            - ENDS_WITH
        value:
          type: string
    PickupItemsRequest:
      title: PickupItemsRequest
      type: object
      properties:
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfilePickupItem"
    ReassignItem:
      title: ReassignItem
      type: object
      properties:
        blockAssignment:
          type: boolean
        fulfillmentLocationCode:
          type: string
        lineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        reassignedReason:
          $ref: "#/components/schemas/ReassignedReason"
    ReassignItemsRequest:
      title: ReassignItemsRequest
      type: object
      properties:
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/ReassignItem"
    ReassignShipment:
      title: ReassignShipment
      type: object
      properties:
        blockAssignment:
          type: boolean
        fulfillmentLocationCode:
          type: string
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/ReassignItem"
        reassignedReason:
          $ref: "#/components/schemas/ReassignedReason"
    ReassignedReason:
      title: ReassignedReason
      type: object
      properties:
        moreInfo:
          type: string
        reasonCode:
          type: string
    RejectItem:
      title: RejectItem
      type: object
      properties:
        blockAssignment:
          type: boolean
        lineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        rejectedReason:
          $ref: "#/components/schemas/RejectedReason"
    RejectItemsRequest:
      title: RejectItemsRequest
      type: object
      properties:
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/RejectItem"
    RejectShipment:
      title: RejectShipment
      type: object
      properties:
        blockAssignment:
          type: boolean
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/RejectItem"
        rejectedReason:
          $ref: "#/components/schemas/RejectedReason"
    RejectedItem:
      title: RejectedItem
      type: object
      properties:
        actualPrice:
          type: number
        allowsBackOrder:
          type: boolean
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        backorderReleaseDate:
          type: string
          format: date-time
        blockAssignment:
          type: boolean
        creditCurrencyCode:
          type: string
        creditValue:
          type: number
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
        duty:
          type: number
        expectedDeliveryDate:
          type: string
          format: date-time
        fulfillmentField:
          $ref: "#/components/schemas/FulfillmentField"
        giftCards:
          type: array
          items:
            $ref: "#/components/schemas/GiftCard"
        goodsType:
          type: string
          enum:
            - Physical
            - Digital
            - DigitalCredit
            - DigitalGiftCard
        handling:
          type: number
        handlingDiscount:
          type: number
        handlingTax:
          type: number
        imageUrl:
          type: string
        isTaxable:
          type: boolean
        itemDiscount:
          type: number
        itemTax:
          type: number
        lineId:
          type: integer
          format: int32
        lineItemCost:
          type: number
        manageStock:
          type: boolean
        name:
          type: string
        optionAttributeFQN:
          type: string
        options:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileProductOption"
        originalOrderItemId:
          type: string
        overridePrice:
          type: number
        parentId:
          type: string
        partNumber:
          type: string
        productCode:
          type: string
        quantity:
          type: integer
          format: int32
        readyForPickupQuantity:
          type: integer
          format: int32
        rejectedReason:
          $ref: "#/components/schemas/RejectedReason"
        services:
          type: array
          items:
            $ref: "#/components/schemas/Service"
        shipping:
          type: number
        shippingDiscount:
          type: number
        shippingTax:
          type: number
        sku:
          type: string
        taxData:
          type: object
          properties: {}
        taxableHandling:
          type: number
        taxableLineItemCost:
          type: number
        taxableShipping:
          type: number
        transferQuantity:
          type: integer
          format: int32
        trueTransferQuantity:
          type: integer
          format: int32
        unitPrice:
          type: number
        upc:
          type: string
        variationProductCode:
          type: string
        weight:
          type: number
        weightUnit:
          type: string
        weightedDutyAdjustment:
          type: number
        weightedHandlingAdjustment:
          type: number
        weightedHandlingTaxAdjustment:
          type: number
        weightedLineItemTaxAdjustment:
          type: number
        weightedShipmentAdjustment:
          type: number
        weightedShippingAdjustment:
          type: number
        weightedShippingTaxAdjustment:
          type: number
    RejectedReason:
      title: RejectedReason
      type: object
      properties:
        moreInfo:
          type: string
        reasonCode:
          type: string
    Service:
      title: Service
      type: object
      properties:
        fee:
          type: number
        serviceType:
          type: string
          enum:
            - Preparation
    ShipmentAttribute:
      title: ShipmentAttribute
      type: object
      properties:
        key:
          type: string
        value:
          type: object
          properties: {}
    Task:
      title: Task
      type: object
      properties:
        _links:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileLink"
        active:
          type: boolean
        completed:
          type: boolean
        completedDate:
          type: string
          format: date-time
        description:
          type: string
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileTaskInput"
        name:
          type: string
        skippable:
          type: boolean
        subject:
          type: string
        taskId:
          type: string
    TaskComplete:
      title: TaskComplete
      type: object
      properties:
        handleOption:
          $ref: "#/components/schemas/HandleOption"
        taskBody:
          type: object
          additionalProperties:
            type: object
            properties: {}
    TaskDefinition:
      title: TaskDefinition
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileTaskInput"
        name:
          type: string
        priority:
          type: integer
          format: int32
        skippable:
          type: boolean
        subject:
          type: string
    TaskReason:
      title: TaskReason
      type: object
      properties:
        moreInfo:
          type: string
        reasonCode:
          type: string
    TemplateVariable:
      title: TemplateVariable
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - ""
            - "?"
            - "&"
            - /
            - "#"
            - "*"
    TransferItem:
      title: TransferItem
      type: object
      properties:
        blockAssignment:
          type: boolean
        fulfillmentLocationCode:
          type: string
        lineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        transferredReason:
          $ref: "#/components/schemas/TransferredReason"
    TransferItemsRequest:
      title: TransferItemsRequest
      type: object
      properties:
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/TransferItem"
    TransferShipment:
      title: TransferShipment
      type: object
      properties:
        blockAssignment:
          type: boolean
        fulfillmentLocationCode:
          type: string
        isUserAction:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/TransferItem"
        transferredReason:
          $ref: "#/components/schemas/TransferredReason"
    TransferredReason:
      title: TransferredReason
      type: object
      properties:
        moreInfo:
          type: string
        reasonCode:
          type: string
    UriTemplate:
      title: UriTemplate
      type: object
      properties:
        variableNames:
          type: array
          items:
            type: string
        variables:
          type: array
          items:
            $ref: "#/components/schemas/TemplateVariable"
    WorkflowProcessVariable:
      title: WorkflowProcessVariable
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - STRING
            - INTEGER
            - NUMBER
            - BOOLEAN
            - OBJECT
            - LIST
            - UNKNOWN
    FulfillmentAPI-ProductionProfileAuditInfo:
      title: AuditInfo
      type: object
      properties:
        createBy:
          type: string
        createDate:
          type: string
          format: date-time
        updateBy:
          type: string
        updateDate:
          type: string
          format: date-time
    FulfillmentAPI-ProductionProfilePackage:
      title: Package
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        carrier:
          type: string
        fxcbDocumentsUrl:
          type: string
        fxcbPackNotificationId:
          type: string
        hasLabel:
          type: boolean
        integratorId:
          type: string
        labelFormat:
          type: string
        manifestId:
          type: string
        measurements:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfilePackageMeasurements"
        packageId:
          type: string
        packagingType:
          type: string
        returnCarrier:
          type: string
        returnTrackingNumbers:
          type: array
          items:
            type: string
        returnTrackings:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileTracking"
        shippingMethodCode:
          type: string
        shippingMethodName:
          type: string
        signatureRequired:
          type: boolean
        trackingNumbers:
          type: array
          items:
            type: string
        trackings:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileTracking"
    FulfillmentAPI-ProductionProfileAddress:
      title: Address
      type: object
      properties:
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        address4:
          type: string
        addressType:
          type: string
          enum:
            - Commercial
            - Residential
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        cityOrTown:
          type: string
        countryCode:
          type: string
        isValidated:
          type: boolean
        latitude:
          type: string
        longitude:
          type: string
        postalOrZipCode:
          type: string
        stateOrProvince:
          type: string
    FulfillmentAPI-ProductionProfileCanceledItem:
      title: CanceledItem
      type: object
      properties:
        actualPrice:
          type: number
        allowsBackOrder:
          type: boolean
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        backorderReleaseDate:
          type: string
          format: date-time
        blockAssignment:
          type: boolean
        canceledReason:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileCanceledReason"
        creditCurrencyCode:
          type: string
        creditValue:
          type: number
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
        duty:
          type: number
        expectedDeliveryDate:
          type: string
          format: date-time
        fulfillmentField:
          $ref: "#/components/schemas/FulfillmentField"
        giftCards:
          type: array
          items:
            $ref: "#/components/schemas/GiftCard"
        goodsType:
          type: string
          enum:
            - Physical
            - Digital
            - DigitalCredit
            - DigitalGiftCard
        handling:
          type: number
        handlingDiscount:
          type: number
        handlingTax:
          type: number
        imageUrl:
          type: string
        isTaxable:
          type: boolean
        itemDiscount:
          type: number
        itemTax:
          type: number
        lineId:
          type: integer
          format: int32
        lineItemCost:
          type: number
        manageStock:
          type: boolean
        name:
          type: string
        optionAttributeFQN:
          type: string
        options:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileProductOption"
        originalOrderItemId:
          type: string
        overridePrice:
          type: number
        parentId:
          type: string
        partNumber:
          type: string
        productCode:
          type: string
        quantity:
          type: integer
          format: int32
        readyForPickupQuantity:
          type: integer
          format: int32
        services:
          type: array
          items:
            $ref: "#/components/schemas/Service"
        shipping:
          type: number
        shippingDiscount:
          type: number
        shippingTax:
          type: number
        sku:
          type: string
        taxData:
          type: object
          properties: {}
        taxableHandling:
          type: number
        taxableLineItemCost:
          type: number
        taxableShipping:
          type: number
        transferQuantity:
          type: integer
          format: int32
        trueTransferQuantity:
          type: integer
          format: int32
        unitPrice:
          type: number
        upc:
          type: string
        variationProductCode:
          type: string
        weight:
          type: number
        weightUnit:
          type: string
        weightedDutyAdjustment:
          type: number
        weightedHandlingAdjustment:
          type: number
        weightedHandlingTaxAdjustment:
          type: number
        weightedLineItemTaxAdjustment:
          type: number
        weightedShipmentAdjustment:
          type: number
        weightedShippingAdjustment:
          type: number
        weightedShippingTaxAdjustment:
          type: number
    FulfillmentAPI-ProductionProfileCanceledReason:
      title: CanceledReason
      type: object
      properties:
        moreInfo:
          type: string
        reasonCode:
          type: string
    FulfillmentAPI-ProductionProfileChangeMessage:
      title: ChangeMessage
      type: object
      properties:
        amount:
          type: number
        appId:
          type: string
        appKey:
          type: string
        appName:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        changeMessageId:
          type: string
        correlationId:
          type: string
        createdDate:
          type: string
          format: date-time
        identifier:
          type: string
        message:
          type: string
        metadata:
          type: string
        newValue:
          type: string
        oldValue:
          type: string
        subject:
          type: string
        subjectType:
          type: string
        success:
          type: boolean
        userDisplayName:
          type: string
        userFirstName:
          type: string
        userId:
          type: string
        userLastName:
          type: string
        verb:
          type: string
    FulfillmentAPI-ProductionProfileContact:
      title: Contact
      type: object
      properties:
        address:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAddress"
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        companyOrOrganization:
          type: string
        email:
          type: string
        firstName:
          type: string
        fullName:
          type: string
        id:
          type: integer
          format: int32
        lastNameOrSurname:
          type: string
        middleNameOrInitial:
          type: string
        phoneNumbers:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfilePhone"
        shortFullName:
          type: string
    FulfillmentAPI-ProductionProfileDestination:
      title: Destination
      type: object
      properties:
        data:
          type: object
          properties: {}
        destinationContact:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileContact"
        isDestinationCommercial:
          type: boolean
        locationCode:
          type: string
    FulfillmentAPI-ProductionProfileLink:
      title: Link
      type: object
      properties:
        deprecation:
          type: string
        href:
          type: string
        hreflang:
          type: string
        media:
          type: string
        name:
          type: string
        profile:
          type: string
        rel:
          $ref: "#/components/schemas/LinkRelation"
        template:
          $ref: "#/components/schemas/UriTemplate"
        templated:
          type: boolean
        title:
          type: string
        type:
          type: string
    FulfillmentAPI-ProductionProfileMeasurement:
      title: Measurement
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        unit:
          type: string
        value:
          type: number
    FulfillmentAPI-ProductionProfilePackageMeasurements:
      title: PackageMeasurements
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        height:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileMeasurement"
        length:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileMeasurement"
        weight:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileMeasurement"
        width:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileMeasurement"
    FulfillmentAPI-ProductionProfilePhone:
      title: Phone
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        home:
          type: string
        mobile:
          type: string
        work:
          type: string
    FulfillmentAPI-ProductionProfilePickupItem:
      title: PickupItem
      type: object
      properties:
        lineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    FulfillmentAPI-ProductionProfileProductOption:
      title: ProductOption
      type: object
      properties:
        attributeFQN:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        dataType:
          type: string
        name:
          type: string
        shopperEnteredValue:
          type: object
          properties: {}
        stringValue:
          type: string
        value:
          type: object
          properties: {}
    FulfillmentAPI-ProductionProfileShipment:
      title: Shipment
      type: object
      properties:
        acceptedDate:
          type: string
          format: date-time
        assignedLocationCode:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        canceledItems:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileCanceledItem"
        changeMessages:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileChangeMessage"
        childShipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
        currencyCode:
          type: string
        customer:
          $ref: "#/components/schemas/Customer"
        customerAccountId:
          type: integer
          format: int32
        customerAddressId:
          type: integer
          format: int32
        customerTaxId:
          type: string
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
        deliveryFee:
          type: number
        deliveryTax:
          type: number
        destination:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileDestination"
        dutyAdjustment:
          type: number
        dutyTotal:
          type: number
        email:
          type: string
        externalOrderId:
          type: string
        fulfillmentDate:
          type: string
          format: date-time
        fulfillmentLocationCode:
          type: string
        fulfillmentStatus:
          type: string
          enum:
            - NotFulfilled
            - Fulfilled
        handlingAdjustment:
          type: number
        handlingSubtotal:
          type: number
        handlingTaxAdjustment:
          type: number
        handlingTaxTotal:
          type: number
        handlingTotal:
          type: number
        isExpress:
          type: boolean
        isOptInForSms:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileItem"
        lineItemSubtotal:
          type: number
        lineItemTaxAdjustment:
          type: number
        lineItemTaxTotal:
          type: number
        lineItemTotal:
          type: number
        orderId:
          type: string
        orderNumber:
          type: integer
          format: int32
        orderSubmitDate:
          type: string
          format: date-time
        originalShipmentNumber:
          type: integer
          format: int32
        packages:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfilePackage"
        parentShipmentNumber:
          type: integer
          format: int32
        pickStatus:
          type: string
          enum:
            - AVAILABLE
            - IN_WAVE
            - PICKED
            - TRANSFER
            - COMPLETE
        pickType:
          type: string
          enum:
            - NORMAL
            - SINGLE
            - MULTIPLE
        pickWaveNumber:
          type: integer
          format: int32
        pickupInfo:
          type: object
          additionalProperties:
            type: object
            properties: {}
        readyForPickup:
          type: boolean
        readyForPickupDate:
          type: string
          format: date-time
        readyToCapture:
          type: boolean
        reassignedItems:
          type: array
          items:
            $ref: "#/components/schemas/ReassignItem"
        receivedDate:
          type: string
          format: date-time
        rejectedItems:
          type: array
          items:
            $ref: "#/components/schemas/RejectedItem"
        sentCustomerAtStoreNotification:
          type: boolean
        sentCustomerInTransitNotification:
          type: boolean
        shipmentAdjustment:
          type: number
        shipmentNumber:
          type: integer
          format: int32
        shipmentStatus:
          type: string
          enum:
            - READY
            - REASSIGNED
            - BACKORDER
            - CANCELED
            - FULFILLED
            - CUSTOMER_CARE
        shipmentStatusReason:
          $ref:
            "#/components/schemas/FulfillmentAPI-ProductionProfileShipmentStatusReaso\
            n"
        shipmentType:
          type: string
        shippingAdjustment:
          type: number
        shippingMethodCode:
          type: string
        shippingMethodName:
          type: string
        shippingSubtotal:
          type: number
        shippingTaxAdjustment:
          type: number
        shippingTaxTotal:
          type: number
        shippingTotal:
          type: number
        shopperNotes:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileShopperNotes"
        siteId:
          type: integer
          format: int32
        taxData:
          type: object
          properties: {}
        tenantId:
          type: integer
          format: int32
        total:
          type: number
        transferShipmentNumbers:
          type: array
          items:
            type: integer
            format: int32
        transitTime:
          type: string
        userId:
          type: string
        workflowProcessContainerId:
          type: string
        workflowProcessId:
          type: string
        workflowState:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileWorkflowState"
    FulfillmentAPI-ProductionProfileShipmentStatusReason:
      title: ShipmentStatusReason
      type: object
      properties:
        moreInfo:
          type: string
        reasonCode:
          type: string
    FulfillmentAPI-ProductionProfileShopperNotes:
      title: ShopperNotes
      type: object
      properties:
        comments:
          type: string
        deliveryInstructions:
          type: string
        giftMessage:
          type: string
    FulfillmentAPI-ProductionProfileTaskInput:
      title: TaskInput
      type: object
      properties:
        helpMessage:
          type: string
        label:
          type: string
        maxLength:
          type: integer
          format: int32
        maximum:
          type: number
        minLength:
          type: integer
          format: int32
        minimum:
          type: number
        name:
          type: string
        options:
          type: array
          items:
            type: object
            properties: {}
        pattern:
          type: string
        required:
          type: boolean
        type:
          type: string
          enum:
            - STRING
            - INTEGER
            - NUMBER
            - BOOLEAN
            - OBJECT
            - LIST
            - UNKNOWN
    FulfillmentAPI-ProductionProfileTracking:
      title: Tracking
      type: object
      properties:
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        number:
          type: string
        url:
          type: string
    FulfillmentAPI-ProductionProfileWorkflowState:
      title: WorkflowState
      type: object
      properties:
        activeTaskName:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        completedDate:
          type: string
          format: date-time
        processInstanceId:
          type: string
        shipmentState:
          type: string
        taskList:
          type: array
          items:
            $ref: "#/components/schemas/Task"
        variables:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/BpmVariable"
    FulfillmentAPI-ProductionProfileItem:
      title: Item
      type: object
      properties:
        actualPrice:
          type: number
        allowsBackOrder:
          type: boolean
        attributes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        auditInfo:
          $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileAuditInfo"
        backorderReleaseDate:
          type: string
          format: date-time
        creditCurrencyCode:
          type: string
        creditValue:
          type: number
        data:
          type: object
          additionalProperties:
            type: object
            properties: {}
        duty:
          type: number
        expectedDeliveryDate:
          type: string
          format: date-time
        fulfillmentField:
          $ref: "#/components/schemas/FulfillmentField"
        giftCards:
          type: array
          items:
            $ref: "#/components/schemas/GiftCard"
        goodsType:
          type: string
          enum:
            - Physical
            - Digital
            - DigitalCredit
            - DigitalGiftCard
        handling:
          type: number
        handlingDiscount:
          type: number
        handlingTax:
          type: number
        imageUrl:
          type: string
        isTaxable:
          type: boolean
        itemDiscount:
          type: number
        itemTax:
          type: number
        lineId:
          type: integer
          format: int32
        lineItemCost:
          type: number
        manageStock:
          type: boolean
        name:
          type: string
        optionAttributeFQN:
          type: string
        options:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentAPI-ProductionProfileProductOption"
        originalOrderItemId:
          type: string
        overridePrice:
          type: number
        parentId:
          type: string
        partNumber:
          type: string
        productCode:
          type: string
        quantity:
          type: integer
          format: int32
        readyForPickupQuantity:
          type: integer
          format: int32
        services:
          type: array
          items:
            $ref: "#/components/schemas/Service"
        shipping:
          type: number
        shippingDiscount:
          type: number
        shippingTax:
          type: number
        sku:
          type: string
        taxData:
          type: object
          properties: {}
        taxableHandling:
          type: number
        taxableLineItemCost:
          type: number
        taxableShipping:
          type: number
        transferQuantity:
          type: integer
          format: int32
        trueTransferQuantity:
          type: integer
          format: int32
        unitPrice:
          type: number
        upc:
          type: string
        variationProductCode:
          type: string
        weight:
          type: number
        weightUnit:
          type: string
        weightedDutyAdjustment:
          type: number
        weightedHandlingAdjustment:
          type: number
        weightedHandlingTaxAdjustment:
          type: number
        weightedLineItemTaxAdjustment:
          type: number
        weightedShipmentAdjustment:
          type: number
        weightedShippingAdjustment:
          type: number
        weightedShippingTaxAdjustment:
          type: number
    BaseRequest:
      title: Base Request
      description: Base Request Model
      properties:
        locationCode:
          title: location code
          description: Location Code
          type: string
        userID:
          description: user id
          type: integer
        pageSize:
          description: how many results to show per page
          type: integer
        pageNum:
          description: which page to show
          type: integer
        sortBy:
          description: index to sort results by
          type: string
      type: object
    BaseResponse:
      title: Base Response
      description: Base Response Model
      properties:
        success:
          description: Flag for success
          type: boolean
        messages:
          description: List of messages
          type: array
          items:
            type: string
        numResults:
          description: Number of results
          type: integer
      type: object
    DateRange:
      title: Date Range
      description: Range of dates
      properties:
        startDate:
          description: Start Date
          type: string
        endDate:
          description: End Date
          type: string
      type: object
    DeletedCountResponse:
      title: Deleted Count Response
      description: Deleted Count Response Model
      properties:
        deleted:
          description: Count of deleted entries
          type: integer
      type: object
    DeletedResponse:
      title: Deleted Response
      description: Deleted Response Model
      properties:
        deleted:
          description: Whether the delete was successful
          type: boolean
      type: object
    FetchFileConfigRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Fetch File Config Request
          description: Request for Fetch File Configs
          required:
            - active
            - lockName
            - ftpServer
            - ftpUsername
            - ftpPassword
            - ftpRemotePath
            - postProcessAction
          properties:
            fetchFileConfigID:
              description: Fetch File Config ID
              type: integer
            active:
              description: Flag for active state
              type: boolean
            emailList:
              description: Email List
              type: string
            refreshEnabled:
              description: Flag for Refresh Enabled
              type: boolean
            refreshFileDescription:
              description: Description for the refresh file
              type: string
            updateEnabled:
              description: Flag for Update Enabled
              type: boolean
            updateFileDescription:
              description: Description for the update file
              type: string
            ftpServer:
              description: FTP server address
              type: string
            ftpUsername:
              description: FTP server username
              type: string
            ftpPassword:
              description: FTP server password
              type: string
            ftpPort:
              description: FTP server port
              type: integer
            ftpRemotePath:
              description: FTP server remote path
              type: string
            ftpRemotePathArchive:
              description: FTP server remote path archive
              type: string
            region:
              description: S3 Region
              type: string
            s3Key:
              description: S3 Key
              type: string
            secret:
              description: S3 Secret
              type: string
            bucket:
              description: S3 Bucket
              type: string
            s3Path:
              description: S3 Bucket Path (directory)
              type: string
            archiveBucket:
              description: S3 Archive Bucket
              type: string
            s3ArchivePath:
              description: S3 Archive Bucket Path (directory)
              type: string
            lockName:
              description: Lock name
              type: string
            postProcessAction:
              description: Enum denoting action post processing
              type: integer
            useControlFile:
              description: Flag for using control file
              type: boolean
            multipleFiles:
              description: Flag for using multiple files
              type: boolean
            zeroOutNegatives:
              description: Flag for converting negatives to zero
              type: boolean
            testFTPConfigs:
              description: Flag for if its a test ftp config
              type: boolean
            fieldNameMap:
              description: List of field names
              type: array
              items:
                type: string
            ignoreExtraFields:
              description: Flag for ignoring extra fields
              type: boolean
            blankQuantityIsZero:
              description: Flag to convert null quantities to zero
              type: boolean
            csvDelimiter:
              description: Delimiter
              type: string
            productMapping:
              title: productMapping
              description: Enum for fetch file productMapping
              type: string
              enum:
                - SWAP_PART_NUMBER_WITH_UPC
                - SWAP_SKU_WITH_UPC
          type: object
    FetchFileConnectionResponse:
      title: FetchFileConnectionResponse
      description: FetchFileConnectionResponse
      properties:
        ftpFiles:
          description: List of files found on the specified sftp directory
          type: array
          items:
            type: string
        ftpArchiveFiles:
          description: List of files found on the specified sftp archive directory
          type: array
          items:
            type: string
        s3Files:
          description: List of files found on the specified s3 bucket/path
          type: array
          items:
            type: string
        s3ArchiveFiles:
          description: List of files found on the specified s3 archive bucket/path
          type: array
          items:
            type: string
      type: object
    CreateExportSettingsFTPRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Create Export Settings FTP Request
          description: Request needed for creating Export Settings FTP
          required:
            - exportSettingsFTP
            - exportSettingsName
          properties:
            exportSettingsName:
              description: Export Settings Name to associate the ftp settings with
              type: string
            exportSettingsFTP:
              description: Export Settings FTP to create
              type: object
              $ref: "#/components/schemas/ExportSettingsFTP"
          type: object
    CreateExportSettingsRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Create Export Settings Request
          description: Request needed for creating Export Settings
          required:
            - exportSettings
          properties:
            exportSettings:
              description: Export Settings to create
              type: object
              $ref: "#/components/schemas/ExportSettings"
          type: object
    CreateExportSettingsS3Request:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Create Export Settings S3 Request
          description: Request needed for creating Export Settings S3
          required:
            - exportSettingsS3
            - exportSettingsName
          properties:
            exportSettingsName:
              description: Export Settings Name to associate the ftp settings with
              type: string
            exportSettingsS3:
              description: Export Settings S3 to create
              type: object
              $ref: "#/components/schemas/ExportSettingsS3"
          type: object
    ExportInventoryJobResponse:
      title: Export Inventory Job Response
      description: Response for each export job creation
      properties:
        exportSettingsID:
          description: Export Settings ID
          type: integer
        jobID:
          description: ID of newly created job
          type: integer
      type: object
    ExportInventoryRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Export Inventory Request
          description: Export Inventory Request
          properties:
            exportSettingsName:
              description: Name of the Export Settings to use
              type: string
            exportSettingsFTPName:
              description:
                Name of the FTP Settings to use. Will only check for this if
                exportID is already set
              type: string
            exportSettingsS3Name:
              description:
                Name of the S3 Settings to use. Will only check for this if
                exportID is already set
              type: string
            development:
              description: Flag for sending the exports to the development droppoint
              type: boolean
          type: object
    ExportInventoryResponse:
      title: Export Inventory Response
      description: Response for Export Inventory api
      properties:
        exportInventoryJobResponses:
          description: List of Export Inventory Job Responses
          type: array
          items:
            $ref: "#/components/schemas/ExportInventoryJobResponse"
      type: object
    ExportSettings:
      title: Export Settings
      description: Export Settings
      required:
        - name
        - fileFormat
        - exportType
        - ftpInformation
      properties:
        name:
          description: Export Settings Name
          type: string
        fileFormat:
          description: Format for the export file
          type: string
          enum:
            - XML
            - CSV
        exportType:
          description: Type of exportGG for the settings
          type: string
          enum:
            - AGGREGATE
            - LOCATION
        onlySendAvailable:
          description: Flag for only sending available
          type: boolean
        onlySendActiveLocations:
          description: Flag for only sending from active locations
          type: boolean
        ftpInformation:
          description: List of export FTP settings
          type: array
          items:
            $ref: "#/components/schemas/ExportSettingsFTP"
        s3Information:
          description: List of export S3 settings
          type: array
          items:
            $ref: "#/components/schemas/ExportSettingsS3"
        exportSingleFile:
          description: Flag for exporting as a single file
          type: boolean
        safetyStock:
          description: Safety Stock
          type: string
          enum:
            - SAFETY_STOCK_MAX
            - SAFETY_STOCK_MIN
            - SAFETY_STOCK_AVG
            - SAFETY_STOCK_SUM
        floor:
          description: Floor
          type: string
          enum:
            - FLOOR_MAX
            - FLOOR_MIN
            - FLOOR_AVG
            - FLOOR_SUM
        ltd:
          description: LTD
          type: string
          enum:
            - LTD_MAX
            - LTD_MIN
            - LTD_AVG
            - LTD_SUM
        fileName:
          description: Name for the export file
          type: string
        includeAttributes:
          description: Flag for including attributes
          type: boolean
        zipFiles:
          description: Flag for zipping the files
          type: boolean
        zipFileName:
          description: Name for the zipped file
          type: string
        untransformedFileName:
          description: Untransformed File Name
          type: string
        untransformedZipFileName:
          description: Untransformed Zip File Name
          type: string
        locationGroupIDs:
          description: Location Group Ids associated with the settings
          type: array
          items:
            type: integer
        siteIDs:
          description: Site Ids associated with the settings
          type: array
          items:
            type: integer
        directShip:
          description: Flag for only using locations with Direct Ship enabled
          type: boolean
        pickup:
          description: Flag for only using locations with In Store Pickup enabled
          type: boolean
        transfer:
          description: Flag for only using locations with Transfer enabled
          type: boolean
        productMapping:
          title: productMapping
          description: Enum for export productMapping
          type: string
          enum:
            - SWAP_PART_NUMBER_WITH_UPC
            - SWAP_SKU_WITH_UPC
        isClassic:
          description: Flag for marking the setting as a classic export
          type: boolean
        ignoreNegativeInventoryLocations:
          description: Flag for excluding negative inventory locations
          type: boolean
        tags:
          $ref: "#/components/schemas/tags"
      type: object
    ExportSettingsFTP:
      title: Export Settings FTP
      description: Export Settings FTP
      required:
        - name
        - ftpServer
        - ftpPort
        - ftpDirectory
      properties:
        active:
          description: Flag for Active State
          type: boolean
        exportSettingsID:
          description: Export Settings ID
          type: integer
        name:
          description: Export Settings FTP Name
          type: string
        ftpServer:
          description: FTP Server Address
          type: string
        ftpPort:
          description: FTP Server Port
          type: integer
        ftpDirectory:
          description: FTP Server Directory
          type: string
        ftpDirectoryControlFile:
          description: FTP Server Control File Directory
          type: string
        ftpUser:
          description: FTP Username
          type: string
        ftpPassword:
          description: FTP Password
          type: string
        deliveryClass:
          description: FTP Delivery Class. Defaults to ExportDeliveryDefault
          type: string
        controlFile:
          description: Control File
          type: string
        controlFileEmail:
          description: Control File Email
          type: string
        remoteFileName:
          description: Remote File Name
          type: string
        controlFileName:
          description: Control File Name
          type: string
        endpoint:
          description: Endpoint
          type: string
        environment:
          description: Environment
          type: string
      type: object
    ExportSettingsResponse:
      title: Job ID Response
      description: Job ID Response
      properties:
        exportSettingsName:
          description: Created Export Settings Name
          type: string
        exportSettingsFTPName:
          description: Created Export Settings FTP Name
          type: string
        exportSettingsS3Name:
          description: Created Export Settings S3 Name
          type: string
      type: object
    ExportSettingsS3:
      title: Export Settings S3
      description: Export Settings S3
      required:
        - name
        - region
        - key
        - secret
        - bucket
      properties:
        exportSettingsID:
          description: Export Settings ID
          type: integer
        name:
          description: Export Settings S3 Name
          type: string
        active:
          description: Flag for Active State
          type: boolean
        region:
          description: S3 Region
          type: string
        s3Key:
          description: S3 Key
          type: string
        secret:
          description: S3 Secret
          type: string
        bucket:
          description: S3 Bucket (directory)
          type: string
      type: object
    UpdateExportSettingsFTPRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Update Export Settings FTP Request
          description: Request needed updating existing Export Settings FTP
          required:
            - exportSettingsName
            - exportSettingsFTP
          properties:
            exportSettingsName:
              description: Export Settings Name to associate the ftp settings with
              type: string
            exportSettingsFTP:
              description: Export Settings FTP to update
              type: object
              $ref: "#/components/schemas/ExportSettingsFTP"
          type: object
    UpdateExportSettingsFTPResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Update Export Settings FTP Response
          description: Update Export Settings FTP Response
          properties:
            tenantID:
              description: Tenant ID
              type: integer
            exportSettingsFTPName:
              description: Export Settings FTP Name
              type: string
            exportSettingsName:
              description: Export Settings Name to associate the ftp settings with
              type: string
          type: object
    UpdateExportSettingsRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Update Export Settings Request
          description: Request needed updating existing Export Settings
          required:
            - exportSettingsID
            - exportSettings
          properties:
            exportSettings:
              description: Export Settings to update
              type: object
              $ref: "#/components/schemas/ExportSettings"
          type: object
    UpdateExportSettingsResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Update Export Settings Response
          description: Update Export Settings Response
          properties:
            tenantID:
              description: Tenant ID
              type: integer
            name:
              description: Name
              type: string
          type: object
    UpdateExportSettingsS3Request:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Update Export Settings S3 Request
          description: Request needed updating existing Export Settings S3
          required:
            - exportSettingsName
            - exportSettingsS3
          properties:
            exportSettingsName:
              description: Export Settings Name to associate the ftp settings with
              type: string
            exportSettingsS3:
              description: Export Settings S3 to update
              type: object
              $ref: "#/components/schemas/ExportSettingsS3"
          type: object
    UpdateExportSettingsS3Response:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Update Export Settings S3 Response
          description: Update Export Settings S3 Response
          properties:
            tenantID:
              description: Tenant ID
              type: integer
            exportSettingsS3ID:
              description: Export Settings S3 ID
              type: integer
            exportSettingsID:
              description: Export Settings ID to associate the s3 settings with
              type: integer
          type: object
    AdjustItem:
      title: Adjust Item
      description: Adjust Item
      properties:
        partNumber:
          description: Part/Product Number
          type: string
        upc:
          description: Universal Product Code
          type: string
        sku:
          description: Stock Keeping Unit
          type: string
        binID:
          description: Bin Location Identifier
          type: integer
        quantity:
          description: Current Quantity of Item
          type: integer
        tags:
          $ref: "#/components/schemas/tags"
        deliveryDate:
          description:
            Date at which this inventory will become available. Expected format
            '2020-09-28T12:00:00-0500'
          type: DateTime
      type: object
    AdjustRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Adjust Request
          description: Request needed for adjusting inventory
          properties:
            items:
              description: List of items to adjust
              type: array
              items:
                $ref: "#/components/schemas/AdjustItem"
          type: object
    AggregateRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Aggregate Request
          description: Request for aggregating inventory
          required:
            - items
          properties:
            items:
              description: List of Items to search on
              type: array
              items:
                $ref: "#/components/schemas/InventoryItem"
            ignoreSafetyStock:
              description: Whether to ignore the safety stock buffer put in place
              type: boolean
            includeNegativeInventory:
              description: Whether to allow items with negative inventory in the results
              type: boolean
            directShip:
              description: Whether to limit results to locations that are shipping enabled
              type: boolean
            transferEnabled:
              description: Filter results by locations that apply tax (true) or don't (false)
              type: boolean
            pickup:
              description: Filter results by pickup enabled (true) or not (false)
              type: boolean
            tags:
              $ref: "#/components/schemas/tags"
          type: object
    AggregateResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Aggregate Response
          description: Response for aggregating Inventory
          properties:
            tenantID:
              description: Manufacturer Identifier
              type: integer
            onHand:
              description: The quantity the location has in its possession
              type: integer
            available:
              description: The quantity the location has that are available for purchase
              type: integer
            partNumber:
              description: Part/Product Number
              type: string
            upc:
              description: Universal Product Code
              type: string
            sku:
              description: Stock Keeping Unit
              type: string
            floor:
              description:
                Absolute minimum quantity of this item that should be in stock at
                any time
              type: integer
          type: object
    AllocateInventoryRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Allocate Inventory Request
          description: Request needed for allocating inventory
          required:
            - tenantID
            - items
          properties:
            items:
              description: list of AllocateItems
              type: array
              items:
                $ref: "#/components/schemas/AllocateItem"
            orderDate:
              description: order date
              type: string
            orderWeight:
              description: order weight
              type: integer
            decrementOnHandOnDeallocate:
              description: flag to determine deallocation on decrements
              type: boolean
          type: object
    AllocateItem:
      title: AllocateItem
      description: Item for Allocation
      required:
        - quantity
        - orderItemID
        - orderID
        - shipmentID
        - locationID
      properties:
        partNumber:
          title: part number
          description: part number
          type: string
        upc:
          title: upc
          description: upc
          type: string
        sku:
          title: sku
          description: sku
          type: string
        quantity:
          title: quantity
          description: quantity
          type: integer
        orderID:
          title: order ID
          description: order ID
          type: integer
        orderItemID:
          title: order item ID
          description: order item ID
          type: integer
        shipmentID:
          title: shipment ID
          description: shipment ID
          type: integer
        locationCode:
          title: location Code
          description: location Code
          type: string
        previousOrderItemID:
          title: previous order item ID
          description: previous order item ID
          type: integer
        binID:
          title: bin ID
          description: Bin Location Identifier
          type: integer
        blockAssignment:
          title: Block Item Assignment
          description:
            Block assignment of item at product/location level. ONLY allowed on
            deallocate.
          type: boolean
        tags:
          $ref: "#/components/schemas/tags"
      type: object
    ClearEventQueueRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: ClearEventQueueRequest
          description: ClearEventQueueRequest
          properties:
            before:
              description:
                "Clear events queued before this date. Date format looks like:
                2010-01-30"
              type: string
            after:
              description:
                "Clear events queued after this date. Date format looks like:
                2010-01-30"
              type: string
          type: object
    DeleteItemRequest:
      title: Delete Item Request
      description: Request needed for deleting inventory
      properties:
        dryRun:
          description: Flag used to differentiate between a test and a non-test run.
          type: boolean
        explicit:
          description:
            Flag used to request explicit inventory, location, pick wave, and
            audit information for each request item.
          type: boolean
        locationCodes:
          description: >-
            An array of locationCodes to be considered for item-deletion
            purposes. Optional.
                All locationCodes associated with the requesting tenant will be considered if no locationCodes are provided.
          type: array
          items:
            type: string
        allLocations:
          description:
            Flag used to request deletion of inventory across all locations
            (overrides locationCodes).
          type: boolean
        partNumber:
          description:
            "The part number of the item to be deleted. Supports basic regex
            operators: .*+?^$[]"
          type: string
        upc:
          description:
            "The upc of the item to be deleted. Supports basic regex operators:
            .*+?^$[]"
          type: string
        sku:
          description:
            "The sku of the item to be deleted. Supports basic regex operators:
            .*+?^$[]"
          type: string
        tags:
          $ref: "#/components/schemas/tags"
      type: object
    DeleteItemResponse:
      title: Delete Item Response
      description: Delete Item Response
      properties:
        dryRun:
          description: Flag used to differentiate between a test and a non-test run.
          type: boolean
        itemsDeleted:
          description: Items deleted due to the request
          type: array
          items:
            $ref: "#/components/schemas/M_DeleteItem"
        totalAuditsDeleted:
          description: Flag used to differentiate between a test and a non-test run.
          type: boolean
        totalInventoryEntriesDeleted:
          description: Flag used to differentiate between a test and a non-test run.
          type: boolean
        totalLocationsAffected:
          description: Flag used to differentiate between a test and a non-test run.
          type: boolean
        totalPickWavesDeleted:
          description: Flag used to differentiate between a test and a non-test run.
          type: boolean
        totalProductsDeleted:
          description: Flag used to differentiate between a test and a non-test run.
          type: boolean
        jobIDs:
          description: Flag used to differentiate between a test and a non-test run.
          type: boolean
      type: object
    InventoryRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Inventory Request
          description: Request for getting Inventory
          required:
            - type
            - items
          properties:
            type:
              description: Inventory Request Type Enum
              type: string
              enum:
                - ALL
                - PARTIAL
                - ANY
                - ALL_STORES
            items:
              description: List of Items to search on
              type: array
              items:
                $ref: "#/components/schemas/ItemQuantity"
            requestLocation:
              description: Location for Request
              type: object
              $ref: "#/components/schemas/RequestLocation"
            limit:
              description: The maximum number of results to return, defaults to 100 for most
              type: integer
            locationWhitelist:
              description: List of location codes that are allowed to be included in results
              type: array
              items:
                type: string
            locationPriorityList:
              description:
                List of location codes that should be returned before all others,
                preventing them from being excluded by limit
              type: array
              items:
                type: string
            locationBlacklist:
              description:
                List of location codes that are NOT allowed to be included in
                results
              type: array
              items:
                type: string
            ignoreSafetyStock:
              description: Whether to ignore the safety stock buffer put in place
              type: boolean
            includeNegativeInventory:
              description: Whether to allow items with negative inventory in the results
              type: boolean
            directShip:
              description: Whether to limit results to locations that are shipping enabled
              type: boolean
            transferEnabled:
              description:
                Filter results by locations that have transfer enabled (true) or
                don't (false)
              type: boolean
            pickup:
              description:
                Filter results by locations that have finderbot enabled (true) or
                don't (false)
              type: boolean
            includeInAggregateExport:
              description:
                Filter results by locations that have aggregate export enabled
                (true) or don't (false)
              type: boolean
            includeInLocationExport:
              description:
                Filter results by locations that have physical storefronts (true)
                or don't (false)
              type: boolean
            excludeBlockedAssignment:
              description:
                "Filter out results that are blocked from assignment (at the
                product/location level) "
              type: boolean
            includeAttributes:
              description: Flag to include attributes or not
              type: boolean
            sortByEnum:
              description: What to sort the inventory results by. Only used for
                GetInventoryByLocation calls (locationCode must be set)
              type: string
              enum:
                - ON_HAND
                - AVAILABLE
                - ALLOCATED
                - PART_NUMBER
                - PRODUCT_ID
            tags:
              $ref: "#/components/schemas/tags"
          type: object
    InventoryResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Inventory Response
          description: Inventory Response
          properties:
            locationName:
              description: Location Name
              type: string
            locationCode:
              description: Location Code
              type: string
            tenantID:
              description: Tenant Identifier
              type: integer
            onHand:
              description: The quantity the location has in its possession
              type: integer
            available:
              description: The quantity the location has that are available for purchase
              type: integer
            allocated:
              description: The quantity the location has that are already allocated.
              type: integer
            pending:
              description: The quantity the location has that are pending.
              type: integer
            partNumber:
              description: Part/Product Number
              type: string
            upc:
              description: Universal Product Code
              type: string
            sku:
              description: Stock Keeping Unit
              type: string
            blockAssignment:
              description: Whether or not the product is blocked for assignment
              type: boolean
            ltd:
              description: Custom field used for store prioritization
              type: number
            floor:
              description:
                Absolute minimum quantity of this item that should be in stock at
                any time
              type: integer
            safetyStock:
              description:
                Quantity of this item the location wants to keep in stock to ensure
                stock isn't completely depleted
              type: integer
            distance:
              description: The distance in miles from this location to the item's destination
              type: number
            directShip:
              description: Whether this location can ship to a consumer
              type: boolean
            transferEnabled:
              description:
                Whether the location can ship to another location (store), thus
                restocking that location.
              type: boolean
            pickup:
              description: Whether a consumer can pick up product at this location (store)
              type: boolean
            countryCode:
              description: The country code of this location
              type: string
            currencyID:
              description: The currency identifier for the retailPrice
              type: integer
            retailPrice:
              description: The price of the product at this location
              type: number
            inventoryLocatorName:
              description: The inventory locator name of the individual item
              type: string
            attributes:
              description: List of Inventory Attributes
              type: array
              items:
                type: string
            taggedInventory:
              $ref: "#/components/schemas/taggedInventoryMap"
          type: object
    ItemQuantity:
      title: Item Quantity
      description: Item Quantity Model
      properties:
        partNumber:
          description: Part/Product Number
          type: string
        upc:
          description: Universal Product Code
          type: string
        sku:
          description: Stock Keeping Unit
          type: string
        quantity:
          description: Quantity
          type: integer
      type: object
    JobIDResponse:
      title: Job ID Response
      description: Job ID Response
      properties:
        jobID:
          description: Job ID
          type: integer
      type: object
    OrderItemInformation:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Order Item Information
          description: Order Item Information
          properties:
            orderID:
              description: Order Identifier
              type: integer
            orderItemID:
              description: Order Item Identifier
              type: integer
            locationID:
              description: Location Identifier
              type: integer
            locationActive:
              description: Flag for whether the location is active
              type: boolean
            locationCode:
              description: External Store Identifier
              type: integer
            locationName:
              description: Location Name
              type: string
            binID:
              description: Bin Identifier
              type: integer
            partNumber:
              description: Part/Product Number
              type: string
            upc:
              description: Universal Product Code
              type: string
            sku:
              description: Stock Keeping Unit
              type: string
            ltd:
              description: Custom field used for store prioritization
              type: string
            floor:
              description:
                Absolute minimum quantity of this item that should be in stock at
                any time
              type: integer
            safetyStock:
              description:
                Quantity of this item the location wants to keep in stock to ensure
                stock isn't completely depleted
              type: integer
            onHand:
              description: The quantity the location has in its possession
              type: integer
            available:
              description: The quantity the location has that are available for purchase
              type: integer
            allocated:
              description: The quantity the location has that are allocated
              type: integer
            allocates:
              description: Total number of allocations
              type: integer
            deallocates:
              description: Total number of deallocations
              type: integer
            fulfills:
              description: Total number of fulfillments. Should never be greater than 1.
              type: integer
            picks:
              description: Total number of picks (WMS only)
              type: integer
            pendingQuantity:
              description: Pending quantity (WMS only)
              type: integer
            events:
              description: Order Identifier
              type: array
              items:
                $ref: "#/components/schemas/OrderItemInformationEvent"
          type: object
    OrderItemInformationEvent:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Order Item Information Event
          description: Order Item Information Event
          properties:
            date:
              description: Date of the event
              type: string
            eventType:
              description: Type of event
              type: string
              enum:
                - ALLOCATED
                - DEALLOCATED
                - FULFILLED
                - PICKED
                - DEALLOCATE_FULFILL
            quantity:
              description: Quantity
              type: integer
          type: object
    OrderItemInformationRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Order Item Information Request
          description: Request for getting order item information
          properties:
            orderID:
              description: Order Identifier
              type: integer
            items:
              description: List of Items to search on
              type: array
              items:
                $ref: "#/components/schemas/InventoryItem"
          type: object
    OrderItemLogIdentifier:
      title: Order Item Log Identifier
      description: OrderItem Log Identifier
      properties:
        orderID:
          description: Order Identifier
          type: integer
        orderItemID:
          description: Order Item Identifier
          type: integer
        shipmentID:
          description: Shipment Identifier
          type: integer
        partNumber:
          description: Part/Product Number
          type: string
        upc:
          description: Universal Product Code
          type: string
      type: object
    OrderItemLogRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Order Item Log Request
          description: OrderItem Log Request
          properties:
            identifiers:
              description: A list of order item log identifiers to search for
              type: array
              items:
                $ref: "#/components/schemas/OrderItemLogIdentifier"
            orderBy:
              description: Order Identifier
              type: string
              enum:
                - ORDER_ID
                - ORDER_ITEM_ID
                - INVENTORY_ID
                - TENANT_ID
                - LOCATION_ID
                - USER_ID
                - QUANTITY
                - TYPE
                - RESOLVED
                - FIXED
                - DATE
                - SHIPMENT_ID
            limit:
              description: The maximum number of results to return
              type: integer
            type:
              description: The type of logs to retrieve
              type: string
              enum:
                - ALLOCATE
                - DEALLOCATE
                - FULFILL
                - PICK
            sortAscending:
              description: Whether to sort results ascending, based on orderBy
              type: boolean
          type: object
    OrderItemLogResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Order Item Log Response
          description: OrderItem Log Response
          properties:
            orderID:
              description: Order Identifier
              type: integer
            orderItemID:
              description: Order Item Identifier
              type: integer
            shipmentID:
              description: Shipment Identifier
              type: integer
            inventoryID:
              description: Inventory Identifier
              type: integer
            tenantID:
              description: Tenant Identifier
              type: integer
            locationCode:
              description: Location Code Identifier
              type: string
            userID:
              description: User Identifier
              type: integer
            quantity:
              description: The number of items affected for this log entry
              type: integer
            type:
              description: The type of logs to retrieve
              type: string
              enum:
                - ALLOCATE
                - DEALLOCATE
                - FULFILL
                - PICK
            resolved:
              description: Whether this event is resolved
              type: boolean
            fixed:
              description: Whether this event has been fixed
              type: boolean
            date:
              description: The date of this log entry
              type: string
            partNumber:
              description: Part/Product Number
              type: string
            upc:
              description: Universal Product Code
              type: string
          type: object
    RefreshItem:
      title: Refresh Item
      description: Refresh Item
      properties:
        partNumber:
          description: Part/Product Number
          type: string
        upc:
          description: Universal Product Code
          type: string
        sku:
          description: Stock Keeping Unit
          type: string
        binID:
          description: Bin Location Identifier
          type: integer
        LTD:
          description: Custom field used for store prioritization
          type: float
        floor:
          description:
            Absolute minimum quantity of this item that should be in stock at
            any time
          type: integer
        safetyStock:
          description:
            Quantity of this item the location wants to keep in stock to ensure
            stock isn't completely depleted
          type: integer
        quantity:
          description: Current Quantity of Item
          type: integer
        retailPrice:
          description: Stock Keeping Unit
          type: number
        currencyID:
          description: The price of the item
          type: integer
        inventoryLocatorName:
          description: The inventory locator name of the item
          type: string
        attributes:
          description: List of Item Attributes
          type: array
          items:
            type: string
        tags:
          $ref: "#/components/schemas/tags"
        deliveryDate:
          description:
            Date at which this inventory will become available. Expected format
            '2020-09-28T12:00:00-0500'
          type: DateTime
      type: object
    RefreshRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Refresh Request
          description: Request needed for refreshing inventory
          required:
            - locationCode
          properties:
            items:
              description: List of items to refresh
              type: array
              items:
                $ref: "#/components/schemas/RefreshItem"
          type: object
    RequestLocation:
      title: Request Location
      description: Request Location
      properties:
        unit:
          description: Unit of distance used for radius
          type: string
          default: MILES
          enum:
            - MILES
            - KM
        radius:
          description: Distance from location
          type: number
        postalCode:
          description: Postal Code of this location
          type: string
        latitude:
          description: Latitude coordinate of this location
          type: number
        longitude:
          description: Longitude coordinate of this location
          type: number
        countryCode:
          description: Country Code for this location
          type: string
        locationCode:
          description:
            Location Code for this location. This being set will trigger
            GetInventoryByLocation
          type: string
      type: object
    ProductMapping:
      title: Product Mapping
      description: Product Mapping
      properties:
        tenantID:
          title: tenantID
          description: Tenant Identifier
          type: integer
        direction:
          title: direction
          description: Enum for direction of the mapping
          type: string
          enum:
            - INBOUND
            - OUTBOUND
            - SKIP
        mapping:
          title: mapping
          description: Enum for mapping rule
          type: string
          enum:
            - DEFAULT_MAPPING
            - CUSTOM_MAPPING_PART_TO_ALL
            - CUSTOM_MAPPING_PART_TO_SKU
            - CUSTOM_MAPPING_ONLY_UPC
            - CUSTOM_MAPPING_PART_TO_UPC_IF_EMPTY
            - CUSTOM_MAPPING_SKU_TO_PART_UPC_SKU
            - CUSTOM_MAPPING_SKU_TO_PART
            - CUSTOM_MAPPING_SKU_TO_UPC_IF_EMPTY
      type: object
    ProductMappingRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Product Mapping Request
          description: Request needed to interact with Product Mappings
          properties:
            direction:
              title: direction
              description: Enum for direction of the mapping
              type: string
              enum:
                - INBOUND
                - OUTBOUND
                - SKIP
            mapping:
              title: mapping
              description: Enum for mapping rule
              type: string
              enum:
                - DEFAULT_MAPPING
                - CUSTOM_MAPPING_PART_TO_ALL
                - CUSTOM_MAPPING_PART_TO_SKU
                - CUSTOM_MAPPING_ONLY_UPC
                - CUSTOM_MAPPING_PART_TO_UPC_IF_EMPTY
                - CUSTOM_MAPPING_SKU_TO_PART_UPC_SKU
                - CUSTOM_MAPPING_SKU_TO_PART
          type: object
    ProductMappingResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Product Mapping Response
          description: Product Mapping Response
          properties:
            productMappings:
              description: Product Mapping
              type: object
              $ref: "#/components/schemas/ProductMapping"
          type: object
    ProvisionSiloRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Create Site Request
          description: Request for creating a site
          properties:
            tenantID:
              title: tenantID
              description: Tenant ID
              type: integer
          type: object
    SiteIDResponse:
      title: Site ID Response
      description: Site ID Response
      properties:
        siteID:
          description: Site ID
          type: integer
      type: object
    TenantIDResponse:
      title: Tenant ID Response
      description: Tenant ID Response
      properties:
        tenantID:
          description: Tenant ID
          type: integer
      type: object
    UpdateTenantConfigRequest:
      title: Create Tenant Config Request
      description: Request for creating or updating tenant config.
      properties:
        numEventSenderWorkers:
          description: Number of event sender workers to run for this tenant.
          type: integer
        fetchWorkerConfigIds:
          description:
            Config IDs of Fetch Worker Configs to regularly run. Set this to
            [0] to run all configs.
          type: array
          items:
            type: string
        eventsToSend:
          description:
            "What level of events to send. Must be one of: NO_REFRESH_LOGS,
            WITH_REFRESH_LOGS, WITH_BASIC_EVENTS, ALL"
          type: string
        enableSyncApi:
          description: Whether our secret sync api is enabled for this tenant.
          type: boolean
        ignoreIdentifiers:
          description:
            "Which identifiers to ignore after applying product mappings. Must
            be NULL or one of: NONE, IGNORE_IDENTIFIERS_SKU,
            IGNORE_IDENTIFIERS_PART_NUMBER,
            IGNORE_IDENTIFIERS_SKU_AND_PART_NUMBER"
          type: string
        tagsEnabled:
          description: Whether the tenant uses tags or not
          type: boolean
      type: object
    JobQueueResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Job Queue Response
          description: Response for getting a job
          properties:
            jobID:
              description: Internal identifier that uniquely identifies a single job
              type: integer
            tenantID:
              description: Unique internal identifier of the tenant that owns the job
              type: integer
            locationCode:
              description: Unique internal Identifier of the owning location
              type: string
            type:
              description: Purpose of the job
              type: string
              enum:
                - REFRESH
                - ADJUST
                - RELEASE_SHIPMENTS
                - CREATE_PICK_WAVE
                - CLOSE_PICK_WAVE
                - PUT_AWAY_FILE
                - SHORT_PICK_ERROR
                - BIN_AUDIT_START
                - BIN_AUDIT_COMPLETION
                - CREATE_BIN_AUDIT
                - RELEASE_PENDING_ITEMS
            added:
              description:
                Time and date the job was added to the queue in ISO8601 format in
                UTC
              type: string
            started:
              description: Time and date the job was started in ISO8601 format in UTC
              type: string
            finished:
              description: Time and date the job was finished in ISO8601 format in UTC
              type: string
            originalFilename:
              description:
                The full name of the file that was picked up at the secure
                droppoint server before being split up by location. Applies only
                to refresh and adjust jobs created via file fetch process
              type: string
            hasData:
              description: True if the job was not created from a fetched file
              type: boolean
            itemCount:
              description:
                The number of items processed, only for job types REFRESH and
                ADJUST
              type: integer
            status:
              description: Current status of job completion
              type: string
              enum:
                - PENDING
                - WORKING
                - SUCCESS
                - FAILED
          type: object
    Tag:
      title: Tag Response
      description: Request/Response object for a tag
      properties:
        tagID:
          description: Tag ID
          type: integer
        tagValue:
          description: Tag Value
          type: string
        isDefault:
          description: Whether or not this tag is the default tag for its category.
          type: boolean
        percent:
          description:
            Percentage of available inventory this tag will get when the
            percentage update is performed. Must be between 0 and 100
            (inclusive).
          type: integer
        created:
          description: Date this tag was created
          type: string
        updated:
          description: Date this tag was last updated
          type: string
      type: object
    TagCategory:
      title: Tag Category Response
      description: Request and response object for a tag category
      properties:
        tagCategoryID:
          description: Tag Category ID
          type: integer
        name:
          description: Tag Category Name
          type: string
        created:
          description: Date tag category was created.
          type: string
        tags:
          description: Tags within this category
          type: array
          items:
            $ref: "#/components/schemas/Tag"
      type: object
    TagQuantity:
      title: Tag quantity response
      description: Response object for a tag quantity
      properties:
        onHand:
          description: The quantity the the location has in its possession for this tag
          type: integer
        available:
          description:
            The quantity the location has that are available for purchase for
            this tag
          type: integer
        allocated:
          description: The quantity the location has that are already allocated for this tag
          type: integer
        pending:
          description: The quantity the location has that are pending for this tag
          type: integer
        tags:
          $ref: "#/components/schemas/tags"
      type: object
    ProductMatch:
      title: Product Match
      description: Product Match
      properties:
        matchType:
          description: How the product matches with the identifier
          type: string
        identifier:
          description: Identifier
          type: string
        value:
          description: Value
          type: string
      type: object
    ProductQuantity:
      title: Product Quantities
      description: A product and its associated quantity
      properties:
        partNumber:
          description: Part Number
          type: string
        upc:
          description: UPC
          type: string
        sku:
          description: SKU
          type: string
        quantity:
          description: Quantity of product
          type: integer
        binID:
          description: ID of associated bin
          type: integer
        locationID:
          description: Location Identifier of the owning location
          type: integer
        binTypeID:
          description: Bin Type ID
          type: integer
        binStatusID:
          description: Bin Status ID
          type: integer
        name:
          description: Name of the product
          type: string
        inventoryID:
          description: Inventory ID
          type: integer
        tenantLocProductID:
          description: Tenant Location Product ID
          type: integer
        auditProductID:
          description: Audit Product ID
          type: integer
        auditID:
          description: Audit ID
          type: integer
        onHand:
          description: Amount of product on hand
          type: integer
        available:
          description: Amount of product available
          type: integer
        allocated:
          description: Amount of product allocated
          type: integer
        pending:
          description: Amount of product pending
          type: integer
        ltd:
          description: Custom field used for store prioritization
          type: integer
        floor:
          description:
            Absolute minimum quantity of this item that should be in stock at
            any time
          type: integer
        safetystock:
          description:
            Quantity of this item the location wants to keep in stock to ensure
            stock isn't completely depleted
          type: integer
      type: object
    Audit:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Audit
          description: Audit
          properties:
            auditID:
              description: Audit identifier
              type: integer
            userID:
              description: User identifier
              type: integer
            locationCode:
              description: Location code
              type: string
            status:
              description: Audit status
              type: string
            dateRequested:
              description: Date the audit was requested
              type: string
            dateStarted:
              description: Date the audit was started
              type: string
            items:
              description: List of Audit Items
              type: array
              items:
                $ref: "#/components/schemas/AuditItem"
          type: object
    AuditItem:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Audit Item
          description: Audit Item
          properties:
            auditItemID:
              description: Audit Item identifier
              type: integer
            binName:
              description: Bin Name
              type: string
            product:
              description: Audit Item and its quantity
              type: object
              $ref: "#/components/schemas/AuditItemQuantity"
          type: object
    AuditItemQuantity:
      title: Audit Item Quantity
      description: Audit Item Quantity
      properties:
        partNumber:
          description: Part Number
          type: string
        upc:
          description: UPC
          type: string
        sku:
          description: SKU
          type: string
        expectedQuantity:
          description: Expected Quantity of items
          type: integer
        actualQuantity:
          description: Actual quantity of items
          type: integer
      type: object
    AuditSearchRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Audit Search Request
          description: Request for searching audits
          properties:
            auditID:
              description: Audit identifier
              type: integer
            binName:
              description: Name of the bin
              type: string
            auditStatus:
              description: Audit Status
              type: string
            dateRange:
              description: Date Range
              type: object
              $ref: "#/components/schemas/DateRange"
            products:
              description: List of matching products
              type: array
              items:
                $ref: "#/components/schemas/ProductMatch"
          type: object
    AuditSearchResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Audit Search Response
          description: Audit Search Response
          properties:
            audits:
              description: List of found audits
              type: array
              items:
                $ref: "#/components/schemas/Audit"
          type: object
    CreateAuditRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Create Audit Request
          description: Request for creating an audit
          properties:
            bins:
              description: List of Create Audit Request Bins
              type: array
              items:
                $ref: "#/components/schemas/CreateAuditRequestBin"
          type: object
    CreateAuditRequestBin:
      title: Create Audit Request Bin
      description: Request for creating an audit bin
      properties:
        binName:
          description: Name of bin
          type: string
        products:
          description: List of Products within a bin
          type: array
          items:
            $ref: "#/components/schemas/InventoryProduct"
      type: object
    Bin:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Bin Inventory Response
          description: Response object for a bin
          properties:
            name:
              description: Bin Name
              type: string
            binID:
              description: Bin ID
              type: integer
            locationCode:
              description: Location Code
              type: string
            binTypeID:
              description: Bin Type ID
              type: integer
            binStatusID:
              description: Bin Status ID
              type: integer
          type: object
    BinIDResponse:
      title: Bin ID Response
      description: Bin ID Response
      properties:
        binID:
          description: Bin ID
          type: integer
      type: object
    BinProductQuantities:
      title: Bin Product Quantities
      description: A bin and its associated products and quantities
      properties:
        binName:
          description: Name of the bin
          type: string
        products:
          description: List of ProductQuantities - Products with their associated quantity
          type: object
          $ref: "#/components/schemas/ProductQuantity"
      type: object
    BinSearchRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Bin Search Request
          description: Request needed for searching for bins
          properties:
            binName:
              description: Partial match of bin name
              type: string
            product:
              description: Product to match bins against
              type: object
              $ref: "#/components/schemas/InventoryProduct"
            sortAscending:
              description: Flag for sorting ascending
              type: boolean
            showNegativeInventory:
              description: Flag for showing negative inventory
              type: boolean
          type: object
    BinSearchResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Bin Search Response
          description: Bin Search Response Object
          properties:
            binQuantities:
              description:
                List of BinProductQuantities - bins with associated products and
                quantities
              type: object
              $ref: "#/components/schemas/BinProductQuantities"
          type: object
    CreateBinRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Create Bin Request
          description: Request needed for creating a new bin
          properties:
            binTypeID:
              title: bin type id
              description: Bin Type Identifier
              type: integer
            binStatusID:
              title: bin status id
              description: Bin Status Identifier
              type: integer
            name:
              title: name
              description: Name
              type: string
          type: object
    GetBinsRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Get Bins Request
          description: Request needed for getting a list of bins
          properties:
            searchTerm:
              description: term to search for
              type: string
          type: object
    LoadBinInventoryRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Load Bin Inventory Request
          description: Request needed for loading bin inventory
          properties:
            bins:
              description: List of bins and their associated product quantities
              type: array
              items:
                $ref: "#/components/schemas/BinProductQuantities"
            dryRun:
              description: Flag for dry runs
              type: boolean
          type: object
    LoadBinInventoryResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Load Bin Inventory Response
          description: Response object for loading bin inventory
          properties:
            unitsAdded:
              description: Number of units added
              type: integer
            unitsRemoved:
              description: Number of removed units
              type: integer
            binsCreated:
              description: Names of created bins
              type: array
              items:
                type: string
            productsCreated:
              description: List of products created
              type: array
              items:
                $ref: "#/components/schemas/InventoryProduct"
            binQuantities:
              description: List of new bin product quantities
              type: array
              items:
                $ref: "#/components/schemas/BinProductQuantities"
          type: object
    UpdateBinRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Update Bin Request
          description: Request needed for updating a bin
          required:
            - binID
            - locationCode
          properties:
            binID:
              description: Bin identifier
              type: integer
            binTypeID:
              description: New Bin's Type ID
              type: integer
            binStatusID:
              description: New Bin's Status ID
              type: integer
          type: object
    UpdateBinsRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Update Bins Request
          description: Request needed for updating bins
          properties:
            bins:
              description: List of Update Bin Requests
              type: array
              items:
                $ref: "#/components/schemas/UpdateBinRequest"
          type: object
    UpdateBinsResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Update Bins Response
          description: Response for updating bins
          properties:
            numberAffected:
              description: Number of affected bins
              type: integer
          type: object
    GetPendingItemsResponse:
      title: Get Pending Items Response
      description: Get Pending Items Response
      properties:
        totalCount:
          description: Total Count of pending items
          type: integer
        page:
          description: Page number
          type: integer
        perPage:
          description: Number per page
          type: integer
        prevPage:
          description: Previous page
          type: integer
        sortBy:
          description: Field to sort by
          type: string
          enum:
            - QUANTITY
            - FROM
            - TO
            - TYPE
            - ORDER_ID
            - WEIGHT
        sortAscending:
          description: Flag to sort by ascending
          type: boolean
        pendingItems:
          description: List of pending items
          type: array
          items:
            $ref: "#/components/schemas/PendingItem"
      type: object
    PendingItem:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Pending Item
          description: Pending Item
          properties:
            pendingItemID:
              description: Pending Item Identifier
              type: integer
            orderID:
              description: Order Identifier
              type: integer
            shipmentID:
              description: Shipment Identifier
              type: integer
            type:
              description: Pending Item type
              type: string
              enum:
                - TYPE_BIN
                - TYPE_DC
                - TYPE_AUDIT
                - TYPE_RESTOCK
            quantity:
              description: The number of items affected for this log entry
              type: integer
            partNumber:
              description: Part/Product Number
              type: string
            upc:
              description: Universal Product Code
              type: string
            sku:
              description: Stock Keeping Unit
              type: string
            locationCode:
              description: Location Code
              type: string
            toBin:
              description: To Bin ID
              type: string
            toBinID:
              description: To Bin ID
              type: integer
          type: object
    BinRange:
      title: Bin Range
      description: Range of bins
      properties:
        startBinName:
          description: Start Bin Name
          type: string
        endBinName:
          description: End Bin Name
          type: string
      type: object
    CompleteWaveResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Complete Wave Response
          description: Complete Wave Response
          properties:
            recoveryWaveID:
              description: Recovery Wave Identifier
              type: integer
            auditID:
              description: Audit Identifier
              type: integer
          type: object
    CreateWaveResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Create Wave Response
          description: Create Wave Response
          properties:
            waveID:
              description: Wave Identifier
              type: integer
          type: object
    WaveCompletion:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Wave Completion
          description: Wave Completion
          properties:
            createRecovery:
              description: Flag for creating a recovery
              type: boolean
            bins:
              description: Maximum number of orders
              type: array
              items:
                $ref: "#/components/schemas/BinProductQuantities"
          type: object
    WaveContent:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - title: Wave Content
          description: Wave Content Model
          properties:
            orderID:
              description: Order Identifier
              type: integer
            shipmentID:
              description: Shipment Identifier
              type: integer
            binName:
              description: Bin Name
              type: string
            partNumber:
              description: Part/Product Number
              type: string
            upc:
              description: Universal Product Code
              type: string
            sku:
              description: Stock Keeping Unit
              type: string
            quantity:
              description: Current Quantity of Item
              type: integer
            actualQuantity:
              description: Actual Quantity of Item
              type: integer
            slotID:
              description: Slot Identifier
              type: integer
          type: object
    WaveItem:
      title: Wave Shipment Item
      description: An item quantity used in wave shipments
      required:
        - orderItemID
        - quantity
      properties:
        orderItemID:
          description: Order Item ID
          type: integer
        partNumber:
          description: Part Number
          type: string
        upc:
          description: Upc
          type: string
        sku:
          description: SKU
          type: string
        quantity:
          description: Current Quantity of Item
          type: integer
      type: object
    WaveShipment:
      title: Wave Shipment
      description: A shipment (used in getting wave suggestions)
      required:
        - orderID
        - shipmentID
        - items
      properties:
        orderID:
          description: Order Identifier
          type: integer
        shipmentID:
          description: Shipment Identifier
          type: integer
        items:
          description: List of Items in the shipment
          type: array
          items:
            $ref: "#/components/schemas/WaveItem"
      type: object
    WaveSuggestionItem:
      allOf:
        - $ref: "#/components/schemas/WaveItem"
        - title: Wave Suggestion Item
          description: A suggestion of where to add an item to a pick wave.
          required:
            - orderItemID
            - quantity
            - binName
          properties:
            binName:
              description: Bin Name
              type: string
          type: object
    WaveSuggestionRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Wave Suggestion Request
          description: Wave Suggestion Request
          required:
            - locationCode
            - shipments
          properties:
            includeZeroInventory:
              description: Flag for including zero inventory items
              type: boolean
            binRanges:
              description: List of Bin Ranges
              type: array
              items:
                $ref: "#/components/schemas/BinRange"
            shipments:
              description: List of Wave Shipments
              type: array
              items:
                $ref: "#/components/schemas/WaveShipment"
          type: object
    WaveSuggestionResponse:
      title: Wave suggestion Response
      description: Wave suggestion response
      properties:
        shipments:
          description: List of wave shipment suggestions
          type: array
          items:
            $ref: "#/components/schemas/WaveSuggestionShipment"
      type: object
    WaveSuggestionShipment:
      title: Wave Shipment
      description: A suggested shipment to put into a pick wave
      properties:
        orderID:
          description: Order Identifier
          type: integer
        shipmentID:
          description: Shipment Identifier
          type: integer
        items:
          description: List of suggested items to put in shipment in a wave.
          type: array
          items:
            $ref: "#/components/schemas/WaveSuggestionItem"
      type: object
    BinModel:
      title: BinModel
      description: Bin Model
      properties:
        binID:
          description: Unique Bin Identifier assigned by the system
          type: integer
        locationID:
          description: Location Identifier of the owning location
          type: integer
        binTypeID:
          description: New Bin's Type ID
          type: integer
        binStatusID:
          description: New Bin's Status ID
          type: integer
        name:
          description: Client specified static bin name
          type: integer
      type: object
    BinResponseModel:
      title: BinResponseModel
      description: Bin Response Object
      properties:
        bins:
          description: list of resultant bins
          type: object
          $ref: "#/components/schemas/BinModel"
        resultCount:
          description: number of results
          type: integer
      type: object
    BinStatusModel:
      title: BinStatusModel
      description: Status of Bin
      properties:
        binStatusID:
          description: Bin Status Identifier
          type: integer
        description:
          description: Bin Status Description
          type: string
      type: object
    BinTypeModel:
      title: BinTypeModel
      description: Type of Bin
      properties:
        binTypeID:
          description: Bin Type Identifier
          type: integer
        description:
          description: Bin Type Description
          type: string
      type: object
    M_DeleteItem:
      title: M_DeleteItem
      description: Delete Item Model
      properties:
        productID:
          description: Product Identifier
          type: integer
        inventoryIDs:
          description: List of inventory identifiers associated with the deleted item
          type: array
          items:
            type: integer
        locationIDs:
          description: List of location identifiers associated with the deleted item
          type: array
          items:
            type: integer
        auditIDs:
          description: List of audit identifiers associated with the deleted item
          type: array
          items:
            type: integer
        itemIdentifier:
          description: Details about the item that was deleted
          $ref: "#/components/schemas/ProductIdentifier"
      type: object
    M_FetchFileConfig:
      title: M_FetchFileConfig
      description: Fetch File Config Model
      properties:
        fetchFileConfigID:
          description: Fetch File Config ID
          type: integer
        tenantID:
          description: Tenant ID
          type: integer
        active:
          description: Active
          type: boolean
        lastModified:
          description: Time config was last modified
          type: string
        emailList:
          description: Email List
          type: string
        refreshEnabled:
          description: Flag for Refresh Enabled
          type: boolean
        refreshFileDescription:
          description: Description for the refresh file
          type: string
        updateEnabled:
          description: Flag for Update Enabled
          type: boolean
        updateFileDescription:
          description: Description for the update file
          type: string
        ftpServer:
          description: FTP server address
          type: string
        ftpUsername:
          description: FTP server username
          type: string
        ftpPassword:
          description: FTP server password
          type: string
        ftpPort:
          description: FTP server port
          type: integer
        ftpRemotePath:
          description: FTP server remote path
          type: string
        ftpRemotePathArchive:
          description: FTP server remote path archive
          type: string
        region:
          description: S3 Region
          type: string
        s3Key:
          description: S3 Key
          type: string
        secret:
          description: S3 Secret
          type: string
        bucket:
          description: S3 Bucket
          type: string
        s3Path:
          description: S3 Bucket Path (directory)
          type: string
        archiveBucket:
          description: S3 Archive Bucket
          type: string
        s3ArchivePath:
          description: S3 Archive Bucket Path (directory)
          type: string
        lockName:
          description: Lock name
          type: string
        postProcessAction:
          description: Enum denoting action post processing
          type: integer
        useControlFile:
          description: Flag for using control file
          type: boolean
        multipleFiles:
          description: Flag for using multiple files
          type: boolean
        zeroOutNegatives:
          description: Flag for converting negatives to zero
          type: boolean
        fieldNameMap:
          description: List of field names
          type: array
          items:
            type: string
        ignoreExtraFields:
          description: Flag for ignoring extra fields
          type: boolean
        blankQuantityIsZero:
          description: Flag to convert null quantities to zero
          type: boolean
        csvDelimiter:
          description: CSV Delimiter
          type: string
        exportAfterRefresh:
          description: Flag for exporting after refresh
          type: boolean
        postImportExportId:
          description: Export id post import
          type: integer
        postImportFtpId:
          description: FTP id post import
          type: integer
        productMapping:
          title: productMapping
          description: Enum for fetch file mapping
          type: string
          enum:
            - SWAP_PART_NUMBER_WITH_UPC
            - SWAP_SKU_WITH_UPC
      type: object
    ProductIdentifier:
      title: ProductIdentifier
      description: Product Identifier Model
      properties:
        partNumber:
          description: Part/Product Number
          type: string
        upc:
          description: Universal Product Code
          type: string
        sku:
          description: Stock Keeping Unit
          type: string
      type: object
    TenantConfigModel:
      title: Tenant Config Model
      description: Model of a tenant config.
      properties:
        tenantID:
          description: A Tenant ID
          type: integer
        numEventSenderWorkers:
          description: Number of Event Sender Workers to run for this tenant.
          type: integer
        fetchWorkerConfigIds:
          description:
            Config IDs of Fetch Worker Configs to regularly run. Set this to
            [0] to run all configs.
          type: array
          items:
            type: string
        eventsToSend:
          description:
            "What level of events to send. Must be one of: NO_REFRESH_LOGS,
            WITH_REFRESH_LOGS, WITH_BASIC_EVENTS, ALL"
          type: string
        enableSyncApi:
          description: Whether our secret sync api is enabled for this tenant.
          type: boolean
        ignoreIdentifiers:
          description:
            "Which identifiers to ignore. Must be null or one of: NONE,
            IGNORE_IDENTIFIERS_SKU, IGNORE_IDENTIFIERS_PART_NUMBER,
            IGNORE_IDENTIFIERS_SKU_AND_PART_NUMBER"
          type: string
        tagsEnabled:
          description: Whether the tenant uses tags or not
          type: boolean
      type: object
    tags:
      description: Associative Map of <String, String> for tagCategoryName => tagName
      type: object
      additionalProperties:
        type: string
    taggedInventoryMap:
      type: array
      items:
        $ref: "#/components/schemas/TagQuantity"
    InventoryProduct:
      title: Product
      description: Product within a bin
      properties:
        partNumber:
          description: Part Number
          type: string
        upc:
          description: UPC
          type: string
        sku:
          description: SKU
          type: string
      type: object
    InventoryItem:
      title: Item
      description: Item
      properties:
        partNumber:
          description: Part/Product Number
          type: string
        upc:
          description: Universal Product Code
          type: string
        sku:
          description: Stock Keeping Unit
          type: string
      type: object
    InventoryCreateSiteRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Create Site Request
          description: Request for creating a site
          properties:
            name:
              title: name
              description: Site name
              type: string
            siteID:
              title: siteID
              description: Site ID
              type: integer
            tenantID:
              title: tenantID
              description: Tenant ID
              type: integer
          type: object
    InventoryCloneTenantRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Clone Tenant Request
          description: Request for creating a tenant
          properties:
            targetTenantName:
              title: targetTenantName
              description: Target Tenant name
              type: string
            sourceTenantID:
              title: sourceTenantID
              description: Source Tenant ID
              type: integer
            targetTenantID:
              title: targetTenantID
              description: Target Tenant ID
              type: integer
          type: object
    InventoryCreateTenantRequest:
      allOf:
        - $ref: "#/components/schemas/BaseRequest"
        - title: Create Tenant Request
          description: Request for creating a tenant
          properties:
            name:
              title: name
              description: Tenant name
              type: string
            tenantID:
              title: tenantID
              description: Tenant ID
              type: integer
          type: object
    BoxType:
      type: object
      properties:
        name:
          type: string
          nullable: true
        height:
          type: number
          format: double
          nullable: true
        width:
          type: number
          format: double
          nullable: true
        length:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    BpmConfiguration:
      type: object
      properties:
        shipmentType:
          type: string
          nullable: true
        workflowContainerId:
          type: string
          nullable: true
        workflowProcessId:
          type: string
          nullable: true
      additionalProperties: false
    Carrier:
      type: object
      properties:
        carrierType:
          type: string
          nullable: true
        isEnabled:
          type: boolean
        shippingMethodMappings:
          $ref: "#/components/schemas/ShippingMethodMappings"
      additionalProperties: false
    Coordinates:
      type: object
      properties:
        lat:
          type: number
          format: double
        lng:
          type: number
          format: double
      additionalProperties: false
    FulfillmentType:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    Hours:
      type: object
      properties:
        label:
          type: string
          nullable: true
        openTime:
          type: string
          nullable: true
        closeTime:
          type: string
          nullable: true
        isClosed:
          type: boolean
      additionalProperties: false
    Location:
      type: object
      properties:
        code:
          type: string
          nullable: true
        locationTypes:
          type: array
          items:
            $ref: "#/components/schemas/LocationType"
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        address:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
        geo:
          $ref: "#/components/schemas/Coordinates"
        phone:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        supportsInventory:
          type: boolean
        fulfillmentTypes:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentType"
          nullable: true
        regularHours:
          $ref: "#/components/schemas/RegularHours"
        shippingOriginContact:
          $ref: "#/components/schemas/ShippingOriginContact"
        note:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/LocationAttribute"
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        allowFulfillmentWithNoStock:
          type: boolean
        isDisabled:
          type: boolean
        express:
          type: boolean
        transferEnabled:
          type: boolean
        includeInInventoryAggregrate:
          type: boolean
        includeInLocationExport:
          type: boolean
        warehouseEnabled:
          type: boolean
        requiresManifest:
          type: boolean
      additionalProperties: false
    LocationAttribute:
      type: object
      properties:
        attributeDefinition:
          $ref: "#/components/schemas/CommerceRuntimeAttribute"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        fullyQualifiedName:
          type: string
          nullable: true
        attributeDefinitionId:
          type: integer
          format: int32
          nullable: true
        values:
          type: array
          items: {}
          nullable: true
      additionalProperties: false
    LocationCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Location"
          nullable: true
      additionalProperties: false
    LocationGroupCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/LocationLocationGroup"
          nullable: true
      additionalProperties: false
    LocationGroupConfiguration:
      type: object
      properties:
        tenantId:
          type: integer
          format: int32
        siteId:
          type: integer
          format: int32
        locationGroupId:
          type: integer
          format: int32
        locationGroupCode:
          type: string
          nullable: true
        customerFailedToPickupAfterAction:
          type: string
          nullable: true
        customerFailedToPickupDeadline:
          type: integer
          format: int32
          nullable: true
        sendCustomerPickupReminder:
          type: integer
          format: int32
          nullable: true
        enableForSTH:
          type: boolean
          nullable: true
        enableForISPU:
          type: boolean
          nullable: true
        enableAdvancedOptionForPickWaveCreation:
          type: boolean
          nullable: true
        maximumNumberOfOrdersInPickWave:
          type: integer
          format: int32
          nullable: true
        defaultNumberOfOrdersInPickWave:
          type: integer
          format: int32
          nullable: true
        pickWavePrintFormat:
          type: string
          nullable: true
        closePickWavePermissions:
          type: array
          items:
            type: string
          nullable: true
        wmsEnabled:
          type: boolean
          nullable: true
        enableScanningOfUpcForShipToHome:
          type: boolean
          nullable: true
        allowReturns:
          type: boolean
          nullable: true
        returnRefundReduction:
          type: boolean
          nullable: true
        defaultReturnRefundReductionAmount:
          type: integer
          format: int32
          nullable: true
        maximumReturnRefundReductionAmount:
          type: integer
          format: int32
          nullable: true
        defaultCarrier:
          type: string
          nullable: true
        carriers:
          type: array
          items:
            $ref: "#/components/schemas/Carrier"
          nullable: true
        printReturnLabel:
          type: boolean
          nullable: true
        defaultPrinterType:
          type: string
          nullable: true
        boxTypes:
          type: array
          items:
            $ref: "#/components/schemas/BoxType"
          nullable: true
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/LocationAttribute"
          nullable: true
        bpmConfigurations:
          type: array
          items:
            $ref: "#/components/schemas/BpmConfiguration"
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        autoPackingListPopup:
          type: boolean
          nullable: true
        blockPartialStock:
          type: boolean
          nullable: true
        defaultMaxNumberOfShipmentsInPickWave:
          type: integer
          format: int32
          nullable: true
        displayProductImagesInPickWaveDetails:
          type: boolean
          nullable: true
        enablePnpForSTH:
          type: boolean
          nullable: true
        enablePnpForBOPIS:
          type: boolean
          nullable: true
        blockPartialCancel:
          type: boolean
          nullable: true
        packageSettings:
          $ref: "#/components/schemas/PackageSettings"
      additionalProperties: false
    LocationType:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    LocationUsage:
      type: object
      properties:
        locationUsageTypeCode:
          type: string
          nullable: true
        locationTypeCodes:
          type: array
          items:
            type: string
          nullable: true
        locationCodes:
          type: array
          items:
            type: string
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    LocationUsageCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/LocationUsage"
          nullable: true
      additionalProperties: false
    PackageSettings:
      type: object
      properties:
        unitType:
          type: string
          nullable: true
      additionalProperties: false
    RegularHours:
      type: object
      properties:
        sunday:
          $ref: "#/components/schemas/Hours"
        monday:
          $ref: "#/components/schemas/Hours"
        tuesday:
          $ref: "#/components/schemas/Hours"
        wednesday:
          $ref: "#/components/schemas/Hours"
        thursday:
          $ref: "#/components/schemas/Hours"
        friday:
          $ref: "#/components/schemas/Hours"
        saturday:
          $ref: "#/components/schemas/Hours"
        timeZone:
          type: string
          nullable: true
      additionalProperties: false
    ShippingMethodMappings:
      type: object
      properties:
        shippingMethods:
          type: array
          items:
            type: string
          nullable: true
        returnLabelShippingMethod:
          type: string
          nullable: true
        standardDefault:
          type: string
          nullable: true
        express1DayDefault:
          type: string
          nullable: true
        express2DayDefault:
          type: string
          nullable: true
        express3DayDefault:
          type: string
          nullable: true
        enableSmartPost:
          type: boolean
          nullable: true
        internationalUsReturnLabelShippingMethod:
          type: string
          nullable: true
      additionalProperties: false
    ShippingOriginContact:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        middleNameOrInitial:
          type: string
          nullable: true
        lastNameOrSurname:
          type: string
          nullable: true
        companyOrOrganization:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    LocationLocationGroup:
      type: object
      properties:
        locationGroupId:
          type: integer
          format: int32
        locationGroupCode:
          type: string
          nullable: true
        siteIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        name:
          type: string
          nullable: true
        locationCodes:
          type: array
          items:
            type: string
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    EntityCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items: {}
          nullable: true
      additionalProperties: false
    EntityContainer:
      type: object
      properties:
        tenantId:
          type: integer
          format: int32
        siteId:
          type: integer
          format: int32
          nullable: true
        masterCatalogId:
          type: integer
          format: int32
          nullable: true
        catalogId:
          type: integer
          format: int32
          nullable: true
        localeCode:
          type: string
          description:
            The localeCode for the Entity. This will only be populated for
            EntityLists that are created with IsLocaleSpecific set to true.
          nullable: true
        listFullName:
          type: string
          description: The nameSpace and name for the EntityList in the format
            name@nameSpace.
          nullable: true
        userId:
          type: string
          description:
            The userId of the shopper account associated with this Entity. This
            will only be populated for EntityLists that are creaetd with
            IsShopperSpecific set to true.
          nullable: true
        id:
          type: string
          description: The unique identifier for the Entity.
          nullable: true
        item:
          description: The entity in json format.
          nullable: true
        createBy:
          type: string
          nullable: true
        createDate:
          type: string
          format: date-time
        updateBy:
          type: string
          nullable: true
        updateDate:
          type: string
          format: date-time
      additionalProperties: false
      description:
        The metadata and Entity contents for an entity persisted in an
        EntityList in MZDB. The Item property contains the json representation
        of the Entity
    EntityContainerCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/EntityContainer"
          nullable: true
      additionalProperties: false
    EntityList:
      type: object
      properties:
        tenantId:
          type: integer
          format: int32
        nameSpace:
          type: string
          description:
            The nameSpace for the EntityList which must be within the nameSpace
            scope of the developer Account for the creating application.  The
            name and namespace are formatted as name@nameSpace when specified as
            fullName. An EntityLists fullName must be unique within the tenant
            in which it is created.
          nullable: true
        name:
          type: string
          description:
            The name for the EntityList which must be unique within the
            namespace provided.  The name and namespace are formatted as
            name@nameSpace when specified as fullName. An EntityLists fullName
            must be unique within the tenant in which it is created.
          nullable: true
        contextLevel:
          type: string
          description:
            At which context level are entities stored in the list. Possible
            values are "tenant", "site", "masterCatalog" or "catalog".  Each
            list instance will exist at this context level for the tenant.
          nullable: true
        useSystemAssignedId:
          type: boolean
          description:
            Indicates whether or not Mozu should assign a generated identifier
            for each entity in the list or whether a unique identifier will be
            provided for each identity. If set to false, then a value must be
            provided for the IdProperty for the list.
        idProperty:
          $ref: "#/components/schemas/IndexedProperty"
        indexA:
          $ref: "#/components/schemas/IndexedProperty"
        indexB:
          $ref: "#/components/schemas/IndexedProperty"
        indexC:
          $ref: "#/components/schemas/IndexedProperty"
        indexD:
          $ref: "#/components/schemas/IndexedProperty"
        isVisibleInStorefront:
          type: boolean
          description:
            Indicates whether Enitities in the EntityList are allowed to be
            accessed from a Mozu storefront.
        isLocaleSpecific:
          type: boolean
          description:
            Indicates whether MZDB should store entities in the EntityList
            instance specific to the localeCode provided.  If true, all
            operations on the EntityList will be filtered by the provided
            localeCode on the request or using the defautLocaleCode for the
            context.  All entities created in the EntityList will be stored with
            the localeCode provided on the request or the defautLocaleCode for
            the context as an additional implicit key. The default value is
            false.
        isShopperSpecific:
          type: boolean
          description:
            Indicates whether MZDB should store entities in the EntityList
            instance specific to the current shopper on the request.  If true,
            all operations on the EntityList will be filtered by the id of the
            shopper from the shopper claims provided on the request.  All
            entities created in the EntityList will be stored with the id of the
            shopper from the shopper claims provided on the request as an
            additional implicit key. The default value is false.
        isSandboxDataCloningSupported:
          type: boolean
          description:
            Indicates whether MZDB should clone all of the Entities in the
            EntityList when cloning an existing sandbox for which this list is
            already defined.  The default value is false.
        views:
          type: array
          items:
            $ref: "#/components/schemas/ListView"
          description:
            The ListViews defined for this EntityList.  ListViews may be used
            to automatically filter an EntityList or transform the Entities in
            the list to a new Schema.
          nullable: true
        usages:
          type: array
          items:
            type: string
          description:
            Usages are arbitratry sting values used to provide instructions for
            other applications as to the intended areas where the list should be
            used. Mozu uses the "admin" usage valued to indicate that an
            EntityList should appear in the EntityManager in the Admin UI.  The
            values are open ended and applications may provide any value for a
            usage. This field can be used in queries to the EntityList.
          nullable: true
        metadata:
          description:
            An arbitrary json property to be used by external applications for
            any purpose. MZDB will persist and retrieve the metadata without any
            restrictions.
          nullable: true
        createDate:
          type: string
          format: date-time
        updateDate:
          type: string
          format: date-time
      additionalProperties: false
      description: The definition of an MZDB EntityList which describes the
        characteristics of the EntityList on a per tenant basis. EntityLists are
        created at the tenant level, but instances of the EntityLists are
        implicitly created at the appropriate context level as entities are
        added or removed from the EntityList.
    EntityListCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/EntityList"
          nullable: true
      additionalProperties: false
    IndexedProperty:
      type: object
      properties:
        propertyName:
          type: string
          description:
            A JPath query indicating the property that should be indexed to
            enable querying and sorting.  Non-indexed properties may be used in
            queries as long as at least one indexed property is also provided in
            the query.
          nullable: true
        dataType:
          type: string
          description:
            The datatype of the property. Valid values are "string", "integer",
            "decimal", "date", "bool". See SharedConstants.DataTypeConst
          nullable: true
      additionalProperties: false
    ListView:
      type: object
      properties:
        name:
          type: string
          description: The name of the ListView. This must be unique for the EntityList.
          nullable: true
        usages:
          type: array
          items:
            type: string
          description:
            Usages are arbitratry sting values used to provide instructions for
            other applications as to the intended areas where the view should be
            used. Mozu uses the "admin" usage valued to indicate that a ListView
            should appear in the EntityManager in the Admin UI.  The values are
            open ended and applications may provide any value for a usage. This
            field can be used in queries to the EntityList.
          nullable: true
        metaData:
          description:
            An arbitrary json property to be used by external applications for
            any purpose. MZDB will persist and retrieve the metadata without any
            restrictions.
          nullable: true
        security:
          type: string
          description:
            less restrictive than collection/list security. public | admin |
            owner
          nullable: true
        filter:
          type: string
          description:
            Indicates a implicitly applied filter to the EntityList for to
            which the ListView is associated. All queries to the ListView will
            have this filter applied implicitly.
          nullable: true
        defaultSort:
          type: string
          description: Indicates a default sort to be applied to the ListView.
          nullable: true
        fields:
          type: array
          items:
            $ref: "#/components/schemas/ListViewField"
          description:
            The list of ViewFields for this view. ViewFields can be used to
            filter or transform the underlying Entity to provide an optimized
            format for applications which query the ListView.  If no ViewFields
            are specified, entities will be returned for the View with no
            transform applied.
          nullable: true
      additionalProperties: false
    ListViewCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ListView"
          nullable: true
      additionalProperties: false
    ListViewField:
      type: object
      properties:
        name:
          type: string
          description: The name of the field in the view.
          nullable: true
        type:
          type: string
          description:
            The datatype of the field. Valid values are "string", "integer",
            "decimal", "date", "bool". See SharedConstants.DataTypeConst
          nullable: true
        target:
          type: string
          description: A JPath query to the source property for this ViewField.
          nullable: true
      additionalProperties: false
      description: shared by cms/mzdb.
    StringStringIEnumerableKeyValuePair:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    MZDBHttpContent:
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: "#/components/schemas/StringStringIEnumerableKeyValuePair"
          nullable: true
          readOnly: true
      additionalProperties: false
    MZDBHttpRequestMessage:
      type: object
      properties:
        version:
          type: string
          nullable: true
        content:
          $ref: "#/components/schemas/MZDBHttpContent"
        method:
          $ref: "#/components/schemas/HttpMethod"
        requestUri:
          type: string
          format: uri
          nullable: true
        headers:
          type: array
          items:
            $ref: "#/components/schemas/StringStringIEnumerableKeyValuePair"
          nullable: true
          readOnly: true
        properties:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
      additionalProperties: false
    MZDBByteArrayContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/MZDBHttpContent"
      additionalProperties: false
    MZDBDecompressedContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/MZDBHttpContent"
      additionalProperties: false
    MZDBHttpConnectionResponseContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/MZDBHttpContent"
      additionalProperties: false
    MZDBNoWriteNoSeekStreamContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/MZDBHttpContent"
      additionalProperties: false
    MZDBReadOnlyMemoryContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/MZDBHttpContent"
      additionalProperties: false
    MZDBStreamContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/MZDBHttpContent"
      additionalProperties: false
    MZDBBrotliDecompressedContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/MZDBDecompressedContent"
      additionalProperties: false
    MZDBDeflateDecompressedContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/MZDBDecompressedContent"
      additionalProperties: false
    MZDBFormUrlEncodedContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/MZDBByteArrayContent"
      additionalProperties: false
    MZDBGZipDecompressedContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/MZDBDecompressedContent"
      additionalProperties: false
    MZDBStringContent:
      type: object
      allOf:
        - $ref: "#/components/schemas/MZDBByteArrayContent"
      additionalProperties: false
    AbstractFilter:
      title: AbstractFilter
      type: object
      properties:
        booleanOperator:
          type: string
          enum:
            - filter.logic.equal
            - filter.logic.not.equal
            - filter.logic.greater.than
            - filter.logic.less.than
            - filter.logic.greater.or.equal
            - filter.logic.less.or.equal
            - filter.logic.in
            - filter.logic.not.in
            - filter.logic.between
            - filter.logic.starts.with
            - filter.logic.ends.with
            - filter.logic.contains
            - filter.logic.subset
        created:
          type: string
          format: date-time
        creatorUsername:
          type: string
        customAttributeName:
          type: string
        dotDelimitedPropertyName:
          type: string
        environmentID:
          type: integer
          format: int32
        filterID:
          type: integer
          format: int32
        filterUnit:
          $ref: "#/components/schemas/UnitOfobject"
        name:
          type: string
        pathString:
          type: string
        persisted:
          type: boolean
        siteID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
        updated:
          type: string
          format: date-time
        updaterUsername:
          type: string
        userContext:
          $ref: "#/components/schemas/UserContextInformation"
    AssignmentSuggestion:
      title: AssignmentSuggestion
      type: object
      properties:
        locationCode:
          type: string
        orderItemID:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    CandidateSuggestion:
      title: CandidateSuggestion
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        countryCode:
          type: string
        directShip:
          type: boolean
        distance:
          $ref: "#/components/schemas/DecimalMeasure"
        express:
          type: boolean
        inventory:
          type: array
          items:
            $ref: "#/components/schemas/CandidateSuggestionInventory"
        latitude:
          type: number
          format: double
        locationCode:
          type: string
        locationName:
          type: string
        longitude:
          type: number
          format: double
        pickup:
          type: boolean
        postalCode:
          type: string
        state:
          type: string
        transferEnabled:
          type: boolean
    CandidateSuggestionInventory:
      title: CandidateSuggestionInventory
      type: object
      properties:
        available:
          type: integer
          format: int32
        partNumber:
          type: string
        sku:
          type: string
        upc:
          type: string
    CandidateSuggestionsRequest:
      title: CandidateSuggestionsRequest
      type: object
      properties:
        environmentID:
          type: integer
          format: int32
        exclusionListLocationCode:
          type: array
          items:
            $ref: "#/components/schemas/ExclusionListEntryLocationCode"
        inventoryRequestType:
          type: string
          enum:
            - ALL
            - PARTIAL
            - ANY
            - ALL_STORES
        isExpress:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/ApiDocumentationOrderItem"
        locationCodeWhiteList:
          type: array
          items:
            type: string
        orderType:
          type: string
          enum:
            - DIRECTSHIP
            - TRANSFER
        pickupLocationCode:
          type: string
        shippingAddress:
          $ref: "#/components/schemas/ShippingAddress"
    CandidateSuggestionsResponse:
      title: CandidateSuggestionsResponse
      type: object
      properties:
        candidateSuggestions:
          type: array
          items:
            $ref: "#/components/schemas/CandidateSuggestion"
    CustomDataList:
      title: CustomDataList
      type: object
      properties:
        created:
          type: string
          format: date-time
        creatorUsername:
          type: string
        customDataListID:
          type: integer
          format: int32
        dataType:
          type: string
          enum:
            - STRING
            - NUMBER
            - LOCATION
        entries:
          type: array
          items:
            $ref: "#/components/schemas/CustomDataListEntry"
        environmentID:
          type: integer
          format: int32
        fileName:
          type: string
        name:
          type: string
        notes:
          type: string
        pathString:
          type: string
        persisted:
          type: boolean
        siteID:
          type: integer
          format: int32
        state:
          type: string
          enum:
            - dataset.ready
            - dataset.processing
            - dataset.error.processing
        stringValues:
          type: array
          items:
            type: string
        tenantID:
          type: integer
          format: int32
        updated:
          type: string
          format: date-time
        updaterUsername:
          type: string
        userContext:
          $ref: "#/components/schemas/UserContextInformation"
        values:
          type: array
          items:
            type: object
            properties: {}
    CustomDataListEntry:
      title: CustomDataListEntry
      type: object
      properties:
        customDataListEntryID:
          type: integer
          format: int32
        dataValid:
          type: boolean
        list:
          $ref: "#/components/schemas/CustomDataList"
        notes:
          type: string
        stringValue:
          type: string
    CustomDataListEntryResponse:
      title: CustomDataListEntryResponse
      type: object
      properties:
        id:
          type: integer
          format: int32
        locationAddress:
          type: string
        locationID:
          type: integer
          format: int32
        locationName:
          type: string
        notes:
          type: string
        stringValue:
          type: string
    CustomDataListFilter:
      title: CustomDataListFilter
      type: object
      properties:
        booleanOperator:
          type: string
          enum:
            - filter.logic.equal
            - filter.logic.not.equal
            - filter.logic.greater.than
            - filter.logic.less.than
            - filter.logic.greater.or.equal
            - filter.logic.less.or.equal
            - filter.logic.in
            - filter.logic.not.in
            - filter.logic.between
            - filter.logic.starts.with
            - filter.logic.ends.with
            - filter.logic.contains
            - filter.logic.subset
        created:
          type: string
          format: date-time
        creatorUsername:
          type: string
        customAttributeName:
          type: string
        customDataListID:
          type: integer
          format: int32
        dotDelimitedPropertyName:
          type: string
        environmentID:
          type: integer
          format: int32
        filterID:
          type: integer
          format: int32
        filterUnit:
          $ref: "#/components/schemas/UnitOfobject"
        name:
          type: string
        pathString:
          type: string
        persisted:
          type: boolean
        siteID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
        updated:
          type: string
          format: date-time
        updaterUsername:
          type: string
        userContext:
          $ref: "#/components/schemas/UserContextInformation"
    CustomDataListResponse:
      title: CustomDataListResponse
      type: object
      properties:
        created:
          type: string
        creator:
          type: string
        dataType:
          type: string
          enum:
            - STRING
            - NUMBER
            - LOCATION
        entries:
          type: array
          items:
            $ref: "#/components/schemas/CustomDataListEntryResponse"
        environmentID:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        name:
          type: string
        notes:
          type: string
        siteID:
          type: integer
          format: int32
        state:
          type: string
          enum:
            - dataset.ready
            - dataset.processing
            - dataset.error.processing
        tenantID:
          type: integer
          format: int32
        updated:
          type: string
        updater:
          type: string
    CustomDataValueFilter:
      title: CustomDataValueFilter
      type: object
      properties:
        booleanOperator:
          type: string
          enum:
            - filter.logic.equal
            - filter.logic.not.equal
            - filter.logic.greater.than
            - filter.logic.less.than
            - filter.logic.greater.or.equal
            - filter.logic.less.or.equal
            - filter.logic.in
            - filter.logic.not.in
            - filter.logic.between
            - filter.logic.starts.with
            - filter.logic.ends.with
            - filter.logic.contains
            - filter.logic.subset
        created:
          type: string
          format: date-time
        creatorUsername:
          type: string
        customAttributeName:
          type: string
        customDataValue:
          $ref: "#/components/schemas/CustomDataValueOfobject"
        dotDelimitedPropertyName:
          type: string
        environmentID:
          type: integer
          format: int32
        filterID:
          type: integer
          format: int32
        filterUnit:
          $ref: "#/components/schemas/UnitOfobject"
        name:
          type: string
        pathString:
          type: string
        persisted:
          type: boolean
        siteID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
        updated:
          type: string
          format: date-time
        updaterUsername:
          type: string
        userContext:
          $ref: "#/components/schemas/UserContextInformation"
    CustomDataValueOfobject:
      title: CustomDataValueOfobject
      type: object
      properties:
        created:
          type: string
          format: date-time
        creatorUsername:
          type: string
        customDataValueID:
          type: integer
          format: int32
        environmentID:
          type: integer
          format: int32
        name:
          type: string
        pathString:
          type: string
        persisted:
          type: boolean
        siteID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
        updated:
          type: string
          format: date-time
        updaterUsername:
          type: string
        userContext:
          $ref: "#/components/schemas/UserContextInformation"
    DecimalMeasure:
      title: DecimalMeasure
      type: object
      properties:
        unit:
          $ref: "#/components/schemas/UnitOfQuantity"
        value:
          type: number
    DeleteSiteRequest:
      title: DeleteSiteRequest
      type: object
      properties:
        siteID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
    DeleteTenantRequest:
      title: DeleteTenantRequest
      type: object
      properties:
        tenantID:
          type: integer
          format: int32
    Dimension:
      title: Dimension
      type: object
    EnvironmentExportModel:
      title: EnvironmentExportModel
      type: object
      properties:
        customDataListEntries:
          type: array
          items:
            type: object
            properties: {}
        customDataLists:
          type: array
          items:
            type: object
            properties: {}
        customDataValues:
          type: array
          items:
            type: object
            properties: {}
        environmentValues:
          type: object
          properties: {}
        filters:
          type: array
          items:
            type: object
            properties: {}
        fulfillmentLimits:
          type: array
          items:
            type: object
            properties: {}
        groupAfterActions:
          type: array
          items:
            type: object
            properties: {}
        groupFilters:
          type: array
          items:
            type: object
            properties: {}
        groupSorts:
          type: array
          items:
            type: object
            properties: {}
        groups:
          type: array
          items:
            type: object
            properties: {}
        locationCriteriaSetDataDefinitionMaps:
          type: array
          items:
            type: object
            properties: {}
        locationCriteriaSetDataDefinitions:
          type: array
          items:
            type: object
            properties: {}
        locationCriteriaSetEntries:
          type: array
          items:
            type: object
            properties: {}
        locationCriteriaSetEntryMaps:
          type: array
          items:
            type: object
            properties: {}
        locationCriteriaSetFilterDefinitions:
          type: array
          items:
            type: object
            properties: {}
        locationCriteriaSets:
          type: array
          items:
            type: object
            properties: {}
        locationExclusionLists:
          type: array
          items:
            type: object
            properties: {}
        locationSorts:
          type: array
          items:
            type: object
            properties: {}
        locationStatusHolds:
          type: array
          items:
            type: object
            properties: {}
        locationStatuses:
          type: array
          items:
            type: object
            properties: {}
        rankedLocationMaps:
          type: array
          items:
            type: object
            properties: {}
        routes:
          type: array
          items:
            type: object
            properties: {}
        siteID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
    ExclusionListEntryLocationCode:
      title: ExclusionListEntryLocationCode
      type: object
      properties:
        locationCode:
          type: string
        orderItemID:
          type: integer
          format: int32
    FilterAttribute:
      title: FilterAttribute
      type: object
      properties:
        filterTypeGroup:
          type: string
          enum:
            - ORDER_FLAGS
            - ORDER_INFO
            - FULFILLMENT_LOCATION_INFO
            - FULFILLMENT_INVENTORY_INFO
            - ITEM_ATTRIBUTES
            - UNKNOWN
        langTag:
          type: string
        name:
          type: string
        propertyPath:
          type: string
        unitType:
          type: string
          enum:
            - unit.type.currency
            - unit.type.distance
            - unit.type.length
            - unit.type.volume
            - unit.type.area
            - unit.type.weight
            - unit.type.dimensionless
    FulfillmentLimit:
      title: FulfillmentLimit
      type: object
      properties:
        created:
          type: string
          format: date-time
        creatorUsername:
          type: string
        durationType:
          type: string
          enum:
            - HOURS
            - DAYS
            - WEEKS
            - MONTHS
        environmentID:
          type: integer
          format: int32
        fulfillmentLimit:
          type: number
        fulfillmentLimitID:
          type: integer
          format: int32
        fulfillmentType:
          type: string
          enum:
            - ORDERS
            - ITEMS
            - DOLLARS
        name:
          type: string
        pathString:
          type: string
        persisted:
          type: boolean
        siteID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
        updated:
          type: string
          format: date-time
        updaterUsername:
          type: string
        userContext:
          $ref: "#/components/schemas/UserContextInformation"
    GroupAfterAction:
      title: GroupAfterAction
      type: object
      properties:
        actionID:
          type: integer
          format: int32
        created:
          type: string
          format: date-time
        creatorUsername:
          type: string
        environmentID:
          type: integer
          format: int32
        failoverAction:
          type: string
          enum:
            - LINE_ITEM_SPLIT_ASSIGN_IF_FULFILLED
            - LINE_ITEM_SPLIT_CANCEL_WITHOUT_INVENTORY
            - QUANTITY_SPLIT_ASSIGN_IF_FULFILLED
            - QUANTITY_SPLIT_CANCEL_WITHOUT_INVENTORY
            - CANCEL_ORDER
            - ASSIGN_TO_CUSTOMER_CARE
            - ASSIGN_TO_GROUP
            - LINE_ITEM_SPLIT_ASSIGN_CUSTOMER_CARE_WITHOUT_INVENTORY
            - QUANTITY_SPLIT_ASSIGN_CUSTOMER_CARE_WITHOUT_INVENTORY
            - SEND_ORDER_TO_BIDDING
            - LINE_ITEM_SPLIT_BACKORDER_WITHOUT_INVENTORY
            - QUANTITY_SPLIT_BACKORDER_WITHOUT_INVENTORY
            - ASSIGN_TO_BACKORDER
        name:
          type: string
        pathString:
          type: string
        persisted:
          type: boolean
        restartAttempt:
          type: string
          enum:
            - START_AT_BEGINNING
            - CURRENT_GROUP
            - GROUP_RANK
        siteID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
        updated:
          type: string
          format: date-time
        updaterUsername:
          type: string
        userContext:
          $ref: "#/components/schemas/UserContextInformation"
    JsonNode:
      title: JsonNode
      type: object
      properties:
        array:
          type: boolean
        bigDecimal:
          type: boolean
        bigInteger:
          type: boolean
        binary:
          type: boolean
        boolean:
          type: boolean
        containerNode:
          type: boolean
        double:
          type: boolean
        float:
          type: boolean
        floatingPointNumber:
          type: boolean
        int:
          type: boolean
        integralNumber:
          type: boolean
        long:
          type: boolean
        missingNode:
          type: boolean
        nodeType:
          type: string
          enum:
            - ARRAY
            - BINARY
            - BOOLEAN
            - MISSING
            - "null"
            - NUMBER
            - OBJECT
            - POJO
            - STRING
        "null":
          type: boolean
        number:
          type: boolean
        object:
          type: boolean
        pojo:
          type: boolean
        short:
          type: boolean
        textual:
          type: boolean
        valueNode:
          type: boolean
    LocationCriteriaSet:
      title: LocationCriteriaSet
      type: object
      properties:
        columnDefinitions:
          type: array
          items:
            $ref: "#/components/schemas/LocationCriteriaSetDataDefinition"
        created:
          type: string
          format: date-time
        creatorUsername:
          type: string
        environmentID:
          type: integer
          format: int32
        fileName:
          type: string
        locationCriteriaSetID:
          type: integer
          format: int32
        pathString:
          type: string
        persisted:
          type: boolean
        readyState:
          type: string
          enum:
            - dataset.ready
            - dataset.processing
            - dataset.error.processing
        siteID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
        updated:
          type: string
          format: date-time
        updaterUsername:
          type: string
        userContext:
          $ref: "#/components/schemas/UserContextInformation"
    LocationCriteriaSetDataDefinition:
      title: LocationCriteriaSetDataDefinition
      type: object
      properties:
        columnName:
          type: string
        created:
          type: string
          format: date-time
        creatorUsername:
          type: string
        dataDefinitionID:
          type: integer
          format: int32
        dataUnitString:
          type: string
        defaultValue:
          type: string
        environmentID:
          type: integer
          format: int32
        filterable:
          type: boolean
        name:
          type: string
        pathString:
          type: string
        persisted:
          type: boolean
        siteID:
          type: integer
          format: int32
        sortable:
          type: boolean
        tenantID:
          type: integer
          format: int32
        unit:
          $ref: "#/components/schemas/UnitOfobject"
        updated:
          type: string
          format: date-time
        updaterUsername:
          type: string
        userContext:
          $ref: "#/components/schemas/UserContextInformation"
    LocationCriteriaSetFilter:
      title: LocationCriteriaSetFilter
      type: object
      properties:
        acceptNulls:
          type: boolean
        booleanOperator:
          type: string
          enum:
            - filter.logic.equal
            - filter.logic.not.equal
            - filter.logic.greater.than
            - filter.logic.less.than
            - filter.logic.greater.or.equal
            - filter.logic.less.or.equal
            - filter.logic.in
            - filter.logic.not.in
            - filter.logic.between
            - filter.logic.starts.with
            - filter.logic.ends.with
            - filter.logic.contains
            - filter.logic.subset
        created:
          type: string
          format: date-time
        creatorUsername:
          type: string
        customAttributeName:
          type: string
        definitions:
          type: array
          items:
            $ref: "#/components/schemas/LocationCriteriaSetDataDefinition"
        dotDelimitedPropertyName:
          type: string
        environmentID:
          type: integer
          format: int32
        filterID:
          type: integer
          format: int32
        filterUnit:
          $ref: "#/components/schemas/UnitOfobject"
        locationCriteriaSet:
          $ref: "#/components/schemas/LocationCriteriaSet"
        name:
          type: string
        pathString:
          type: string
        persisted:
          type: boolean
        siteID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
        updated:
          type: string
          format: date-time
        updaterUsername:
          type: string
        userContext:
          $ref: "#/components/schemas/UserContextInformation"
    LocationSort:
      title: LocationSort
      type: object
      properties:
        created:
          type: string
          format: date-time
        creatorUsername:
          type: string
        descending:
          type: boolean
        environmentID:
          type: integer
          format: int32
        locationSortID:
          type: integer
          format: int32
        name:
          type: string
        pathString:
          type: string
        persisted:
          type: boolean
        siteID:
          type: integer
          format: int32
        sortingType:
          type: string
          enum:
            - RANK
            - DISTANCE
            - LTD
            - COST
            - RANDOM
            - DATA_SET
        tenantID:
          type: integer
          format: int32
        updated:
          type: string
          format: date-time
        updaterUsername:
          type: string
        userContext:
          $ref: "#/components/schemas/UserContextInformation"
    OrderRoutingSettings:
      title: OrderRoutingSettings
      type: object
      properties:
        allowInternationalAssignment:
          type: boolean
        autoAssignLimit:
          type: integer
          format: int32
        defaultStateChange:
          type: string
          enum:
            - CANCEL
            - CUSTOMER_CARE
            - AVAILABLE
            - BACKORDER
        failoverActions:
          type: array
          items:
            type: string
            enum:
              - LINE_ITEM_SPLIT_ASSIGN_IF_FULFILLED
              - LINE_ITEM_SPLIT_CANCEL_WITHOUT_INVENTORY
              - QUANTITY_SPLIT_ASSIGN_IF_FULFILLED
              - QUANTITY_SPLIT_CANCEL_WITHOUT_INVENTORY
              - CANCEL_ORDER
              - ASSIGN_TO_CUSTOMER_CARE
              - ASSIGN_TO_GROUP
              - LINE_ITEM_SPLIT_ASSIGN_CUSTOMER_CARE_WITHOUT_INVENTORY
              - QUANTITY_SPLIT_ASSIGN_CUSTOMER_CARE_WITHOUT_INVENTORY
              - SEND_ORDER_TO_BIDDING
              - LINE_ITEM_SPLIT_BACKORDER_WITHOUT_INVENTORY
              - QUANTITY_SPLIT_BACKORDER_WITHOUT_INVENTORY
              - ASSIGN_TO_BACKORDER
        filterAttributes:
          type: array
          items:
            $ref: "#/components/schemas/FilterAttribute"
        maxFulfillingLocations:
          type: integer
          format: int32
        maxSplitItemLocations:
          type: integer
          format: int32
        productIdentifierMapping:
          type: string
          enum:
            - PART_NUMBER_ONLY
            - UPC_ONLY
            - SKU_ONLY
            - PART_NUMBER_AND_UPC
            - PART_NUMBER_AND_SKU
            - UPC_AND_SKU
            - PART_NUMBER_AND_UPC_AND_SKU
        siteID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
        tooManyAssignsAction:
          type: string
    Principal:
      title: Principal
      type: object
      properties:
        name:
          type: string
    RankedLocation:
      title: RankedLocation
      type: object
      properties:
        locationID:
          type: integer
          format: int32
        rank:
          type: integer
          format: int32
    ShippingAddress:
      title: ShippingAddress
      type: object
      properties:
        addressID:
          type: integer
          format: int32
        addressLine1:
          type: string
        city:
          type: string
        countryCode:
          type: string
        customerID:
          type: integer
          format: int32
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        phone:
          type: string
        postalCode:
          type: string
        state:
          type: string
    SiteService:
      title: SiteService
      type: object
    StateChangeSuggestion:
      title: StateChangeSuggestion
      type: object
      properties:
        orderItemID:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        stateChange:
          type: string
          enum:
            - CANCEL
            - CUSTOMER_CARE
            - AVAILABLE
            - BACKORDER
    SuggestionEvent:
      title: SuggestionEvent
      type: object
      properties:
        causeID:
          type: integer
          format: int32
        errors:
          type: array
          items:
            type: string
        name:
          type: string
        type:
          type: string
          enum:
            - NEW_REQUEST
            - ROUTE_SELECTED
            - MAKE_LOCATIONS_AVAILABLE
            - NO_ROUTE_FOUND
            - REMOVED_INACTIVE_LOCATIONS
            - REMOVED_ON_HOLD_LOCATIONS
            - REMOVED_OVERFULFILLED_LOCATIONS
            - GROUP
            - GROUP_FILTER
            - GROUP_SORT
            - FILTER
            - SORT
            - AFTER_ACTION
            - FOUND_FULL_ORDER_LOCATION
            - RESPONSE
            - AFTER_ACTION_SORT
            - DEFAULT_RESPONSE
            - MAX_SPLITS_EXCEEDED
            - AUTO_ASSIGN_LIMIT_EXCEEDED
            - INVENTORY_REQUEST
            - REMOVED_INTERNATIONAL_LOCATIONS
    SuggestionLog:
      title: SuggestionLog
      type: object
      properties:
        created:
          type: string
          format: date-time
        creatorUsername:
          type: string
        environmentID:
          type: integer
          format: int32
        events:
          type: array
          items:
            $ref: "#/components/schemas/SuggestionEvent"
        externalResponseID:
          type: string
        orderID:
          type: integer
          format: int32
        pathString:
          type: string
        persisted:
          type: boolean
        siteID:
          type: integer
          format: int32
        suggestionID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
        updated:
          type: string
          format: date-time
        updaterUsername:
          type: string
    SuggestionRequest:
      title: SuggestionRequest
      type: object
      properties:
        bundlingStrategy:
          type: string
          enum:
            - ITEM_DEPENDENCY
        customData:
          type: object
          additionalProperties:
            type: string
        environmentID:
          type: integer
          format: int32
        exclusionListLocationCode:
          type: array
          items:
            $ref: "#/components/schemas/ExclusionListEntryLocationCode"
        externalResponseID:
          type: string
        fraud:
          type: integer
          format: int32
        inventoryRequestType:
          type: string
          enum:
            - ALL
            - PARTIAL
            - ANY
            - ALL_STORES
        isExpress:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/ApiDocumentationOrderItem"
        locationCodeWhiteList:
          type: array
          items:
            type: string
        numShipmentsNotInRequest:
          type: integer
          format: int32
        orderID:
          type: integer
          format: int32
        orderType:
          type: string
          enum:
            - DIRECTSHIP
            - TRANSFER
        pickupLocationCode:
          type: string
        shippingAddress:
          $ref: "#/components/schemas/ShippingAddress"
        total:
          type: number
    SuggestionResponse:
      title: SuggestionResponse
      type: object
      properties:
        assignmentSuggestions:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/AssignmentSuggestion"
        availableLocations:
          type: array
          items:
            type: integer
            format: int32
        externalResponseID:
          type: string
        responseID:
          type: integer
          format: int32
        stateChangeSuggestions:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/StateChangeSuggestion"
        suggestionLog:
          $ref: "#/components/schemas/SuggestionLog"
    TenantService:
      title: TenantService
      type: object
    UnitOfQuantity:
      title: UnitOfQuantity
      type: object
      properties:
        dimension:
          $ref: "#/components/schemas/Dimension"
        standardUnit:
          $ref: "#/components/schemas/UnitOfobject"
    UnitOfobject:
      title: UnitOfobject
      type: object
      properties:
        dimension:
          $ref: "#/components/schemas/Dimension"
        standardUnit:
          $ref: "#/components/schemas/UnitOfobject"
    UserContextInformation:
      title: UserContextInformation
      type: object
      properties:
        environmentID:
          type: integer
          format: int32
        loaded:
          type: boolean
        pathString:
          type: string
        siteID:
          type: integer
          format: int32
        siteService:
          $ref: "#/components/schemas/SiteService"
        tenantID:
          type: integer
          format: int32
        tenantService:
          $ref: "#/components/schemas/TenantService"
    ApiDocumentationSite:
      title: Site
      type: object
      properties:
        name:
          type: string
        siteID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
    ApiDocumentationTenant:
      title: Tenant
      type: object
      properties:
        name:
          type: string
        tenantID:
          type: integer
          format: int32
    ApiDocumentationOrderItem:
      title: OrderItem
      type: object
      properties:
        backorderable:
          type: boolean
        customItemData:
          type: object
          properties: {}
        itemDependency:
          type: integer
          format: int32
        orderItemID:
          type: integer
          format: int32
        partNumber:
          type: string
        quantity:
          type: integer
          format: int32
        sku:
          type: string
        upc:
          type: string
    ApiDocumentationCreateSiteRequest:
      title: CreateSiteRequest
      type: object
      properties:
        name:
          type: string
        siteID:
          type: integer
          format: int32
        tenantID:
          type: integer
          format: int32
    ApiDocumentationCloneTenantRequest:
      title: CloneTenantRequest
      type: object
      properties:
        sourceTenantID:
          type: integer
          format: int32
        targetTenantID:
          type: integer
          format: int32
        targetTenantName:
          type: string
    ApiDocumentationCreateTenantRequest:
      title: CreateTenantRequest
      type: object
      properties:
        name:
          type: string
        tenantID:
          type: integer
          format: int32
    ApiDocumentationLocationGroup:
      title: LocationGroup
      type: object
      properties:
        active:
          type: boolean
        afterActionNone:
          $ref: "#/components/schemas/GroupAfterAction"
        afterActionPartial:
          $ref: "#/components/schemas/GroupAfterAction"
        created:
          type: string
          format: date-time
        creatorUsername:
          type: string
        description:
          type: string
        environmentID:
          type: integer
          format: int32
        excludedLocationsFromDefaultGroup:
          type: array
          items:
            type: integer
            format: int32
        filters:
          type: array
          items:
            $ref: "#/components/schemas/AbstractFilter"
        fulfillmentLimit:
          $ref: "#/components/schemas/FulfillmentLimit"
        groupID:
          type: integer
          format: int32
        isDefaultGroup:
          type: boolean
        locationIDs:
          type: array
          items:
            type: integer
            format: int32
        name:
          type: string
        pathString:
          type: string
        persisted:
          type: boolean
        rank:
          type: integer
          format: int32
        rankedLocations:
          type: array
          items:
            $ref: "#/components/schemas/RankedLocation"
        siteID:
          type: integer
          format: int32
        sorts:
          type: array
          items:
            $ref: "#/components/schemas/LocationSort"
        tenantID:
          type: integer
          format: int32
        updated:
          type: string
          format: date-time
        updaterUsername:
          type: string
        useRetailerExclusionList:
          type: boolean
        userContext:
          $ref: "#/components/schemas/UserContextInformation"
    AppliedLineItemDiscount:
      type: object
      allOf:
        - $ref: "#/components/schemas/PricingRuntimeAppliedDiscount"
      properties:
        quantity:
          type: integer
          description: Quantity of items from the line item that the discount applies to.
          format: int32
        impactPerUnit:
          type: number
          description: "Discount impact per unit for the quantity applied.\r

            This value is not rounded.\r

            ImpactPerUnit * Quantity = Impact @ Quantity"
          format: double
        isForced:
          type: boolean
          description: Signifies that the discount is forced and not applied via best match.
        normalizedImpact:
          type: number
          format: double
      additionalProperties: false
      description: Details of the discount applied to a product.
    AppliedOrderShippingDiscount:
      type: object
      allOf:
        - $ref: "#/components/schemas/PricingRuntimeAppliedDiscount"
      properties:
        shippingMethodCode:
          type: string
          description: Unique identifier of the shipping method discount.
          nullable: true
      additionalProperties: false
    AutoAddDiscountTarget:
      type: object
      properties:
        discountId:
          type: integer
          description: Unique identifier of the discount. System-supplied and read-only.
          format: int32
        friendlyDescription:
          type: string
          description: Friendly description of the discount.
          nullable: true
        includedProductCodes:
          type: array
          items:
            type: string
          description: Included product codes
          nullable: true
      additionalProperties: false
    ItemTaxContext:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the line item.
          nullable: true
        productCode:
          type: string
          description: Merchant-created code that uniquely identifies the product.
          nullable: true
        quantity:
          type: integer
          description: The number of products in this lineitem
          format: int32
        tax:
          type: number
          description: Line item tax amount not including shipping
          format: double
        shippingTax:
          type: number
          description: The shipping tax amount for this line item
          format: double
        taxData:
          description: Storage for any additional/custom tax data.
          nullable: true
      additionalProperties: false
      description: The tax applied to an individual order item.
    OrderTaxContext:
      type: object
      properties:
        itemTaxContexts:
          type: array
          items:
            $ref: "#/components/schemas/ItemTaxContext"
          description: Taxes applied to each item in the order.
          nullable: true
        shippingTax:
          type: number
          description: Rollup shipping tax for this order
          format: double
        handlingFeeTax:
          type: number
          description: The handling fee tax amount for this line item
          format: double
        orderTax:
          type: number
          description: Rollup tax on the order not including shipping
          format: double
        taxData:
          description: Storage for any additional/custom tax data.
          nullable: true
      additionalProperties: false
    ProductAttribute:
      type: object
      properties:
        inputType:
          type: string
          description:
            The InputType type of the attribute. Valid values for InputType are
            defined in InputTypeConst.
          nullable: true
        valueType:
          type: string
          description:
            The ValueType of the attribute. Valid values for ValueType are
            defined in ValueTypeTypeConst.
          nullable: true
        dataType:
          type: string
          description:
            The DataType of the attribute. Valid values for DataType are
            defined in DataTypeTypeConst.
          nullable: true
        name:
          type: string
          description: Name of the attribute in the language specified by LocaleCode.
          nullable: true
        description:
          type: string
          description: Description of the attribute in the language specified by LocaleCode.
          nullable: true
      additionalProperties: false
      description: Duplicate definition from ProductRuntime
    TaxableLineItem:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the line item.
          nullable: true
        productCode:
          type: string
          description: Unique code of the product.
          nullable: true
        variantProductCode:
          type: string
          description:
            For configurable products, the unique identifier of the product
            variation that has been selected.
          nullable: true
        productName:
          type: string
          description: Name of the product.
          nullable: true
        productProperties:
          type: array
          items:
            $ref: "#/components/schemas/PricingRuntimeProductProperty"
          description: Custom Properties of the product (i.e. inclues TaxCode)
          nullable: true
        quantity:
          type: integer
          description: The number of products for this line item
          format: int32
        lineItemPrice:
          type: number
          description: The line item subtotal of quantity * Product.TaxablePrice
          format: double
        discountTotal:
          type: number
          description:
            How much the shopper saves with the applied discount or sale price.
            This is a negative number.
          format: double
          nullable: true
        discountedTotal:
          type: number
          description: Subtotal minus any discounts.
          format: double
          nullable: true
        shippingAmount:
          type: number
          description: The line item shipping amount.
          format: double
        handlingAmount:
          type: number
          description: Handling Amount for this item
          format: double
          nullable: true
        feeTotal:
          type: number
          description: Not implemented. Total cost of fees that apply to this item.
          format: double
          nullable: true
        isTaxable:
          type: boolean
          description: Is the Product taxable
          nullable: true
        reason:
          type: string
          description: Clarifications on the reason this item is being taxed/returned?
          nullable: true
        data:
          nullable: true
        productDiscount:
          $ref: "#/components/schemas/PricingRuntimeAppliedLineItemProductDiscount"
        shippingDiscount:
          $ref: "#/components/schemas/PricingRuntimeAppliedLineItemShippingDiscount"
        productDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/PricingRuntimeAppliedLineItemProductDiscount"
          description: A list of discounts applied to the product
          nullable: true
        shippingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/PricingRuntimeAppliedLineItemShippingDiscount"
          description: A discount applied to the shipping
          nullable: true
        originAddress:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
        destinationAddress:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
      additionalProperties: false
    TaxableOrder:
      type: object
      properties:
        orderDate:
          type: string
          description: "Date on which the order is/was submitted.\r

            Cannot be a future date."
          format: date-time
        taxContext:
          $ref: "#/components/schemas/TaxContext"
        lineItems:
          type: array
          items:
            $ref: "#/components/schemas/TaxableLineItem"
          description: List of taxable items.
          nullable: true
        shippingAmount:
          type: number
          description: Shipping Amount rolled up for the order
          format: double
        currencyCode:
          type: string
          description: The currency code for this order
          nullable: true
        handlingFee:
          type: number
          description: Handling Fee
          format: double
        originalDocumentCode:
          type: string
          description:
            The order id of the original order.  This can be used to track
            changes to the order for taxing purposes.
          nullable: true
        orderId:
          type: string
          nullable: true
        orderNumber:
          type: integer
          format: int32
          nullable: true
        originalOrderDate:
          type: string
          description:
            The date of the original order.  This is used when calculating
            changes to the Taxable Order, evaluating them at this time rather
            than the present.
          format: date-time
        data:
          nullable: true
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/TaxAttribute"
          nullable: true
        shippingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/AppliedOrderShippingDiscount"
          description:
            The list of historically-applied shipping discounts.  The active
            one will have IsExcluded == false
          nullable: true
        shippingDiscount:
          $ref: "#/components/schemas/AppliedOrderShippingDiscount"
        orderDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/PricingRuntimeAppliedDiscount"
          description:
            The discount that has been applied to the cart itself. If multiple
            discounts exist, this is the discount that the system applies
            because it offers the best savings for the shopper. This is a
            negative number.
          nullable: true
        orderDiscount:
          $ref: "#/components/schemas/PricingRuntimeAppliedDiscount"
        handlingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/PricingRuntimeAppliedDiscount"
          description:
            The list of historically-applied handling discounts.  The active
            one will have IsExcluded == false
          nullable: true
        handlingDiscount:
          $ref: "#/components/schemas/PricingRuntimeAppliedDiscount"
        shippingMethodCode:
          type: string
          description:
            "Code that uniquely identifies the shipping method such as
            \"Ground,\" \"Overnight,\" or \"Digital.\"\r

            The site's shipping settings lists the valid shipping
            methods specified for this site."
          nullable: true
        shippingMethodName:
          type: string
          description: Readable name of the shipping method
          nullable: true
        taxRequestType:
          type: string
          description:
            Used to differentiate between an Order and a Return being used as
            the source of this Taxable Order
          nullable: true
      additionalProperties: false
      description: Properties of a taxable order
    TaxAttribute:
      type: object
      properties:
        fullyQualifiedName:
          type: string
          nullable: true
        attributeDefinitionId:
          type: integer
          format: int32
          nullable: true
        values:
          type: array
          items: {}
          nullable: true
      additionalProperties: false
    TaxContext:
      type: object
      properties:
        taxContextId:
          type: string
          description:
            The unique id of this context. Will typically be the OrderId or
            CartId, depending when the tax is being calculated.
          nullable: true
        customerId:
          type: string
          description:
            A unique id for a customer.  This may be the userid, checking with
            Avalara to determine the meaning of this
          nullable: true
        taxExemptId:
          type: string
          description: Tax exemption id.  Indicates that this customer or user is tax exempt
          nullable: true
        originAddress:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
        destinationAddress:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
      additionalProperties: false
      description: The context for the tax calculation.
    ThrirdPartyItemTaxContext:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the line item.
          nullable: true
        productCode:
          type: string
          description: Merchant-created code that uniquely identifies the product.
          nullable: true
        quantity:
          type: integer
          description: The number of products in this lineitem
          format: int32
        tax:
          type: number
          description: Line item tax amount not including shipping
          format: double
        shippingTax:
          type: number
          description: The shipping tax amount for this line item
          format: double
      additionalProperties: false
      description: The tax applied to an individual order item.
    ThrirdPartyOrderTaxContext:
      type: object
      properties:
        itemTaxContexts:
          type: array
          items:
            $ref: "#/components/schemas/ThrirdPartyItemTaxContext"
          description: Taxes applied to each item in the order.
          nullable: true
        shippingTax:
          type: number
          description: Rollup shipping tax for this order
          format: double
        handlingFeeTax:
          type: number
          description: The handling fee tax amount for this line item
          format: double
        orderTax:
          type: number
          description: Rollup tax on the order not including shipping
          format: double
      additionalProperties: false
    ThrirdPartyTaxableOrder:
      type: object
      properties:
        orderDate:
          type: string
          description: "Date on which the order is/was submitted.\r

            Cannot be a future date."
          format: date-time
        taxContext:
          $ref: "#/components/schemas/ThrirdPartyTaxContext"
        lineItems:
          type: array
          items:
            $ref: "#/components/schemas/TaxableLineItem"
          description: List of taxable items.
          nullable: true
        shippingAmount:
          type: number
          description: Shipping Amount rolled up for the order
          format: double
        currencyCode:
          type: string
          description: The currency code for this order
          nullable: true
        handlingFee:
          type: number
          description: Handling Fee
          format: double
        originalDocumentCode:
          type: string
          description:
            The order id of the original order.  This can be used to track
            changes to the order for taxing purposes.
          nullable: true
        orderId:
          type: string
          nullable: true
        orderNumber:
          type: integer
          format: int32
          nullable: true
        originalOrderDate:
          type: string
          description:
            The date of the original order.  This is used when calculating
            changes to the Taxable Order, evaluating them at this time rather
            than the present.
          format: date-time
        taxRequestType:
          type: string
          description:
            Used to differentiate between an Order and a Return being used as
            the source of this Taxable Order
          nullable: true
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/TaxAttribute"
          nullable: true
        shippingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/AppliedOrderShippingDiscount"
          nullable: true
        shippingDiscount:
          $ref: "#/components/schemas/AppliedOrderShippingDiscount"
        orderDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/PricingRuntimeAppliedDiscount"
          description:
            The discount that has been applied to the cart itself. If multiple
            discounts exist, this is the discount that the system applies
            because it offers the best savings for the shopper. This is a
            negative number.
          nullable: true
        orderDiscount:
          $ref: "#/components/schemas/PricingRuntimeAppliedDiscount"
        handlingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/PricingRuntimeAppliedDiscount"
          description:
            The list of historically-applied handling discounts.  The active
            one will have IsExcluded == false
          nullable: true
        handlingDiscount:
          $ref: "#/components/schemas/PricingRuntimeAppliedDiscount"
        shippingMethodCode:
          type: string
          description:
            "Code that uniquely identifies the shipping method such as
            \"Ground,\" \"Overnight,\" or \"Digital.\"\r

            The site's shipping settings lists the valid shipping
            methods specified for this site."
          nullable: true
        shippingMethodName:
          type: string
          description: Readable name of the shipping method
          nullable: true
      additionalProperties: false
      description: An order sent to a thirdparty implementation for calculating taxes
    ThrirdPartyTaxContext:
      type: object
      properties:
        taxContextId:
          type: string
          description:
            The unique id of this context. Will typically be the OrderId or
            CartId, depending when the tax is being calculated.
          nullable: true
        customerId:
          type: string
          description:
            A unique id for a customer.  This may be the userid, checking with
            Avalara to determine the meaning of this
          nullable: true
        taxExemptId:
          type: string
          description: Tax exemption id.  Indicates that this customer or user is tax exempt
          nullable: true
        taxShipping:
          type: boolean
          description: Indicates whether shipping amounts should be taxed
          nullable: true
        originAddress:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
        destinationAddress:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
      additionalProperties: false
      description: The context for the tax calculation.
    PricingRuntimeAppliedDiscount:
      type: object
      properties:
        impact:
          type: number
          description:
            Value of the discount, that is how much the shopper saves if
            discount is applied.
          format: double
        discount:
          $ref: "#/components/schemas/PricingRuntimeDiscount"
        couponCode:
          type: string
          description:
            Code of the coupon associated with the discount (if a coupon code
            is required in order to receive the discount).
          nullable: true
        couponSetId:
          type: integer
          description: Contains coupon set id if there is one
          format: int32
          nullable: true
      additionalProperties: false
      description:
        "Details of the applied discount, including how much the shopper
        saves if the discount is applied and the coupon\r

        code\r

        required to redeem the discount, if any."
    PricingRuntimeAppliedLineItemProductDiscount:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppliedLineItemDiscount"
      properties:
        appliesToSalePrice:
          type: boolean
          description:
            "Indicates that this discount is to be applied to the sale price if
            true or the list price if false.\r

            This only applies to product and line item discounts."
      additionalProperties: false
    PricingRuntimeAppliedLineItemShippingDiscount:
      type: object
      allOf:
        - $ref: "#/components/schemas/AppliedLineItemDiscount"
      properties:
        shippingMethodCode:
          type: string
          description: Unique identifier of the shipping method discount.
          nullable: true
      additionalProperties: false
    PricingRuntimeAppliedProductDiscount:
      type: object
      allOf:
        - $ref: "#/components/schemas/PricingRuntimeAppliedDiscount"
      properties:
        appliesToSalePrice:
          type: boolean
          description:
            "Indicates that this discount is to be applied to the sale price if
            true or the list price if false.\r

            This only applies to product and line item discounts."
        normalizedImpact:
          type: number
          description:
            The impact of the discount normalized against the sale price if
            there is one.
          format: double
      additionalProperties: false
    PricingRuntimeDiscount:
      type: object
      properties:
        discountId:
          type: integer
          description: Unique identifier of the discount. System-supplied and read-only.
          format: int32
        name:
          type: string
          description: Name of the discount.
          nullable: true
        friendlyDescription:
          type: string
          description: Friendly description of the discount.
          nullable: true
        amount:
          type: number
          format: double
        scope:
          type: string
          nullable: true
        maxRedemptions:
          type: integer
          format: int32
          nullable: true
        maximumUsesPerUser:
          type: integer
          format: int32
          nullable: true
        requiresAuthenticatedUser:
          type: boolean
        doesNotApplyToProductsWithSalePrice:
          type: boolean
        maximumRedemptionsPerOrder:
          type: integer
          format: int32
          nullable: true
        maximumDiscountValuePerOrder:
          type: number
          format: double
          nullable: true
        maxDiscountValuePerRedemption:
          type: number
          format: double
          nullable: true
        doesNotApplyToMultiShipToOrders:
          type: boolean
          nullable: true
        includedPriceLists:
          type: array
          items:
            type: string
          nullable: true
        redemptions:
          type: integer
          format: int32
        type:
          type: string
          nullable: true
        amountType:
          type: string
          description:
            'Type of discount, which can be either a percentage off the price,
            a specific monetary amount, or free. Possible values: "Percentage,"
            "Amount," and "Free".'
          nullable: true
        target:
          $ref: "#/components/schemas/PricingRuntimeDiscountTarget"
        condition:
          $ref: "#/components/schemas/PricingRuntimeDiscountCondition"
        expirationDate:
          type: string
          description: When the discount expires. If null, there's no expiration date.
          format: date-time
          nullable: true
          deprecated: true
        stackingLayer:
          type: integer
          format: int32
      additionalProperties: false
      description:
        "Name of the discount that can be applied and its expiration date.
        The discount can be on a single product or the\r

        entire order."
    PricingRuntimeProductProperty:
      type: object
      properties:
        attributeFQN:
          type: string
          description: Attribute fully qualified name
          nullable: true
        values:
          type: array
          items:
            $ref: "#/components/schemas/PricingRuntimeProductPropertyValue"
          description: Value(s) of the product property
          nullable: true
        attributeDetail:
          $ref: "#/components/schemas/ProductAttribute"
        isHidden:
          type: boolean
          description:
            Indicates whether the product property should be hidden from the
            customer
          nullable: true
        isMultiValue:
          type: boolean
          description:
            Indicates whether it's possible for there to be more than one value
            in the Values field
          nullable: true
      additionalProperties: false
      description: Duplicate definition from ProductRuntime
    PricingRuntimeProductPropertyValue:
      type: object
      properties:
        value:
          nullable: true
        stringValue:
          type: string
          description: Localized Value in the language of the locale code
          nullable: true
      additionalProperties: false
      description: Duplicate definition from ProductRuntime
    PricingRuntimeDiscountCondition:
      type: object
      properties:
        requiresCoupon:
          type: boolean
          description:
            If true, the shopper needs to enter a coupon code to redeem the
            discount.
        couponCode:
          type: string
          description:
            ShippingMethodCode of the coupon associated with the discount (if a
            coupon code is required). The merchant can supply the code or the
            system can generate it.
          nullable: true
        minimumQuantityProductsRequiredInCategories:
          type: integer
          description:
            "Minimum quantity of products in the categories specified in
            IncludedCategories that must be purchased to\r

            qualify for the associated discount.\r

            Valid values are null and ints greater than zero"
          format: int32
          nullable: true
        includedCategoryIds:
          type: array
          items:
            type: integer
            format: int32
          description:
            List of categories to discount. When a discount applies to a
            category, all products in the category are discounted.
          nullable: true
        excludedCategoryIds:
          type: array
          items:
            type: integer
            format: int32
          description:
            List of categories to discount. When a discount applies to a
            category, all products in the category are discounted.
          nullable: true
        minimumQuantityRequiredProducts:
          type: integer
          description:
            "Minimum quantity of products in the specified IncludedProducts
            that must be purchased to\r

            qualify for the associated discount.\r

            Defaults to 0"
          format: int32
          nullable: true
        includedProductCodes:
          type: array
          items:
            type: string
          description: List of products that are eligible for the discount.
          nullable: true
        excludedProductCodes:
          type: array
          items:
            type: string
          description: List of products that are eligible for the discount.
          nullable: true
        paymentWorkflows:
          type: array
          items:
            type: string
          description:
            "List of payment types that are valid for this discount.\r

            An empty list signifies all payment types."
          nullable: true
        customerSegmentIds:
          type: array
          items:
            type: integer
            format: int32
          description: List of customer groups for which the discount applies
          nullable: true
        minimumOrderAmount:
          type: number
          description:
            "If the discount is for products, how many products must be
            purchased to be eligible for the discount.\r

            If the discount is for an order, how much the order must
            total to be eligible for the discount. For example, you might want
            to offer a 10% discount on orders over $100."
          format: double
          nullable: true
        maximumOrderAmount:
          type: number
          description:
            "If the discount is for products, how many product can you have and
            still be eligible for the discount.\r

            If the discount is for an order, what is the max the
            order can total to be eligible for the discount. For example, you
            might want to offer a 10% discount on orders under $100."
          format: double
          nullable: true
        minimumLifetimeValueAmount:
          type: number
          description: Minimum lifetime value amount required for this discount to apply
          format: double
          nullable: true
        startDate:
          type: string
          description:
            Date when the discount can goes into effect, in the format
            yyyy-mm-dd.
          format: date-time
          nullable: true
        expirationDate:
          type: string
          description: Date when the discount expires. Default is null (no expiration date).
          format: date-time
          nullable: true
        minimumCategorySubtotalBeforeDiscounts:
          type: number
          description:
            "Minimum amount that must be purchased in the combined categories
            defined in \r

            IncludedCategories.  Amount is calculated before
            discounting."
          format: double
          nullable: true
      additionalProperties: false
    PricingRuntimeDiscountTarget:
      type: object
      properties:
        type:
          type: string
          nullable: true
        includedCategoryIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        excludedCategoryIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        includedCategoriesOperator:
          type: string
          nullable: true
        excludedCategoriesOperator:
          type: string
          nullable: true
        includedProductCodes:
          type: array
          items:
            type: string
          nullable: true
        excludedProductCodes:
          type: array
          items:
            type: string
          nullable: true
        includeAllProducts:
          type: boolean
          description:
            "When IncludeAllProducts is true then IncludedCategories and
            IncludedProducts are not evaluated and should be \r

            empty.  Only exclusions apply."
        shippingMethods:
          type: array
          items:
            type: string
          nullable: true
        shippingZones:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    AssignedDiscount:
      required:
        - discountId
      type: object
      properties:
        couponSetCode:
          type: string
          description: ReadOnly, CouponSetCode copied from URI
          nullable: true
        couponSetId:
          type: integer
          description: ReadOnly, CouponSetId
          format: int32
        discountId:
          type: integer
          description: Discount Id for the associated discount
          format: int32
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    AttributeInProductType:
      type: object
      properties:
        attributeFQN:
          type: string
          description:
            Unique identifier of the Attribute. Must be an attribute fully
            qualilfied name that already exists. If no namespace is specified
            Tenant is assumed
          nullable: true
        isInheritedFromBaseType:
          type: boolean
          description:
            If True, the attribute is part of the base product type and can
            only have order modified.
          nullable: true
        order:
          type: integer
          description: Used to order the display of the attributes within a section
          format: int32
          nullable: true
        isRequiredByAdmin:
          type: boolean
          description:
            If True, the admin must include this attribute in products of this
            productType
          nullable: true
        isHiddenProperty:
          type: boolean
          description:
            If True, the property is hidden in the storefront. This field only
            applies to properties.
          nullable: true
        isAdminOnlyProperty:
          type: boolean
          description:
            If true, this property is not available on the storefront. If
            false, this property will be available on storefront. The
            IsHiddenProperty hides the property from the customer, but is still
            available from the API.
          nullable: true
        isProductDetailsOnlyProperty:
          type: boolean
          description:
            If True this property will not be returned  storefront product
            listings (Search,GetProduct) it will still be returned on
            GetProduct, ValidateProduct...)
          nullable: true
        isMultiValueProperty:
          type: boolean
          description:
            If True, the property can have multiple values selected on the
            product. Only applies to PredefinedVocabulary properties.
          nullable: true
        displayInfo:
          $ref: "#/components/schemas/AttributeInProductTypeDisplayInfo"
        vocabularyValues:
          type: array
          items:
            $ref: "#/components/schemas/AttributeVocabularyValueInProductType"
          description: The collection of vocabulary values included in this product type.
          nullable: true
        attributeDetail:
          $ref: "#/components/schemas/ProductAdminAttribute"
      additionalProperties: false
    AttributeInProductTypeDisplayInfo:
      type: object
      properties:
        displayIntention:
          type: string
          description:
            Defines the intended display of this Attribute in the storeFront
            (ex. DropDown, ImagePicker, RadioButtons....)
          nullable: true
      additionalProperties: false
    AttributeSearchSettings:
      type: object
      properties:
        searchableInStorefront:
          type: boolean
          description:
            Indicates whether the attribute value should be searchable on the
            public storefront.
        searchableInAdmin:
          type: boolean
          description:
            Indicates whether the attribute value should be searchable in the
            merchant catalog admin.
        searchDisplayValue:
          type: boolean
          description:
            "If true, the system will index the display value of string
            attributes instead of the canonical value for searching. \r

            The canonical value will always be used for filtering.
            Does not apply for for non-string attributes."
        allowFilteringAndSortingInStorefront:
          type: boolean
          description:
            Indicates whether the attribute should be able to be used in
            filters, facets, and sorting on the public storefront.
          nullable: true
        indexValueWithCase:
          type: boolean
          description:
            "Indicates whether the attribute value is case sensative for
            filtering and faceting. This applies to Text Admin entered
            attributes. \r

            A null value means it is not case sensative"
          nullable: true
        customWeightInStorefrontSearch:
          type: boolean
          description:
            Indicates whether the attribute is indevidually stored as a
            tokenized field in search for custom term search weight
          nullable: true
      additionalProperties: false
      description:
        Attribute Search Settings. A container for all of the search and
        indexing settings of an Attribute
    AttributeTypeRule:
      type: object
      properties:
        attributeInputType:
          type: string
          description: AttributeInputType identifier
          nullable: true
        attributeDataType:
          type: string
          description: AttributeDataType identifier
          nullable: true
        attributeValueType:
          type: string
          description: AttributeValueType identifier
          nullable: true
        attributeUsageType:
          type: string
          description: AttributeUsageType identifier
          nullable: true
      additionalProperties: false
      description: Attribute Value Localized Resource
    AttributeTypeRuleCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/AttributeTypeRule"
          nullable: true
      additionalProperties: false
      description: A collection of AttributeType rules
    AttributeVocabularyValueInProductType:
      type: object
      properties:
        value:
          description:
            The actual value of the attribute vocabulary. This must be an
            existing value defined in the attribute vocabulary
          nullable: true
        order:
          type: integer
          description: Used to order the display of the attribute values in the
            storefront....
          format: int32
          nullable: true
        displayInfo:
          $ref: "#/components/schemas/ProductAdminAttributeVocabularyValueDisplayInfo"
        vocabularyValueDetail:
          $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
      additionalProperties: false
    AttributeVocabularyValueLocalizedContent:
      type: object
      properties:
        localeCode:
          type: string
          description:
            Language used for the string attribute value. Currently, only en_US
            is supported.
          nullable: true
        stringValue:
          type: string
          description: Localized Value in the language of the locale code
          nullable: true
      additionalProperties: false
      description: Attribute Value Localized Resource
    BoostField:
      type: object
      properties:
        fieldName:
          type: string
          nullable: true
        valueExpressions:
          type: array
          items:
            $ref: "#/components/schemas/BoostValue"
          nullable: true
      additionalProperties: false
    BoostValue:
      type: object
      properties:
        value:
          type: string
          nullable: true
        boost:
          type: integer
          format: int32
        operator:
          type: string
          nullable: true
      additionalProperties: false
    CampaignListingSettings:
      type: object
      properties:
        fieldValueBoost:
          $ref: "#/components/schemas/FieldValueBoost"
      additionalProperties: false
    CampaignProductSuggestSettings:
      type: object
      properties:
        searchTermAssociations:
          type: array
          items:
            type: string
          nullable: true
        fieldValueBoost:
          $ref: "#/components/schemas/FieldValueBoost"
      additionalProperties: false
    CampaignSettings:
      type: object
      properties:
        campaignName:
          type: string
          nullable: true
        campaignId:
          type: string
          nullable: true
        json:
          type: string
          nullable: true
        campaignDescription:
          type: string
          nullable: true
        campaignStartDate:
          type: string
          format: date-time
          nullable: true
        campaignEndDate:
          type: string
          format: date-time
          nullable: true
        statusId:
          type: integer
          format: int32
          nullable: true
        siteSearchSettings:
          $ref: "#/components/schemas/CampaignSiteSearchSettings"
        productSuggestSettings:
          $ref: "#/components/schemas/CampaignProductSuggestSettings"
        listingSettings:
          $ref: "#/components/schemas/CampaignListingSettings"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Settings to control product search and indexing behavior
    CampaignSettingsCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CampaignSettings"
          nullable: true
      additionalProperties: false
    CampaignSiteSearchSettings:
      type: object
      properties:
        searchTermAssociations:
          type: array
          items:
            type: string
          nullable: true
        fieldValueBoost:
          $ref: "#/components/schemas/FieldValueBoost"
      additionalProperties: false
    CategoryDiscountCondition:
      type: object
      properties:
        categoryId:
          type: integer
          description:
            Unique identifier of the category to which the discount condition
            applies.
          format: int32
      additionalProperties: false
      description: Represents a product category and quantity constraint
    CategoryLocalizedContent:
      type: object
      properties:
        categoryImages:
          type: array
          items:
            $ref: "#/components/schemas/CategoryLocalizedImage"
          description: List of images associated with the category.
          nullable: true
        name:
          type: string
          description: Name of the category.
          nullable: true
        description:
          type: string
          description: Description of the category to display on the storefront.
          nullable: true
        pageTitle:
          type: string
          description: Title that appears at the top of new pages.
          nullable: true
        localeCode:
          type: string
          description:
            Lanugage used for category content. Currently, only en_US is
            supported.
          nullable: true
        metaTagTitle:
          type: string
          description:
            Metadata title. Metadata can be used to manage information
            internally. Sometimes used for SEO.
          nullable: true
        metaTagDescription:
          type: string
          description:
            Metadata description. Metadata can be used to manage information
            internally. Sometimes used for SEO.
          nullable: true
        metaTagKeywords:
          type: string
          description:
            Metadata keywords. Metadata can be used to manage information
            internally. Sometimes used for SEO.
          nullable: true
        slug:
          type: string
          description:
            "Human-readable identifier that you can give to the category to
            create friendly URLs. For example, \r

            instead of \"http:
            //example.com/products?category=2&id=25,\" the friendly URL can be
            \"http: //example.com/products/category/2/25.\""
          nullable: true
      additionalProperties: false
      description: Container for language-specific content to display on the
        storefront. You'll have a container for each supported language
        (LocaleCode). This enables you to display a category in multiple
        languages yet manage it as a single category internally.
    CategoryLocalizedImage:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the image. System-supplied and read-only.
          format: int32
          nullable: true
        localeCode:
          type: string
          description: Language used for the image content.
          nullable: true
        imageLabel:
          type: string
          description: Image title that appears on the storefront.
          nullable: true
        altText:
          type: string
          description:
            Descriptive text associated with the image or video that appears on
            the storefront.
          nullable: true
        imageUrl:
          type: string
          description: URL of the image.
          nullable: true
        cmsId:
          type: string
          description: Id of the image in the CMS.
          nullable: true
        videoUrl:
          type: string
          description: URL of a video associated with the category.
          nullable: true
        mediaType:
          type: string
          description:
            Type of media. Used by the client to determine how to render the
            image or video or what have you.
          nullable: true
        sequence:
          type: integer
          description:
            For categories with multiple images, the order in which this image
            appears on the storefront.
          format: int32
          nullable: true
      additionalProperties: false
      description:
        Contains the image label and alternate text for a category image or
        video in the language specified by LocalCode.
    CoreField:
      type: object
      properties:
        fieldName:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        entityTpe:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
      additionalProperties: false
    CoreFieldCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CoreField"
          nullable: true
      additionalProperties: false
    Coupon:
      required:
        - couponCode
      type: object
      properties:
        couponSetId:
          type: integer
          description: ReadOnly system id for releated couponset.
          format: int32
        couponSetCode:
          type: string
          description: Link to associated coupon
          nullable: true
        couponCode:
          type: string
          description: The code the customer uses to claim this coupon
        canBeDeleted:
          type: boolean
        redemptionCount:
          type: integer
          description:
            "Total number of times this code has been redeemed. ReadOnly,
            calculated.\r

            Only returned with response group includeCounts"
          format: int32
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Coupon in a coupon set.
    CouponCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Coupon"
          nullable: true
      additionalProperties: false
    CouponSet:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          description:
            Internal unique identifier of the couponset. System-supplied and
            read-only.
          format: int32
          nullable: true
        couponSetCode:
          maxLength: 32
          type: string
          description: "Unique tenant supplied identifier.\r

            Used as the prefix for generated sets.\r

            Required\r

            System generated if left null."
          nullable: true
        name:
          maxLength: 200
          type: string
          description: CouponSet Name
        couponCodeType:
          type: string
          description:
            "Determines if the coupon is a persisted list of codes (static) or
            a list based on generated specification\r

            (dynamic)."
          nullable: true
        status:
          type: string
          description:
            "CouponSet status which can be: Active, Expired,  Inactive\r

            System-supplied and read-only."
          nullable: true
        canBeDeleted:
          type: boolean
          description:
            "Signifies that the coupon has not been exported and can be
            updated\r

            ReadOnly"
        maxRedemptionsPerUser:
          type: integer
          description:
            "Maximum number of times any single user can redeem any code.\r

            Must be null, >=1 or -1.\r

            Defaults to 1 on creation if null.\r

            -1 indicates unlimited."
          format: int32
          nullable: true
        maxRedemptionsPerCouponCode:
          type: integer
          description: "Maximum number of times any code can de used.\r

            Must be null, >=1 or -1.\r

            Defaults to 1 on creation if null.\r

            -1 indicates unlimited."
          format: int32
          nullable: true
        endDate:
          type: string
          description: Date and time that the coupon codes becomes expired
          format: date-time
          nullable: true
        startDate:
          type: string
          description: Date and time that the coupon codes becomes active
          format: date-time
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        setSize:
          type: integer
          description:
            "Sets the number of codes to generate for dynamic coupons\r

            Required when CouponCodeType is \"Dynamic\""
          format: int32
          nullable: true
        couponCodeCount:
          type: integer
          description: "Count of associated couponCodes.\r

            Must use \"counts\" response group to get this value\r

            ReadOnly"
          format: int32
          nullable: true
        redemptionCount:
          type: integer
          description: ReadOnly count of all redemptions for this coupon set.
          format: int32
          nullable: true
        assignedDiscountCount:
          type: integer
          description: "ReadOnly sum of all redemptions for this coupon.\r

            Use \"counts\" response group."
          format: int32
          nullable: true
      additionalProperties: false
      description:
        Represents a claimable item that allows a user to use one or more
        discounts.
    CouponSetCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CouponSet"
          nullable: true
      additionalProperties: false
      description: Paged collection of Mozu.ProductAdmin.Contracts.CouponSet
    CurrencyExchangeRateCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminCurrencyExchangeRate"
          nullable: true
      additionalProperties: false
      description: Non-pages collection of currency-exchange-rates.
    CurrencyLocalization:
      type: object
      properties:
        currencyCode:
          type: string
          description: Currency Code
          nullable: true
        decimalPlaces:
          type: integer
          description: Number of decimal places to round to
          format: int32
          nullable: true
        roundingStrategy:
          type: integer
          description: The rounding strategy to use
          format: int32
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: A currency and some localization options
    CurrencyLocalizationCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CurrencyLocalization"
          nullable: true
      additionalProperties: false
      description: Non-pages collection of currency-localizations.
    DiscountCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminDiscount"
          nullable: true
      additionalProperties: false
      description: Collection of discounts returned as a whole. A collection is not paged.
    DiscountLocalizedContent:
      required:
        - name
      type: object
      properties:
        localeCode:
          maxLength: 8
          minLength: 0
          type: string
          description:
            Lanugage used for the discount in the current catalog. Defaults
            setting for the active catalog.
          nullable: true
        name:
          maxLength: 200
          minLength: 0
          type: string
          description: Name of the discount.
        friendlyDescription:
          type: string
          description:
            Promotional text or HTML that can be utilized as friendly content
            like "Buy this product now and get X!"
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description:
        "Container for the language-specific name of the discount. You will
        have a container for each supported language\r

        (LocaleCode).\r

        This enables you to display the discount name in multiple
        languages yet manage it as a single discount internally."
    DiscountSettings:
      type: object
      properties:
        stackingConfiguration:
          $ref: "#/components/schemas/StackingConfiguration"
        usePostDiscountedOrderValue:
          type: boolean
          description:
            Use the pre or post line item discounts order total to evaluate the
            order minimum constraint
          nullable: true
      additionalProperties: false
      description: Tenant level discount settings
    DynamicExpression:
      type: object
      properties:
        text:
          type: string
          nullable: true
        tree:
          $ref: "#/components/schemas/Expression"
      additionalProperties: false
      description: Category
    Expression:
      type: object
      properties:
        type:
          type: string
          description: Container or Predicate
          nullable: true
        logicalOperator:
          type: string
          description: And or Or (if Container with More than one Node)
          nullable: true
        nodes:
          type: array
          items:
            $ref: "#/components/schemas/Expression"
          nullable: true
        left:
          type: string
          description: The field target of a predicate
          nullable: true
        operator:
          type: string
          description: The operator of a predicate
          nullable: true
        right:
          description: The literal values of a predicate
          nullable: true
      additionalProperties: false
    FacetRangeQuery:
      type: object
      properties:
        rangeValueStart:
          nullable: true
        rangeValueEnd:
          nullable: true
      additionalProperties: false
    FacetSet:
      type: object
      properties:
        configured:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminFacet"
          description: Facets that are configured
          nullable: true
        available:
          type: array
          items:
            $ref: "#/components/schemas/FacetSource"
          description: Facets that are not configured, but COULD BE!
          nullable: true
      additionalProperties: false
    FacetSource:
      type: object
      properties:
        id:
          type: string
          description: Name of field, or FQN of attribute
          nullable: true
        type:
          type: string
          description:
            "The type of source field used by the facet. Allowable values are:
            Element, Attribute. \r

            Must be a valid value for DataType defined in
            FacetFieldTypeConst."
          nullable: true
        name:
          type: string
          description: Read-only system-generated label for the source field.
          nullable: true
        dataType:
          maxLength: 20
          type: string
          description:
            Read-only system-generated DataType of the Attribute or Element
            source field. Will be valid value for DataType defined in
            DataTypeConst.
          nullable: true
        allowsRangeQuery:
          type: boolean
          description:
            Read-only system-generated indicator of whether the source field
            supports RangeQuery type facets.
      additionalProperties: false
    FacetValidity:
      type: object
      properties:
        isValid:
          type: boolean
        reasonCode:
          type: string
          nullable: true
      additionalProperties: false
    FieldValueBoost:
      type: object
      properties:
        boostType:
          type: string
          nullable: true
        fields:
          type: array
          items:
            $ref: "#/components/schemas/BoostField"
          nullable: true
      additionalProperties: false
    FieldWeight:
      type: object
      properties:
        searchFieldName:
          type: string
          description: field in the index to target
          nullable: true
        weight:
          type: integer
          description: weight to apply to boost field
          format: int32
      additionalProperties: false
    ListingSettings:
      type: object
      properties:
        customBoosts:
          type: array
          items:
            type: string
          nullable: true
        fieldValueBoost:
          $ref: "#/components/schemas/FieldValueBoost"
        personalizationExperience:
          type: string
          nullable: true
        personalizationFactor:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    LocationInventoryAdjustment:
      type: object
      properties:
        productCode:
          type: string
          description:
            The ProductCode of the product to adjust only required when
            updating via locationInventory resource
          nullable: true
        locationCode:
          type: string
          description:
            The Location code of the product to adjust only required when
            updating via a sub resource of product
          nullable: true
        type:
          type: string
          description:
            The type of StockOnHandAdjustment, which can be either Absolute or
            Delta. Absolute means that Value is the exact number of stock on
            hand. Delta means that Value is added to or subtracted from the
            value of StockOnHand.
          nullable: true
        value:
          type: integer
          description: The absolute or delta value to be applied to StockOnHand.
          format: int32
      additionalProperties: false
      description:
        "Used to modify a product's inventory. This can be an absolute
        number (number of items in stock) or delta (increase or decrease number
        of items in stock). \r

        StockOnHandAdjustment applies only PUT operations. Possible
        values: \"Absolute\" or \"Delta.\""
    MasterCatalogCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminMasterCatalog"
          nullable: true
      additionalProperties: false
      description: Collection of MasterCatalogs
    PriceListCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminPriceList"
          nullable: true
      additionalProperties: false
      description: Collection of categories returned as a whole. A collection is not paged.
    PriceListEntry:
      required:
        - currencyCode
        - productCode
      type: object
      properties:
        priceListCode:
          type: string
          description:
            "External unique identifier of the PriceList. Must be unique an
            only contain url sanitized characters. Max length is\r

            50"
          nullable: true
        priceListEntrySequence:
          type: integer
          format: int32
        productCode:
          type: string
        productName:
          type: string
          nullable: true
        isVariation:
          type: boolean
        options:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminProductOption"
          nullable: true
        currencyCode:
          type: string
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        priceListEntryMode:
          type: string
          nullable: true
        priceListEntryTypeCode:
          type: string
          nullable: true
        discountsRestrictedMode:
          type: string
          nullable: true
        discountsRestricted:
          type: boolean
          nullable: true
        discountsRestrictedStartDate:
          type: string
          format: date-time
          nullable: true
        discountsRestrictedEndDate:
          type: string
          format: date-time
          nullable: true
        msrpMode:
          type: string
          nullable: true
        msrp:
          type: number
          format: double
          nullable: true
        mapMode:
          type: string
          nullable: true
        map:
          type: number
          format: double
          nullable: true
        mapStartDate:
          type: string
          format: date-time
          nullable: true
        mapEndDate:
          type: string
          format: date-time
          nullable: true
        costMode:
          type: string
          nullable: true
        cost:
          type: number
          format: double
          nullable: true
        priceEntries:
          type: array
          items:
            $ref: "#/components/schemas/PriceListEntryPrice"
          nullable: true
        extraEntries:
          type: array
          items:
            $ref: "#/components/schemas/PriceListEntryExtra"
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Category
    PriceListEntryCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/PriceListEntry"
          nullable: true
      additionalProperties: false
      description: Collection of categories returned as a whole. A collection is not paged.
    PriceListEntryExtra:
      required:
        - attributeFQN
      type: object
      properties:
        attributeFQN:
          type: string
          description: "AttributeFQN of the extra\r\nReadOnly"
        value:
          description: "The value stored with the extra\r

            ReadOnly"
          nullable: true
        price:
          type: number
          description: PriceList price for the extra
          format: double
        attributeCode:
          type: string
          description: "AttributeCode.\r\nReadOnly"
          nullable: true
        displayValue:
          type: string
          description:
            "Value to display.  Currently only vaild when Value is a string
            type.\r

            ReadOnly"
          nullable: true
      additionalProperties: false
      description: Extra for an entry on a price list
    PriceListEntryPrice:
      type: object
      properties:
        minQty:
          type: integer
          format: int32
        listPriceMode:
          type: string
          nullable: true
        listPrice:
          type: number
          format: double
          nullable: true
        salePriceMode:
          type: string
          nullable: true
        salePrice:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    ProductCategory:
      type: object
      properties:
        categoryId:
          type: integer
          description: Unique identifier of the category. System-supplied and read-only.
          format: int32
      additionalProperties: false
      description: Categories to which the product belongs.
    ProductCodeRename:
      type: object
      properties:
        existingProductCode:
          type: string
          description: The existing ProductCode that should be renamed
          nullable: true
        newProductCode:
          type: string
          description: The new ProductCode that will be the result of the rename
          nullable: true
      additionalProperties: false
      description: A tuple used to rename the productCode of a product
    ProductCollectionProduct:
      type: object
      properties:
        memberKey:
          $ref: "#/components/schemas/ProductAdminProductCollectionMemberKey"
        productUsage:
          type: string
          description:
            ReadOnly Indicates the usage type of this product. Must be one of
            the values in ProductUsageConst.
          nullable: true
        content:
          $ref: "#/components/schemas/ProductLocalizedContent"
        price:
          $ref: "#/components/schemas/ProductAdminProductPrice"
      additionalProperties: false
      description: List of products that belong to a product collection product.
    ProductDiscountCondition:
      type: object
      properties:
        productCode:
          type: string
          description: Product code of the product to discount.
          nullable: true
      additionalProperties: false
      description: Represents a product and quantity constraint
    ProductExtra:
      type: object
      properties:
        attributeFQN:
          type: string
          description: Unique identifier of the Attribute.
          nullable: true
        isRequired:
          type: boolean
          nullable: true
        isMultiSelect:
          type: boolean
          nullable: true
        values:
          type: array
          items:
            $ref: "#/components/schemas/ProductExtraValue"
          nullable: true
      additionalProperties: false
      description: "Product options for configurable or stand-alone products. A
        configurable option is one that the shopper chooses when ordering, for
        example, \r

        the color of a T-shirt. A stand-alone option is independent of
        the product and can be added to the product order. For example, a
        monogram."
    ProductExtraValue:
      type: object
      properties:
        value:
          nullable: true
        deltaPrice:
          $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
        localizedDeltaPrice:
          type: array
          items:
            $ref: "#/components/schemas/ProductExtraValueDeltaPrice"
          nullable: true
        deltaWeight:
          type: number
          format: double
          nullable: true
        isDefaulted:
          type: boolean
          nullable: true
        quantity:
          type: integer
          format: int32
          nullable: true
        attributeVocabularyValueDetail:
          $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
      additionalProperties: false
      description: A value of a product option for this product. For example, a
        computer product may have an option called "Memory" that can have the
        values "6GB,"8GB," and "12GB."
    ProductExtraValueDeltaPrice:
      type: object
      properties:
        currencyCode:
          type: string
          description: Which currency to use.
          nullable: true
        deltaPrice:
          type: number
          description: Amount of money saved when discounts are applied.
          format: double
      additionalProperties: false
      description:
        How much a product option costs above the cost of the base product,
        if at all.
    ProductInCatalogInfo:
      type: object
      properties:
        catalogId:
          type: integer
          description:
            The CatalogId of the catalog that the product is associated with
            (The catalog must a valid catalog within the MasterCatalog that the
            product belongs to)
          format: int32
        isActive:
          type: boolean
          description:
            If true, the product is marked as available for sale in the
            catalog. Setting a product to IsActive = false will prevent it from
            being shown on the customer facing storefront.
          nullable: true
        isContentOverridden:
          type: boolean
          description:
            If true, the content for this product is overridden in the catalog.
            If false, the MasterCatalog level content will be used for the
            product.
          nullable: true
        content:
          $ref: "#/components/schemas/ProductLocalizedContent"
        isPriceOverridden:
          type: boolean
          description:
            If true, the price for this product is overridden in the catalog.
            If false, the MasterCatalog level price will be used for the
            product.
          nullable: true
        price:
          $ref: "#/components/schemas/ProductAdminProductPrice"
        isSeoContentOverridden:
          type: boolean
          description:
            If true, the SEO content for this product is overridden in the
            catalog. If false, the MasterCatalog level SEO content will be used
            for the product.
          nullable: true
        seoContent:
          $ref: "#/components/schemas/ProductLocalizedSEOContent"
        productCategories:
          type: array
          items:
            $ref: "#/components/schemas/ProductCategory"
          description: Categories to which the product belongs for this catalog.
          nullable: true
        primaryProductCategory:
          $ref: "#/components/schemas/ProductCategory"
        dateFirstAvailableInCatalog:
          type: string
          description:
            Date this product was first Available for sale in the catalog. This
            is utilized in expressions that reference DaysInCatloag.
          format: date-time
          nullable: true
        activeDateRange:
          $ref: "#/components/schemas/ProductAdminActiveDateRange"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description:
        Use the Products resource to create and manage products for your
        store. You can create products with options that a shopper configures
        (such as a T-shirt color and size). The system can manage inventory for
        all combinations of your product options, and can calculate tax and
        shipping costs.
    ProductLocalizedContent:
      type: object
      properties:
        localeCode:
          type: string
          description:
            Lanugage used for product content. Currently, only en_US is
            supported.
          nullable: true
        productName:
          type: string
          description: Name of the product.
          nullable: true
        productFullDescription:
          type: string
          description:
            Long description of the product typically used for a product
            details page.
          nullable: true
        productShortDescription:
          type: string
          description:
            Brief description of the product typically used when the product is
            displayed in a list or search results.
          nullable: true
        productImages:
          type: array
          items:
            $ref: "#/components/schemas/ProductLocalizedImage"
          description: List of images associated with the product.
          nullable: true
      additionalProperties: false
      description: Container for language-specific content to display on the
        storefront. You'll have a container for each supported language
        (LocaleCode). This enables you to display a product in multiple
        languages yet manage it as a single product internally.
    ProductLocalizedImage:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the image. System-supplied and read-only.
          format: int32
          nullable: true
        localeCode:
          type: string
          description: Language used for the image content.
          nullable: true
        imageLabel:
          type: string
          description: Image title that appears on the storefront.
          nullable: true
        altText:
          type: string
          description:
            Descriptive text associated with the image or video that appears on
            the storefront.
          nullable: true
        imageUrl:
          type: string
          description: URL of the image.
          nullable: true
        cmsId:
          type: string
          description: Id of the image in the CMS.
          nullable: true
        videoUrl:
          type: string
          description: URL of a video associated with the product.
          nullable: true
        mediaType:
          type: string
          description:
            Type of media. Used by the client to determine how to render the
            image or video or what have you.
          nullable: true
        sequence:
          type: integer
          description:
            For products with multiple images, the order in which this image
            appears on the storefront.
          format: int32
          nullable: true
        productImageGroupId:
          type: string
          description: Image group to which this image belongs.  Default is null.
          nullable: true
      additionalProperties: false
      description:
        Contains the image label and alternate text for a product image or
        video in the language specified by LocalCode.
    ProductLocalizedSEOContent:
      type: object
      properties:
        localeCode:
          type: string
          description:
            Lanugage used for product content. Currently, only en_US is
            supported.
          nullable: true
        metaTagTitle:
          type: string
          description:
            Metadata title. Metadata can be used to manage information
            internally. Sometimes used for SEO.
          nullable: true
        metaTagDescription:
          type: string
          description:
            Metadata description. Metadata can be used to manage information
            internally. Sometimes used for SEO.
          nullable: true
        metaTagKeywords:
          type: string
          description:
            Metadata keywords. Metadata can be used to manage information
            internally. Sometimes used for SEO.
          nullable: true
        titleTagTitle:
          type: string
          description:
            Used to customize the HTML title tag within the head section of the
            product details page
          nullable: true
        seoFriendlyUrl:
          type: string
          description:
            "Human-readable identifier that you can give to the product to
            create friendly URLs. For example, \r

            instead of \"http:
            //example.com/products?category=2&id=25,\" the friendly URL can be
            \"http: //example.com/products/category/2/25.\""
          nullable: true
      additionalProperties: false
      description: Container for language-specific content to display on the
        storefront. You'll have a container for each supported language
        (LocaleCode). This enables you to display a product in multiple
        languages yet manage it as a single product internally.
    ProductPropertyValueLocalizedContent:
      type: object
      properties:
        localeCode:
          type: string
          description: Language used for the string attribute value.
          nullable: true
        stringValue:
          type: string
          description: Localized Value in the language of the locale code
          nullable: true
      additionalProperties: false
      description: Attribute Value Localized Resource
    ProductPublishingInfo:
      type: object
      properties:
        publishedState:
          type: string
          nullable: true
        lastPublishedBy:
          type: string
          nullable: true
        lastPublishedDate:
          type: string
          format: date-time
          nullable: true
        publishSetCode:
          type: string
          nullable: true
      additionalProperties: false
      description: Price of the product and currency used.
    ProductSortDefinition:
      required:
        - name
        - sortExpressions
        - startDate
      type: object
      properties:
        productSortDefinitionId:
          type: integer
          description: System or user provided ID for the ProductSortDefinition
          format: int32
          nullable: true
        categoryId:
          type: integer
          description: ""
          format: int32
          nullable: true
        name:
          type: string
          description: Short Name for the sort definition. Required.
        startDate:
          type: string
          description: The Start Date when the sort definition becomes active
          format: date-time
        endDate:
          type: string
          description: Optional end date for a product sort definition
          format: date-time
          nullable: true
        sortExpressions:
          type: array
          items:
            $ref: "#/components/schemas/ProductSortExpression"
          description: "Sort expression to apply\r

            Max two expressions"
        boosted:
          type: array
          items:
            $ref: "#/components/schemas/ProductSortOverride"
          description: List of products being positioned
          nullable: true
        buried:
          type: array
          items:
            $ref: "#/components/schemas/ProductSortOverride"
          description: List of products being positioned
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description:
        "Defines a default sort for a list of products and allows some
        products to be\r

        boosted to the top or pinned ot a specific position, or buried
        at the bottom of the\r

        list.  Only 10 items can be boosted or pinned and up to"
    ProductSortDefinitionPagedCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductSortDefinition"
          nullable: true
      additionalProperties: false
      description: Collection of product sort definitions where product sort
        definitions are returned in a series of pages.
    ProductSortExpression:
      required:
        - field
      type: object
      properties:
        field:
          type: string
          description: "The name of the field to sort on.\r

            Must be a known sort field or sortable attribute"
        direction:
          type: string
          description: ASC or DESC
          nullable: true
      additionalProperties: false
    ProductSortOverride:
      required:
        - productCode
      type: object
      properties:
        productCode:
          type: string
          description: The product code of the product being overridden
        sliceValue:
          type: string
          description: The slicing value of the product being overridden
          nullable: true
        position:
          type: integer
          description:
            "Indicates the relative position of the product to other overridden
            products.\r

            Position is absolute if IsPinned is true.\r

            Not applicable to buried products. Buried products will
            be given a default\r

            position of -1"
          format: int32
          nullable: true
        isPinned:
          type: boolean
          description:
            "Flag to indicate that the product is pinned at the specified
            position.\r

            Not applicable to buried products"
          nullable: true
      additionalProperties: false
      description:
        "Represents a product that is positioned out of its normal sort
        position.\r

        It can be boosted to the top of the list, positioned exactly or
        buried at the bottom"
    ProductSuggestSettings:
      type: object
      allOf:
        - $ref: "#/components/schemas/SuggestSettings"
      properties:
        customBoosts:
          type: array
          items:
            type: string
          nullable: true
        fieldValueBoost:
          $ref: "#/components/schemas/FieldValueBoost"
        searchChildProductsByDefault:
          type: boolean
      additionalProperties: false
    ProductSupplierInfo:
      type: object
      properties:
        mfgPartNumber:
          type: string
          nullable: true
        distPartNumber:
          type: string
          nullable: true
        cost:
          $ref: "#/components/schemas/ProductAdminProductCost"
      additionalProperties: false
      description: Supplier info for the product
    ProductType:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the ProductType. System-supplied and read-only.
          format: int32
          nullable: true
        name:
          type: string
          description: Name of the productType
          nullable: true
        masterCatalogId:
          type: integer
          description:
            Indentifier of the Master Catalog that this ProductType is a member
            of. System-supplied and read-only.
          format: int32
          nullable: true
        isBaseProductType:
          type: boolean
          description:
            System supplied and read only. There is only one BaseProductType
            per MasterCatalog.
        productCount:
          type: integer
          description:
            Indicates the number of products currently using this Product Type.
            System-supplied and read-only.
          format: int32
          nullable: true
        productUsages:
          type: array
          items:
            type: string
          description: List of ProductUsages supported by the ProductType.
          nullable: true
        goodsType:
          type: string
          description: The TYpe of Goods of this product
          nullable: true
        options:
          type: array
          items:
            $ref: "#/components/schemas/AttributeInProductType"
          description: Collection of the Attributes that are Options in this productType
          nullable: true
        extras:
          type: array
          items:
            $ref: "#/components/schemas/AttributeInProductType"
          description: Collection of the Attributes that are Extras in this productType
          nullable: true
        properties:
          type: array
          items:
            $ref: "#/components/schemas/AttributeInProductType"
          description: Collection of the Attributes that are Properties in this productType
          nullable: true
        variantProperties:
          type: array
          items:
            $ref: "#/components/schemas/AttributeInProductType"
          description:
            Collection of the Attributes that are VariantProperties in this
            productType
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    ProductTypeCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductType"
          nullable: true
      additionalProperties: false
      description: Collection of attributes.
    ProductVariation:
      type: object
      properties:
        isActive:
          type: boolean
          description:
            If true, the merchant accepts the variation generated from the
            configurable options as a product offering. If IsActive is false
            then the product variation is not for sale--either because it was
            never a product offering or it was permanently dropped. IsActive is
            not intended for temporary unavailability. Default is false.
          nullable: true
        isOrphan:
          type: boolean
          description:
            If true, the variation is no longer possible. The system sets
            IsOrphan to true when the merchant has changed something to make
            this variation impossible. For example, if the merchant stopped
            selling all "small" shirts, all product variations with the "small"
            option are set to IsOrphan. System-supplied and read-only.
          nullable: true
        variationExists:
          type: boolean
          description:
            If true, the product variation exists. When the merchant sets
            IsActive to true, the system sets VariationExists to true and
            creates a Variation Key as a unique identifier for this variation.
            System-supplied and read-only.
          nullable: true
        variationkey:
          type: string
          description:
            Unique identifier for a single variation ("small" + "red" +
            "short-sleeved"). System-supplied and read-only.
          nullable: true
        variationProductCode:
          type: string
          description:
            Descriptive code to refer to a single variation. Typically this is
            a sequence appended to the base ProduceCode. A merchant can create
            this code to easily recognize a product variation. By default, the
            system creates this code by appending a number to the base product.
            After the merchant supplies this code, it becomes read-only.
          nullable: true
        deltaPrice:
          $ref: "#/components/schemas/ProductVariationDeltaPrice"
        localizedDeltaPrice:
          type: array
          items:
            $ref: "#/components/schemas/ProductVariationDeltaPrice"
          description:
            "How much more the variation costs above the cost of the base
            product. If the price of the base product changes, this price is
            adjusted accordingly.\r

            This collection allows for multiple currencies."
          nullable: true
        fixedPrice:
          $ref: "#/components/schemas/ProductVariationFixedPrice"
        localizedFixedPrice:
          type: array
          items:
            $ref: "#/components/schemas/ProductVariationFixedPrice"
          description: "Price of the variation using fixed per currency\r

            This collection allows for multiple currencies."
          nullable: true
        deltaWeight:
          type: number
          description: Weight of the product with this variation.
          format: double
          nullable: true
        fixedWeight:
          type: number
          description: Fixed weight of the product with this variation.
          format: double
          nullable: true
        options:
          type: array
          items:
            $ref: "#/components/schemas/ProductVariationOption"
          description:
            'List of values for this product variation: such as "small, "red..
            these are read only here as the variationKey defines the values "'
          nullable: true
        properties:
          type: array
          items:
            $ref: "#/components/schemas/ProductVariationProperty"
          description: List of properties specific to this variation
          nullable: true
        upc:
          type: string
          description: Price Lookup Unit code for the product
          nullable: true
        fulfillmentTypesSupported:
          type: array
          items:
            type: string
          description: Indicates the fulfillment types the product supports.
          nullable: true
        supplierInfo:
          $ref: "#/components/schemas/ProductSupplierInfo"
      additionalProperties: false
      description:
        The ProductVariation resource helps merchants manage their products
        with configurable options. Using this reasource, the system creates a
        matrix of all possible combinations of the product options and the
        merchant confirms which variations match products for sale. For example,
        a T-shirt with three color and three size options has nine possible
        product variations. The system keeps track of inventory for each
        variation.
    ProductVariationCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductVariation"
          nullable: true
      additionalProperties: false
      description:
        Collection of product variations returned as a whole. A collection
        is not paged.
    ProductVariationDeltaPrice:
      type: object
      properties:
        currencyCode:
          type: string
          description: Which currency is in use.
          nullable: true
        value:
          type: number
          description: How much more the variation costs above the cost of the base product.
          format: double
          nullable: true
        msrp:
          type: number
          description: Manufacturer Suggested Retail Price.
          format: double
          nullable: true
        creditValue:
          type: number
          description: Credit amt of the product
          format: double
          nullable: true
      additionalProperties: false
      description:
        How much more a product variation costs above the cost of the base
        product. If the price of the base product changes, this price is
        adjusted automatically.
    ProductVariationFixedPrice:
      type: object
      properties:
        currencyCode:
          type: string
          description: Which currency is in use.
          nullable: true
        listPrice:
          type: number
          description: Variation price for fixed pricing
          format: double
          nullable: true
        salePrice:
          type: number
          description: Variation sale price whne fixed pricing
          format: double
          nullable: true
        msrp:
          type: number
          description: Manufacturer Suggested Retail Price.
          format: double
          nullable: true
        creditValue:
          type: number
          description: Credit amt of the product
          format: double
          nullable: true
      additionalProperties: false
    ProductVariationOption:
      type: object
      properties:
        attributeFQN:
          type: string
          description:
            Unique identifier of the product variation option. System-supplied
            and read-only.
          nullable: true
        value:
          description:
            Name of the product variation option used on the admin side
            independent of how it appears on the storefront. For example, the
            internal "SZ" attribute might appear as "size" on the storefront.
          nullable: true
        content:
          $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
      additionalProperties: false
      description:
        An option for a product variation. For example, a T-shirt with size
        and color configurable options, might have a product variation option of
        "size" or "color."
    ProductVariationPagedCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductVariation"
          nullable: true
      additionalProperties: false
      description:
        Collection of product variations where the variations are returned
        in a series of pages.
    ProductVariationProperty:
      type: object
      properties:
        attributeFQN:
          type: string
          description: Unique identifier of the Attribute.
          nullable: true
        values:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminProductPropertyValue"
          nullable: true
      additionalProperties: false
      description: ""
    PublishingScope:
      type: object
      properties:
        allPending:
          type: boolean
          description: True = scope to all pending products
          nullable: true
        productCodes:
          type: array
          items:
            type: string
          description: List of specific productCodes to scope publish operation against
          nullable: true
        publishSetCode:
          type: string
          description: The Publish Set to publish
          nullable: true
      additionalProperties: false
    PublishSet:
      type: object
      properties:
        code:
          type: string
          description: The PublishSet unique identifier
          nullable: true
        productCount:
          type: integer
          description: Number of product drafts that are included in the publish set
          format: int32
        productCodes:
          type: array
          items:
            type: string
          description: List of specific product codes that are included in the publish set
          nullable: true
      additionalProperties: false
    PublishSetCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/PublishSet"
          nullable: true
      additionalProperties: false
      description: Non-paged collection of PublishSets.
    SearchRedirect:
      type: object
      properties:
        redirectId:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        statusId:
          type: integer
          format: int32
          nullable: true
        searchTermList:
          type: array
          items:
            type: string
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Redirects based on what is entered in site search
    SearchRedirectCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/SearchRedirect"
          nullable: true
      additionalProperties: false
      description: List of search redirects
    SearchSettings:
      type: object
      properties:
        settingsName:
          type: string
          nullable: true
        isDefault:
          type: boolean
        siteSearchSettings:
          $ref: "#/components/schemas/SiteSearchSettings"
        productSuggestSettings:
          $ref: "#/components/schemas/ProductSuggestSettings"
        categorySuggestSettings:
          $ref: "#/components/schemas/SuggestSettings"
        listingSettings:
          $ref: "#/components/schemas/ListingSettings"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Settings to control product search and indexing behavior
    SearchSettingsCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/SearchSettings"
          nullable: true
      additionalProperties: false
    SearchTuningRule:
      type: object
      properties:
        siteId:
          type: integer
          format: int32
        searchTuningRuleCode:
          type: string
          nullable: true
        searchTuningRuleName:
          type: string
          nullable: true
        searchTuningRuleDescription:
          type: string
          nullable: true
        keywords:
          type: array
          items:
            type: string
          nullable: true
        filters:
          type: array
          items:
            $ref: "#/components/schemas/SearchTuningRuleFilter"
          nullable: true
        active:
          type: boolean
        isDefault:
          type: boolean
        activeStartDate:
          type: string
          format: date-time
          nullable: true
        activeEndDate:
          type: string
          format: date-time
          nullable: true
        boostedProductCodes:
          type: array
          items:
            type: string
          nullable: true
        blockedProductCodes:
          type: array
          items:
            type: string
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    SearchTuningRuleCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/SearchTuningRule"
          nullable: true
      additionalProperties: false
    SearchTuningRuleFilter:
      type: object
      properties:
        field:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    SearchTuningRuleSortFields:
      type: object
      properties:
        sortFields:
          type: array
          items:
            type: string
          nullable: true
        inclusionExclusionType:
          type: string
          nullable: true
      additionalProperties: false
    SiteSearchFieldWeight:
      type: object
      allOf:
        - $ref: "#/components/schemas/FieldWeight"
      properties:
        phraseWeight:
          type: integer
          description: weight to apply in phrase boosting
          format: int32
      additionalProperties: false
      description: A custom field and weight value for search relevancy
    SiteSearchSettings:
      type: object
      properties:
        fieldWeights:
          type: array
          items:
            $ref: "#/components/schemas/SiteSearchFieldWeight"
          nullable: true
        customBoosts:
          type: array
          items:
            type: string
          nullable: true
        fieldValueBoost:
          $ref: "#/components/schemas/FieldValueBoost"
        minimumMatchPercents:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        phraseSlop:
          type: integer
          format: int32
        personalizationExperience:
          type: string
          nullable: true
        personalizationFactor:
          type: number
          format: double
          nullable: true
        searchChildProductsByDefault:
          type: boolean
        crossFieldAdditiveScoreFactor:
          type: number
          format: double
      additionalProperties: false
    SlicingSettings:
      type: object
      properties:
        slicingAttributeFqn:
          type: string
          description: Product option FQN to create slices on
          nullable: true
      additionalProperties: false
      description: Container class for Slicing Settings
    StackingConfiguration:
      type: object
      properties:
        stackingEnabled:
          type: boolean
          description:
            Indicates if discount stacking is enabled for discounts in this
            catalog
        productOrderLayers:
          type: integer
          description: Number of Product Order discount layers
          format: int32
        productLineItemLayers:
          type: integer
          description: Number of Product Line Item discount layers
          format: int32
      additionalProperties: false
    SuggestSettings:
      type: object
      properties:
        fieldWeights:
          type: array
          items:
            $ref: "#/components/schemas/FieldWeight"
          nullable: true
        personalizationExperience:
          type: string
          nullable: true
        personalizationFactor:
          type: number
          format: double
          nullable: true
        returnFields:
          type: array
          items:
            type: string
          nullable: true
        crossFieldAdditiveScoreFactor:
          type: number
          format: double
      additionalProperties: false
    SynonymDefinition:
      type: object
      properties:
        synonymId:
          type: integer
          description: The unique identifier for the synonym definition
          format: int32
          nullable: true
        key:
          type: string
          description: If key is defined then map is directed
          nullable: true
        synonyms:
          type: array
          items:
            type: string
          description: List of synonyms.  If no key is defined the matches are bidirectional
          nullable: true
      additionalProperties: false
    SynonymDefinitionCollection:
      type: object
      properties:
        tenantId:
          type: integer
          description: Read-only TenantId
          format: int32
        siteId:
          type: integer
          description: Read-only  Site Id
          format: int32
        localeCode:
          type: string
          description: The locale code to which this definition applies
          nullable: true
        synonymDefinitions:
          type: array
          items:
            $ref: "#/components/schemas/SynonymDefinition"
          description: List of mappings for this definition
          nullable: true
      additionalProperties: false
      description:
        Non-paged collection of all synonyms for a Site-Locale. Used for
        bulk operations
    SynonymDefinitionPagedCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/SynonymDefinition"
          nullable: true
      additionalProperties: false
      description: Paged collection of synonyms for a Site-Locale.
    TargetedCategory:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the category to which the discount applies.
          format: int32
          nullable: true
      additionalProperties: false
      description:
        Category to discount. When a discount applies to a category, all
        products in the category are discounted.
    TargetedProduct:
      type: object
      properties:
        productCode:
          type: string
          description: Product code of the product to discount.
          nullable: true
      additionalProperties: false
      description: Product to discount.
    TargetedShippingMethod:
      required:
        - code
      type: object
      properties:
        code:
          maxLength: 64
          minLength: 0
          type: string
          description:
            "Unique identifier of the shipping method as it appears in the
            SiteShippingMethod property of the Shipping Settings\r

            resource."
        name:
          type: string
          description: Name of the shipping method as it appears in
            SiteShippingMethodLocalizedContent of the Shipping Settings
            resource.
          nullable: true
      additionalProperties: false
      description:
        "Shipping method that is eligible for free shipping. This is the
        shipping method that is defined with the Shipping\r

        Settings resource."
    TargetedShippingZone:
      required:
        - zone
      type: object
      properties:
        zone:
          maxLength: 200
          minLength: 0
          type: string
          description:
            "Indicates the shipping zone that this discount is valid for.  If
            zone is provided the\r

            method selected must be valid for the zone and both
            populated in the order for the discount\r

            to be valid."
      additionalProperties: false
      description:
        "Shipping method that is eligible for free shipping. This is the
        shipping method that is defined with the Shipping\r

        Settings resource."
    ThresholdMessageLocalizedContent:
      required:
        - messageTemplate
      type: object
      properties:
        localeCode:
          maxLength: 8
          minLength: 0
          type: string
          description:
            Language used for the discount in the current catalog. Defaults
            setting for the active catalog.
          nullable: true
        messageTemplate:
          type: string
          description: Locale-based contents of the Threshold Message.
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    ProductAdminMasterCatalog:
      type: object
      properties:
        id:
          type: integer
          description: MasterCatalogId (readonly)
          format: int32
        name:
          type: string
          description: Name of the MasterCatalog (readonly)
          nullable: true
        productPublishingMode:
          type: string
          description: The product publishing mode of this MasterCatalog
          nullable: true
        enableLiveEdit:
          type: boolean
          description:
            If the publishingMode is Pending and LiveEditsEnabled = true,
            DataViewMode live can be passed in the header and live products can
            be directly edited.
          nullable: true
        isDeleted:
          type: boolean
          description:
            Indicates whether the MasterCatalog has been deleted and should no
            longer be used
      additionalProperties: false
    ProductAdminAttribute:
      type: object
      properties:
        adminName:
          type: string
          description:
            Name of the product displayed in the admin, This field does not
            need to be unqiue, but is required. It can include spaces...and is
            limited to a length of 50.
          nullable: true
        namespace:
          type: string
          description:
            "NameSpace, each application creating attributes will have a uniqe
            namespace to avoid name (Code) collisions. The namespace provided
            must be a valid registered\r

            namespace. If no namespace is specified it is assumed to
            be the namespace of the Tenant."
          nullable: true
        attributeCode:
          type: string
          description:
            "Unique identifier of the Attribute. Must be unique within a
            namespace and cannot be changed once the attribute is created. This
            value will be generated and match the attribute\r

            sequence if not provided on create."
          nullable: true
        attributeFQN:
          type: string
          description:
            Attribute fully qualified name, Read only value that combines
            namespace and attribute code as NameSpace~AttributeCode
          nullable: true
        isValueMappingAttribute:
          type: boolean
          description:
            Specifies if this attribute can can be used to generalize values of
            another attribute
          nullable: true
        valueMappingAttributeFQN:
          type: string
          description:
            Attribute fully qualified name of a corresponding value mapping
            atribuite
          nullable: true
        attributeSequence:
          type: integer
          description:
            Read only System generated monotonically increasing unique sequence
            for each attribute created.
          format: int32
          nullable: true
        attributeDataTypeSequence:
          type: integer
          description:
            Read only System generated monotonically increasing unique sequence
            for each attribute,DataType created (this is used to optimize
            indexed field names in search).
          format: int32
          nullable: true
        masterCatalogId:
          type: integer
          description:
            Indentifier of the master that this attribute is a member of.
            System-supplied and read-only. Attributes will be created in the
            MasterCatalog of the supplied context.
          format: int32
          nullable: true
        inputType:
          maxLength: 20
          type: string
          description:
            "The InputType type of the attribute. Must be a valid value for
            InputType defined in InputTypeConst and the combination of types set
            must match an entry in the AttributeTypeRules resource. \r

            This value cannot be changed after create"
          nullable: true
        valueType:
          maxLength: 20
          type: string
          description:
            "The ValueType of the attribute.  Must be a valid value for
            ValueType defined in ValueTypeTypeConst and the combination of types
            set must match an entry in the AttributeTypeRules resource. \r

            This value cannot be changed after create"
          nullable: true
        dataType:
          maxLength: 20
          type: string
          description:
            "The DataType of the attribute.  Must be a valid value for DataType
            defined in DataTypeTypeConst and the combination of types set must
            match an entry in the AttributeTypeRules resource. \r

            This value cannot be changed after create"
          nullable: true
        isOption:
          type: boolean
          description:
            Specifies if this attribute can have a usage type of Option in a
            ProductType. This value can only be true when when it matches an
            AttributeTypeRule in the AttributeTypeRules resource.
          nullable: true
        isExtra:
          type: boolean
          description:
            Specifies if this attribute can have a usage type of Extra in a
            ProductType. This value can only be true when when it matches an
            AttributeTypeRule in the AttributeTypeRules resource.
          nullable: true
        isProperty:
          type: boolean
          description:
            Specifies if this attribute can have a usage type of Property in a
            ProductType. This value can only be true when when it matches an
            AttributeTypeRule in the AttributeTypeRules resource.
          nullable: true
        attributeMetadata:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminAttributeMetadataItem"
          description:
            Attribute Metadata. This list can contain opaque data (key value
            pairs) that can be used as a property bag for UI concerns.
          nullable: true
        content:
          $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
        localizedContent:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminAttributeLocalizedContent"
          description:
            The Content of an attribute. This content is always in the default
            language of the MasterCatalog.
          nullable: true
        validation:
          $ref: "#/components/schemas/ProductAdminAttributeValidation"
        vocabularyValues:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
          description: The list of Values for this attribute. Only available for
            ValueType:PredefinedVocabulary
          nullable: true
        searchSettings:
          $ref: "#/components/schemas/AttributeSearchSettings"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Attribute
    ProductAdminAttributeCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminAttribute"
          nullable: true
      additionalProperties: false
      description: Collection of attributes.
    ProductAdminAttributeLocalizedContent:
      type: object
      properties:
        localeCode:
          type: string
          description:
            Language used for the attribute name and description. Currently,
            only en_US is supported.
          nullable: true
        name:
          type: string
          description: Name of the attribute in the language specified by LocaleCode.
          nullable: true
        description:
          type: string
          description: Description of the attribute in the language specified by LocaleCode.
          nullable: true
      additionalProperties: false
      description: Container for language-specific content to display on the
        storefront. You'll have a container for each supported language
        (LocaleCode). This enables you to display an attribute in multiple
        languages yet manage it as a single attribute internally.
    ProductAdminAttributeMetadataItem:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
      description:
        Attribute Metadata Item.  It can be utilized for storing abitrary
        key/value pairs of data related to an attribute.
    ProductAdminAttributeValidation:
      type: object
      properties:
        regularExpression:
          type: string
          description:
            Regular expression to run against the attribute value. This should
            follow JavaScript/EMCA's Regular Expression syntax.
          nullable: true
        minStringLength:
          type: integer
          description: For validating strings, minimum length allowed for a string.
          format: int32
          nullable: true
        maxStringLength:
          type: integer
          description: For validating strings, maximum length allowed for a string.
          format: int32
          nullable: true
        minNumericValue:
          type: number
          description: For validating Number attribute value, minimum number allowed.
          format: double
          nullable: true
        maxNumericValue:
          type: number
          description: For validating Number attribute value, maximum number allowed.
          format: double
          nullable: true
        minDateValue:
          type: string
          description: For validating a DateTime attribute value, minimum datetime allowed.
          format: date-time
          nullable: true
        maxDateValue:
          type: string
          description: For validating a DateTime attribute value, maximum datetime allowed.
          format: date-time
          nullable: true
      additionalProperties: false
      description: Used to validate attributes.
    ProductAdminAttributeVocabularyValue:
      type: object
      properties:
        valueSequence:
          type: integer
          description: Read only System generated monotonically increasing unique sequence.
          format: int32
          nullable: true
        value:
          description:
            "The actual value of the attribute vocabulary. This value must be
            unique within the vocabulary for a single attribute and match the
            datatype of the attribute. \r

            String data type requires a canonical value here or one
            will be system generated if null. The actual string content
            displayed to users should be stored as Content. \r

            String values require content to be present.\r

            Once this value is set it cannot be changed."
          nullable: true
        mappedGenericValues:
          type: array
          items: {}
          description:
            "The actual values of the related generic attribute. This value
            must match the datatype of the attribute and already exist \r

            within the Vocabulary values of the related
            ValueMappingAttribute. Only supporting string at this time."
          nullable: true
        productName:
          type: string
          description: The ProductName when the Attribute DataType is ProductCode.
          nullable: true
        content:
          $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
        localizedContent:
          type: array
          items:
            $ref: "#/components/schemas/AttributeVocabularyValueLocalizedContent"
          description:
            The Content of an attribute value. This content is in multiple
            locals supported by the master catalog and is only valid for String
            DataType.
          nullable: true
        displayOrder:
          type: integer
          description:
            The order in which the attribute value displays. If you omit a
            value for this property, Mozu infers the display order from the
            attribute value's position the list.
          format: int32
          nullable: true
      additionalProperties: false
      description: Value of an attribute
    ProductAdminBundledProduct:
      type: object
      properties:
        productCode:
          type: string
          description: Product Code
          nullable: true
        quantity:
          type: integer
          description: Qty of the bundled PRoduct
          format: int32
        price:
          $ref: "#/components/schemas/ProductAdminProductPrice"
        productName:
          type: string
          description: Read only Name of the BundledProduct
          nullable: true
        packageHeight:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        packageWidth:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        packageLength:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        packageWeight:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        fulfillmentTypesSupported:
          type: array
          items:
            type: string
          description: Indicates the fulfillment types the product supports.
          nullable: true
      additionalProperties: false
      description: Price of the product and currency used.
    ProductAdminCategory:
      type: object
      properties:
        id:
          type: integer
          description:
            Internal unique identifier of the category. System-supplied and
            read-only.
          format: int32
          nullable: true
        categoryType:
          type: string
          description: The Type of Category Static, Dyanmic, DynamicPreComputed
          nullable: true
        catalogId:
          type: integer
          description: The CatalogId that the category belongs to.
          format: int32
          nullable: true
        parentCategoryId:
          type: integer
          description:
            Unique identifier of the category to which this category belongs.
            If nil, this is a top-level category. System-supplied and read-only.
          format: int32
          nullable: true
        parentCategoryCode:
          type: string
          nullable: true
        parentCategoryName:
          type: string
          nullable: true
        parentIsActive:
          type: boolean
          nullable: true
        categoryCode:
          type: string
          description: External unique identifier of the category.
          nullable: true
        isActive:
          type: boolean
          description:
            If false, the category is considered unavailable in runtime
            (default is true if not specified on create)
          nullable: true
        isDisplayed:
          type: boolean
          description: If true, the category appears to shoppers on the storefront.
          nullable: true
        sequence:
          type: integer
          description:
            Order in which categories appear when they are at the same level
            (siblings). For example, you could change the sequence of categories
            so that a specific category always appears first.
          format: int32
          nullable: true
        content:
          $ref: "#/components/schemas/CategoryLocalizedContent"
        dynamicExpression:
          $ref: "#/components/schemas/DynamicExpression"
        productCount:
          type: integer
          description:
            Number of products contained in this category. This count includes
            all products contained in any subcategories of this category.
          format: int32
          nullable: true
        childCount:
          type: integer
          description:
            Number of subcategories that belong to this category. These
            subcategories are at the same level (siblings).
          format: int32
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        shouldSlice:
          type: boolean
          description: If True, search displays sliced view
          nullable: true
      additionalProperties: false
      description: Category
    ProductAdminDiscount:
      required:
        - amountType
        - content
        - scope
        - target
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the discount. System-supplied and read-only.
          format: int32
          nullable: true
        content:
          $ref: "#/components/schemas/DiscountLocalizedContent"
        scope:
          type: string
          description:
            "Scope to which the discount applies, valid values are: Order,
            LineItem"
        conditions:
          $ref: "#/components/schemas/ProductAdminDiscountCondition"
        target:
          $ref: "#/components/schemas/ProductAdminDiscountTarget"
        currentRedemptionCount:
          type: integer
          description:
            How many times this discount has been redeemed. System-supplied and
            read-only.
          format: int32
          nullable: true
        amount:
          type: number
          description:
            "    Amount of the discount, as a percentage or monetary amount,
            for example 15% or $15.\r

            Must be either null or greater than zero."
          format: double
          nullable: true
        amountType:
          type: string
          description:
            "Type of discount, which can be either a percentage off the price,
            \r

            a specific monetary amount, or free. \r

            Possible values: \r

            \tPercentage \r

            \tAmount \r

            \tFree\r

            \tFixedPrice"
        status:
          type: string
          description:
            Discount status which can be "Active," "Scheduled," or "Expired."
            System-supplied and read-only.
          nullable: true
        canBeDeleted:
          type: boolean
          description: Signifies that the discount is not referenced and can be hard deleted
        doesNotApplyToSalePrice:
          type: boolean
          description:
            "Determines if the discount should apply to sale price or regular
            price only.\r

            Discounts will apply to sale prices by default.\r

            Only applies to LineItem product discounts."
          nullable: true
        doesNotApplyToProductsWithSalePrice:
          type: boolean
          description:
            "Determines whether or not a discount applies to a items with a
            sale price.  Applicable \r

            on order and line item discounts.  For line items, when
            this is true, the discount will \r

            be disqualified.  For order level discounts, when true,
            the discount will not be applied \r

            to those items have a sale price."
          nullable: true
        maximumUsesPerUser:
          type: integer
          description:
            "Maximum number of times a user can redeem this discount.\r

            \ Must be either null or greater than zero."
          format: int32
          nullable: true
        maximumDiscountImpactPerOrder:
          type: number
          description:
            "Maximum impact this discount can apply on a single order.\r

            \ Must be either null or greater than zero."
          format: double
          nullable: true
        maximumDiscountImpactPerRedemption:
          type: number
          description:
            "Maximum impact this discount can apply on a single line item.\r

            \ Must be either null or greater than zero."
          format: double
          nullable: true
        maximumRedemptionsPerOrder:
          type: integer
          description: "Maximum number of redemptions allowed per order.\r

            If null, defaults to unlimited."
          format: int32
          nullable: true
        includedPriceLists:
          type: array
          items:
            type: string
          description:
            "Products receiving a price from a price list specified here or a
            child of a specified \r

            price list can be discounted."
          nullable: true
        doesNotApplyToMultiShipToOrders:
          type: boolean
          description:
            "Flag to allow or prevent application to multi-ship-to orders,\r

            Only applicable to shipping discounts."
          nullable: true
        isBxGx:
          type: boolean
          description:
            "Readonly property indicating that the condition required purchase
            is the \r

            same as the target items.  Used in BxGx and BoGo type
            discounts."
          nullable: true
        canBeStackedUpon:
          type: boolean
          description: Indicates whether or not stacking is enabled for this discount
          nullable: true
        stackingLayer:
          type: integer
          description: Indicates which stacking layer this discount is a part of
          format: int32
          nullable: true
        thresholdMessage:
          $ref: "#/components/schemas/ProductAdminThresholdMessage"
        preventLineItemShippingDiscounts:
          type: boolean
          description:
            "Prevents Line Item Shipping discounts from being applied when a
            Line Item Product  \r

            discount has been applied"
          nullable: true
        preventOrderProductDiscounts:
          type: boolean
          description:
            "Prevents Order Product discounts from being applied when a Line
            Item Product  \r

            or Shipping discount has been applied"
          nullable: true
        preventOrderShippingDiscounts:
          type: boolean
          description:
            "Prevents Order Shipping discounts from being applied when a Line
            Item Product/Shipping  \r

            or Order Product discount has been applied"
          nullable: true
        hasPurchaseConditions:
          type: boolean
          description:
            "Indicates if this discount has purchase conditions that must be
            met before \r

            the discount is applied"
        purchaseRequirementType:
          type: string
          description:
            "The type of purchase requirement for this discount, either
            purchase conditions and targets which   \r

            Supports BoGo, and BxGx scenarios. Or Target only that
            only have a target and no purchase conditions"
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: "Allows you to define and manage discounts to apply to your
        products, product categories, or orders. The discounts can be a
        specified monetary amount off the price, percentage off the price, or
        for free shipping.\r

        You can create a coupon code that applies to the discount."
    ProductAdminProduct:
      type: object
      properties:
        productCode:
          type: string
          description:
            Merchant-created code indentifier associated with the product, for
            example, a SKU or product item number.
          nullable: true
        productUsage:
          type: string
          description:
            Indicates the usage type of this product. Must be one of the values
            in ProductUsageConst.
          nullable: true
        fulfillmentTypesSupported:
          type: array
          items:
            type: string
          description: Indicates the fulfillment types the product supports.
          nullable: true
        masterCatalogId:
          type: integer
          description:
            Indentifier of the Master Catalog that this product is a member of.
            System-supplied and read-only
          format: int32
          nullable: true
        productSequence:
          type: integer
          description: System generated monotonically increasing sequence
          format: int32
          nullable: true
        productTypeId:
          type: integer
          description:
            Unique identifier of the productType of the product. Refers to a
            valid ProductType that was previously created with the ProductType
            resource.
          format: int32
          nullable: true
        isValidForProductType:
          type: boolean
          description:
            Read only flag that indicates if the product meets the product type
            constraints (All adminRequired attributes have a valid value)
          nullable: true
        baseProductCode:
          type: string
          description:
            This is the base product ProductCode of a product that is a
            variation. It is read-only and only populated for products that are
            variations of a configurable base product.
          nullable: true
        productInCatalogs:
          type: array
          items:
            $ref: "#/components/schemas/ProductInCatalogInfo"
          description:
            Catalog specifc info for each catalog a product is valid in. There
            should always be one or more entries here.
          nullable: true
        content:
          $ref: "#/components/schemas/ProductLocalizedContent"
        price:
          $ref: "#/components/schemas/ProductAdminProductPrice"
        pricingBehavior:
          $ref: "#/components/schemas/ProductAdminProductPricingBehaviorInfo"
        seoContent:
          $ref: "#/components/schemas/ProductLocalizedSEOContent"
        options:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminProductOption"
          description:
            The Options defined in the product Type that are currently assigned
            to this product
          nullable: true
        extras:
          type: array
          items:
            $ref: "#/components/schemas/ProductExtra"
          description:
            The Extras defined in the product Type that are currently assigned
            to this product
          nullable: true
        properties:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminProductProperty"
          description:
            The Properties defined in the product Type that are currently
            assigned to this product
          nullable: true
        isTaxable:
          type: boolean
          description: If true, the product is subject to tax.
          nullable: true
        inventoryInfo:
          $ref: "#/components/schemas/ProductAdminProductInventoryInfo"
        shippingClassId:
          type: integer
          format: int32
          nullable: true
        isRecurring:
          type: boolean
          description:
            If true, the product can be purchased or fulfilled at regular
            intervals, for example, monthly billing or a subscription.
          nullable: true
        upc:
          type: string
          description: UPC code of the product.
          nullable: true
        supplierInfo:
          $ref: "#/components/schemas/ProductSupplierInfo"
        isPackagedStandAlone:
          type: boolean
          description: Does this product need to be packaged on its own
          nullable: true
        standAlonePackageType:
          type: string
          description: When packaged alone this is the package type
          nullable: true
        packageHeight:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        packageWidth:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        packageLength:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        packageWeight:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        applicableDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminDiscount"
          description: Read only. List of discounts that are available for a product.
          nullable: true
        isVariation:
          type: boolean
          description:
            Read only. If true, this is a product variation of a product with
            configurable options. System-supplied and read-only.
        variationKey:
          type: string
          description:
            Read only. If IsVariation true, thish provides a unique key to
            manage the variation of the base product.
          nullable: true
        hasConfigurableOptions:
          type: boolean
          description:
            Read only. If true, this product has configurable options. The
            product is not purchasable until the shopper selects options that
            resolve to a product variation. System-supplied and read-only.
        hasStandAloneOptions:
          type: boolean
          description:
            Read only. If true, the product has stand-alone options that a
            shopper may select. System-supplied and read-only.
        variationOptions:
          type: array
          items:
            $ref: "#/components/schemas/ProductVariationOption"
          description:
            Read only List of variations that exist for a product. This is only
            populated when IsVariation is true. To get the list of options, the
            GET request must include the VariationOptions response group.
          nullable: true
        publishingInfo:
          $ref: "#/components/schemas/ProductPublishingInfo"
        bundledProducts:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminBundledProduct"
          description:
            "list of other products that are included in a BundleProduct\r

            This requires that the ProductUsage be set to Bundle"
          nullable: true
        productCollectionProducts:
          type: array
          items:
            $ref: "#/components/schemas/ProductCollectionProduct"
          description:
            "list of other products that are members of a ProductCollection\r

            This requires that the ProductUsage be set to
            Collection"
          nullable: true
        productCollections:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminProductCollectionInfo"
          description:
            List of Mozu.ProductAdmin.Contracts.ProductCollectionInfo that this
            product belongs to
          nullable: true
        productImageGroups:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminProductImageGroup"
          description: "List of the image groups this product uses.\r

            Image groups are used to map different images to
            different product options.\r

            If the product doesn't have options then all images will
            be in the default\r

            image group."
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        slicingSettings:
          $ref: "#/components/schemas/SlicingSettings"
        primaryProductCollectionCode:
          type: string
          description:
            When this product belongs to a product collection this is the
            product id for the primary collection.
          nullable: true
      additionalProperties: false
      description:
        Use the Products resource to create and manage products for your
        store. You can create products with options that a shopper configures
        (such as a T-shirt color and size). The system can manage inventory for
        all combinations of your product options, and can calculate tax and
        shipping costs.
    ProductAdminProductOption:
      type: object
      properties:
        attributeFQN:
          type: string
          description: Unique identifier of the Attribute.
          nullable: true
        isProductImageGroupSelector:
          type: boolean
          description:
            Defines whether or not this option can be used to segment product
            images
          nullable: true
        values:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminProductOptionValue"
          description: List of all the values for this product option.
          nullable: true
      additionalProperties: false
      description: "Product options for configurable or stand-alone products. A
        configurable option is one that the shopper chooses when ordering, for
        example, \r

        the color of a T-shirt. A stand-alone option is independent of
        the product and can be added to the product order. For example, a
        monogram."
    ProductAdminProductPrice:
      type: object
      properties:
        isoCurrencyCode:
          type: string
          description: Currency code.
          nullable: true
        price:
          type: number
          description:
            Price of the product. This is the price the merchant intends to
            sell the product if no sale price is present.
          format: double
          nullable: true
        salePrice:
          type: number
          description:
            Current sale price of the product. Sale price is a numeric
            (monetary) amount, not a percentage off.
          format: double
          nullable: true
        msrp:
          type: number
          description: Manufacturer Suggested Retail Price. +
          format: double
          nullable: true
        map:
          type: number
          description: Minimum Advertised Price
          format: double
          nullable: true
        mapStartDate:
          type: string
          description:
            Minimum Advertised Price effective start date (null = begining of
            time)
          format: date-time
          nullable: true
        mapEndDate:
          type: string
          description: Minimum Advertised Price effectivity end date (null = forever)
          format: date-time
          nullable: true
        creditValue:
          type: number
          description: Credit amt of the product
          format: double
          nullable: true
      additionalProperties: false
      description: Price of the product and currency used.
    ProductAdminProductProperty:
      type: object
      properties:
        attributeFQN:
          type: string
          description: Unique identifier of the Attribute.
          nullable: true
        values:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminProductPropertyValue"
          nullable: true
      additionalProperties: false
      description: "Product options for configurable or stand-alone products. A
        configurable option is one that the shopper chooses when ordering, for
        example, \r

        the color of a T-shirt. A stand-alone option is independent of
        the product and can be added to the product order. For example, a
        monogram."
    ProductAdminProductPropertyValue:
      type: object
      properties:
        value:
          nullable: true
        content:
          $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
        localizedContent:
          type: array
          items:
            $ref: "#/components/schemas/ProductPropertyValueLocalizedContent"
          nullable: true
        attributeVocabularyValueDetail:
          $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
      additionalProperties: false
      description: A value of a product option for this product. For example, a
        computer product may have an option called "Memory" that can have the
        values "6GB,"8GB," and "12GB."
    ProductAdminThresholdMessage:
      required:
        - content
        - discountId
        - thresholdValue
      type: object
      properties:
        discountId:
          type: integer
          description: Unique identifier of the discount. System-supplied and read-only.
          format: int32
        thresholdValue:
          type: number
          description:
            The cart total amount that must be met before the threshold message
            is displayed
          format: double
        isActive:
          type: boolean
          description: Indicates if threshold messages are active for this discount
        showInCart:
          type: boolean
          description: Indicates if the threshold message will display in the cart
        showOnCheckout:
          type: boolean
          description: Indicates if the threshold message will display on the checkout page
        requiresCouponCode:
          type: boolean
          description:
            Indicates if the threshold message will display when a promo code
            is evaluated
        content:
          $ref: "#/components/schemas/ThresholdMessageLocalizedContent"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    ProductAdminActiveDateRange:
      type: object
      properties:
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      description: Active Effectivity Dates
    ProductAdminFacet:
      type: object
      properties:
        facetId:
          type: integer
          description: The unique identifier for the facet definition
          format: int32
          nullable: true
        source:
          $ref: "#/components/schemas/FacetSource"
        facetType:
          type: string
          description:
            "The type of facet. Allowable values are: Value, RangeQuery \r

            Must be a valid value for DataType defined in
            FacetTypeConst."
          nullable: true
        order:
          type: integer
          description: Used to order the display of the facets within a section
          format: int32
        categoryId:
          type: integer
          description: The category that the facet is being configured at
          format: int32
          nullable: true
        categoryCode:
          type: string
          description: The category that the facet is being configured at
          nullable: true
        valueSortType:
          type: string
          description:
            "Determines how the facet values will be sorted in the store. \r

            Must be a valid value for DataType defined in
            FacetValueSortTypeConst. \r

            Allowable values are: CountAscending, CountDescending,
            ValuesAscending, ValuesDescending, AttributeDefinition,
            AttributeDefinitionDescending.\r

            The default if no value is specified will be
            CountDescending."
          nullable: true
        overrideFacetId:
          type: integer
          description: The ID of a parent category's facet being overriden
          format: int32
          nullable: true
        isHidden:
          type: boolean
          description: Indicates whether the facet is hidden for the given category
        validity:
          $ref: "#/components/schemas/FacetValidity"
        rangeQueries:
          type: array
          items:
            $ref: "#/components/schemas/FacetRangeQuery"
          description: List of ranges if the Facet is of type Range
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: The definition of a Facet
    ProductAdminCustomerSegment:
      type: object
      properties:
        id:
          type: integer
          description: "The Customer segment Id.\r

            This is the  system Id not the code."
          format: int32
      additionalProperties: false
      description: Represents a customer segment
    ProductAdminDiscountCondition:
      type: object
      properties:
        maxRedemptionCount:
          type: integer
          description:
            Maximum number of times that the discount can be redeemed. Default
            is null (no limit to discount redemptions).
          format: int32
          nullable: true
        requiresCoupon:
          type: boolean
          description:
            If true, the shopper needs to enter a coupon code to redeem the
            discount.
        couponCode:
          type: string
          description:
            Code of the coupon associated with the discount (if a coupon code
            is required). The merchant can supply the code or the system can
            generate it.
          nullable: true
        requiresAuthenticatedUser:
          type: boolean
          description:
            "Determines is this discount can be used by an anonymous user \r

            Defaults to false to allow discounts for anonymous
            users."
        includedPaymentWorkflows:
          type: array
          items:
            type: string
          description: List of payment types that trigger this discount to be valid.
          nullable: true
        includedCategories:
          type: array
          items:
            $ref: "#/components/schemas/CategoryDiscountCondition"
          description:
            List of categories that must be purchased in order for the discount
            to be valid.
          nullable: true
        excludedCategories:
          type: array
          items:
            $ref: "#/components/schemas/CategoryDiscountCondition"
          description:
            List of categories to discount. When a discount applies to a
            category, all products in the category are discounted.
          nullable: true
        includedProducts:
          type: array
          items:
            $ref: "#/components/schemas/ProductDiscountCondition"
          description: List of products that are eligible for the discount.
          nullable: true
        excludedProducts:
          type: array
          items:
            $ref: "#/components/schemas/ProductDiscountCondition"
          description: List of products that are eligible for the discount.
          nullable: true
        customerSegments:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminCustomerSegment"
          description: List of customer groups for which the discount applies
          nullable: true
        minimumQuantityRequiredProducts:
          type: integer
          description:
            "Minimum quantity of products in the specified IncludedProducts
            that must be purchased to\r

            qualify for the associated discount.\r

            Defaults to 1 if  null and IncludedProducts has values."
          format: int32
          nullable: true
        minimumQuantityProductsRequiredInCategories:
          type: integer
          description:
            "Minimum quantity of products in the categories specified in
            IncludedCategories that must be purchased to\r

            qualify for the associated discount.\r

            Defaults to 1 if  null and IncludedCategories has
            values"
          format: int32
          nullable: true
        minimumOrderAmount:
          type: number
          description: "Only applies to order.\r

            Minimum order subtotal after discounts in order for the
            associated discount to be applied"
          format: double
          nullable: true
        maximumOrderAmount:
          type: number
          description: "Only applies to order.\r

            Maximum order subtotal after discounts in order for the
            associated discount to be applied"
          format: double
          nullable: true
        categoriesToExcludeFromMinOrderTotal:
          type: array
          items:
            $ref: "#/components/schemas/CategoryDiscountCondition"
          description:
            List of categories to discount. When a discount applies to a
            category, all products in the category are discounted.
          nullable: true
        productsToExcludeFromMinOrderTotal:
          type: array
          items:
            $ref: "#/components/schemas/ProductDiscountCondition"
          description: List of products that are eligible for the discount.
          nullable: true
        minimumLifetimeValueAmount:
          type: number
          description: Minimum lifetime value amount required for this discount to apply
          format: double
          nullable: true
        startDate:
          type: string
          description:
            Date when the discount can goes into effect, in the format
            yyyy-mm-dd.
          format: date-time
          nullable: true
        expirationDate:
          type: string
          description: Date when the discount expires. Default is null (no expiration date).
          format: date-time
          nullable: true
        minimumCategorySubtotalBeforeDiscounts:
          type: number
          description:
            "Minimum amount that must be purchased in the combined categories
            defined in \r

            IncludedCategories.  Amount is calculated before
            discounting.\r

            Not used if IncludedCategories is empty."
          format: double
          nullable: true
        minimumRequiredQuantityPerRedemption:
          type: integer
          description:
            Defines a minimum quantity that is required for a target only
            discount
          format: int32
          nullable: true
      additionalProperties: false
      description:
        "Specifies constraints that must be satified for a discount to be
        applied to a target.\r

        Constraints are Anded together"
    ProductAdminDiscountTarget:
      required:
        - type
      type: object
      properties:
        type:
          type: string
          description:
            "    Type of target to which the discount applies. Possible values:
            <pre>Product</pre> or <pre>Shipping</pre>. \r

            If this is a <pre>Product</pre> type, you can specify
            which products or categories that the discount applies to.\r

            \    If this is a <pre>Shipping</pre> type then you must
            specify which shipping methods apply."
        includeAllProducts:
          type: boolean
          description: If yes, the discount applies to all products sold on the storefront.
          nullable: true
        includedCategoriesOperator:
          type: string
          description: "Applies to Included categories\r

            When Any, the target product can belong to any specified
            category.\r

            When All, the target product must belong to all
            specified categories.\r

            Defaults to Any"
          nullable: true
        categories:
          type: array
          items:
            $ref: "#/components/schemas/TargetedCategory"
          description:
            List of categories to discount. When a discount applies to a
            category, all products in the category are discounted.
          nullable: true
        excludedCategoriesOperator:
          type: string
          description: "Applies to Included categories\r

            Defaults to Any"
          nullable: true
        excludedCategories:
          type: array
          items:
            $ref: "#/components/schemas/TargetedCategory"
          description:
            List of categories to exclude from the discount. Useful to exclude
            specific child categories.
          nullable: true
        products:
          type: array
          items:
            $ref: "#/components/schemas/TargetedProduct"
          description: List of products that are eligible for the discount.
          nullable: true
        excludedProducts:
          type: array
          items:
            $ref: "#/components/schemas/TargetedProduct"
          description: List of products that are excluded from the discount.
          nullable: true
        excludeItemsWithExistingShippingDiscounts:
          type: boolean
          description:
            "Prevents order scoped discounts from layering over items that
            already have a shipping discount with the \r

            same type."
          nullable: true
        excludeItemsWithExistingProductDiscounts:
          type: boolean
          description:
            "Prevents order scoped discounts from layering over items that
            already have a product discount with the \r

            same type."
          nullable: true
        shippingMethods:
          type: array
          items:
            $ref: "#/components/schemas/TargetedShippingMethod"
          description:
            Shipping method that is eligible for shipping discounts. This is a
            shipping method defined in Shipping Settings.
          nullable: true
        shippingZones:
          type: array
          items:
            $ref: "#/components/schemas/TargetedShippingZone"
          description: Shipping Zones that are applicable for this discount
          nullable: true
        maximumQuantityPerRedemption:
          type: integer
          description:
            "When a condition is specified, this property limits the number of
            items that can be targeted per discount redemption with an order.\r

            if multiple redemptions are allowed per order then
            multiples of this value would be allowed in multiples of the
            associated \r

            condition.\r

            If no condition is specified then this value is not
            used.  \r

            If null and condition exists, then defaults to 1."
          format: int32
          nullable: true
        appliesToLeastExpensiveProductsFirst:
          type: boolean
          description:
            "Determines which way the discount is optimized.  Consumers
            favor(default - false/null) or tenants favor (when this is set to
            true)\r

            Applies to discounts where target is not a specific
            product or list of products.  \r

            May also impact behavior of Buy X Get Y so that X is the
            most expensive items and Y the least expensive."
          nullable: true
      additionalProperties: false
      description:
        "What to discount. Specifies the type of discount (percentage off,
        monetary amount, or free shipping) and which products, categories, or
        shipping methods are eligible for the discount.\r

        Can also specify the minimum amount that the order must total
        for the discount to apply."
    ProductAdminAttributeVocabularyValueDisplayInfo:
      type: object
      properties:
        cmsId:
          type: string
          description: Id of the image in the CMS.
          nullable: true
        imageUrl:
          type: string
          description: URL of the image.
          nullable: true
        colorValue:
          type: string
          description: Hex Color value to display in a color picker
          nullable: true
      additionalProperties: false
    ProductAdminCurrencyExchangeRate:
      required:
        - rate
      type: object
      properties:
        fromCurrencyCode:
          type: string
          description: The source currency code
          nullable: true
        toCurrencyCode:
          type: string
          description: The target currency code
          nullable: true
        rate:
          type: number
          description: The exchange rate
          format: double
        multiplier:
          type: number
          description: An additional multiplier to use in calculations
          format: double
          nullable: true
        referenceData:
          type: string
          description: Reference data for miscellaneous metadata from updates
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: The exchange rate between two currencies
    ProductAdminLocationInventory:
      type: object
      properties:
        locationCode:
          type: string
          nullable: true
        productCode:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
        stockOnHand:
          type: integer
          format: int32
          nullable: true
        stockAvailable:
          type: integer
          format: int32
          nullable: true
        stockOnBackOrder:
          type: integer
          format: int32
          nullable: true
        baseProductCode:
          type: string
          nullable: true
        sku:
          type: string
          nullable: true
        mfgPartNumber:
          type: string
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: The inventory for a product at a specific Location
    ProductAdminLocationInventoryCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminLocationInventory"
          nullable: true
      additionalProperties: false
      description: Collection of products returned as a whole. A collection is not paged.
    ProductAdminPriceList:
      required:
        - name
        - priceListCode
      type: object
      properties:
        priceListCode:
          type: string
        priceListSequence:
          type: integer
          format: int32
        parentPriceListCode:
          type: string
          description: Parent PriceList code, Can be null for root level priceLists
          nullable: true
        parentPriceListName:
          type: string
          description:
            Parent PriceList name, Can be null for root level priceLists. Read
            only in contract.
          nullable: true
        name:
          type: string
          description: Name of the priceList. Max length is 100
        description:
          type: string
          description: Description of the price list. Max length is 300
          nullable: true
        enabled:
          type: boolean
          description:
            Is the price list enabled and valid in the storefront. Default is
            true.
          nullable: true
        filteredInStorefront:
          type: boolean
          description:
            When true, only products with valid price list entries will be
            visible in the storefront. Default is false
          nullable: true
        validForAllSites:
          type: boolean
          description:
            When true, no valid sites need to be specifiied. Price list is
            considered valid for all sites. Default is true
          nullable: true
        validSites:
          type: array
          items:
            type: integer
            format: int32
          description:
            When ValidForAllSites = false, a list of siteIDs that the price
            list is valid for should be supplied
          nullable: true
        defaultForSites:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        indexedSites:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        mappedCustomerSegments:
          type: array
          items:
            type: string
          description:
            "List of customer segment code associated with this price list.\r

            Used to resolve default price list"
          nullable: true
        rank:
          type: integer
          description:
            Used to prioritize price list resolution when more than 1 price
            list maps
          format: int32
          nullable: true
        resolvable:
          type: boolean
          description:
            "Determines if this price list can be resolved as the current price
            list \r

            within a session."
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Category
    ProductAdminProductCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminProduct"
          nullable: true
      additionalProperties: false
      description: Collection of products returned as a whole. A collection is not paged.
    ProductAdminProductCollectionInfo:
      type: object
      properties:
        collectionProductCode:
          type: string
          description:
            Product code of the product that is the collection that the
            containing product belongs to
          nullable: true
        collectionName:
          type: string
          description: Collection name in the language of the master catalog
          nullable: true
        isPrimaryCollection:
          type: boolean
          description: True when this is the primary collection for the containing product.
          nullable: true
      additionalProperties: false
      description: "Information about the relationship between a
        Mozu.ProductAdmin.Contracts.Product and a productCollection (product
        with usagetype of collection)\r

        This is only represented on the product member side of the
        relationship."
    ProductAdminProductCollectionMemberKey:
      type: object
      properties:
        value:
          type: string
          description: Key to resolve a collection member product
          nullable: true
      additionalProperties: false
      description: Key to resolve a collection member
    ProductAdminProductCost:
      type: object
      properties:
        isoCurrencyCode:
          type: string
          description: Currency code.
          nullable: true
        cost:
          type: number
          description:
            Cost of the product. This is the price the merchant pays for the
            product.
          format: double
          nullable: true
      additionalProperties: false
      description: Price of the product and currency used.
    ProductAdminProductImageGroupTag:
      required:
        - fqn
      type: object
      properties:
        fqn:
          type: string
        values:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ProductAdminProductInventoryInfo:
      type: object
      properties:
        manageStock:
          type: boolean
          description: If true, the Products service manages inventory for this product.
          nullable: true
        outOfStockBehavior:
          type: string
          description:
            The behvior when the ManageStock is true and the product is not in
            stock.
          nullable: true
      additionalProperties: false
      description:
        Use the Products resource to create and manage products for your
        store. You can create products with options that a shopper configures
        (such as a T-shirt color and size). The system can manage inventory for
        all combinations of your product options, and can calculate tax and
        shipping costs.
    ProductAdminProductOptionValue:
      type: object
      properties:
        value:
          nullable: true
        attributeVocabularyValueDetail:
          $ref: "#/components/schemas/ProductAdminAttributeVocabularyValue"
      additionalProperties: false
      description: A value of a product option for this product. For example, a
        computer product may have an option called "Memory" that can have the
        values "6GB,"8GB," and "12GB."
    ProductAdminProductPricingBehaviorInfo:
      type: object
      properties:
        discountsRestricted:
          type: boolean
          nullable: true
        discountsRestrictedStartDate:
          type: string
          format: date-time
          nullable: true
        discountsRestrictedEndDate:
          type: string
          format: date-time
          nullable: true
        variationPricingMethod:
          type: string
          description: Only used when product is a variation
          nullable: true
      additionalProperties: false
      description: Pricing behavior associated with the product
    ProductAdminCategoryCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminCategory"
          nullable: true
      additionalProperties: false
      description: Collection of categories returned as a whole. A collection is not paged.
    ProductAdminCategoryPagedCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminCategory"
          nullable: true
      additionalProperties: false
      description:
        Collection of categories where categories are returned in a series
        of pages.
    ProductAdminProductImageGroup:
      required:
        - productImageGroupId
      type: object
      properties:
        productImageGroupId:
          type: string
        productImageGroupTags:
          type: array
          items:
            $ref: "#/components/schemas/ProductAdminProductImageGroupTag"
          nullable: true
      additionalProperties: false
    AttributeDetail:
      type: object
      properties:
        valueType:
          type: string
          description:
            The ValueType of the attribute. Valid values for ValueType are
            defined in ValueTypeTypeConst.
          nullable: true
        inputType:
          type: string
          description:
            The InputType type of the attribute. Valid values for InputType are
            defined in InputTypeConst.
          nullable: true
        dataType:
          type: string
          description:
            The DataType of the attribute. Valid values for DataType are
            defined in DataTypeTypeConst.
          nullable: true
        usageType:
          type: string
          description:
            The UsageType of the attribute. Valid values for the usageType are
            defined in UsageTypeConst .
          nullable: true
        dataTypeSequence:
          type: integer
          description:
            A unique sequence of the attribute By dataType (used for common
            naming of fields in search index)
          format: int32
        name:
          type: string
          description: Name of the attribute in the language specified by LocaleCode.
          nullable: true
        description:
          type: string
          description: Description of the attribute in the language specified by LocaleCode.
          nullable: true
        validation:
          $ref: "#/components/schemas/ProductAdminAttributeValidation"
        searchableInStorefront:
          type: boolean
          description: Indicates whether the attribute value is searchable.
        searchDisplayValue:
          type: boolean
          description:
            "If true, the system will index the display value of string
            attributes instead of the canonical value for searching. \r

            The canonical value will always be used for filtering.
            Does not apply for for non-string attributes."
        allowFilteringAndSortingInStorefront:
          type: boolean
          description:
            Indicates whether the attribute should be able to be used in
            filters, facets, and sorting on the public storefront.
        indexValueWithCase:
          type: boolean
          description: Indicates whether the attribtue value is indexed with case or not
          nullable: true
        customWeightInStorefrontSearch:
          type: boolean
          description:
            Indicates whether the attribtue value is indexed so that it can
            have a custom relevency weight compared to other attributes in a
            tokenized text search
          nullable: true
        displayIntention:
          type: string
          description:
            Am optional hint to the theme about how this attribute should be
            displayed (what control to use)
          nullable: true
      additionalProperties: false
      description:
        Product Attribute properties common between a Product Propery,
        Option, and Extra
    BundledProductBase:
      type: object
      properties:
        productCode:
          type: string
          description:
            Merchant-created code associated with the product, for example, a
            SKU.
          nullable: true
        goodsType:
          type: string
          description: The GoodsType of this product (Physical, Digital, DigitalCredit)
          nullable: true
        quantity:
          type: integer
          description: The quantity of the bundled product
          format: int32
        measurements:
          $ref: "#/components/schemas/StoreFrontProductPackageMeasurements"
        isPackagedStandAlone:
          type: boolean
          description: Is this product shipped in its own package
          nullable: true
        inventoryInfo:
          $ref: "#/components/schemas/StoreFrontProductProductInventoryInfo"
        optionAttributeFQN:
          type: string
          description:
            Fully Qualified Name of the selected option's attribute (only
            applies to Products as extras)
          nullable: true
        optionValue:
          description: Value of the selected option (only applies to Products as extras)
          nullable: true
        creditValue:
          type: number
          description:
            Credit Value applicable to this product. Should only be present on
            DigitalCredit goodsType....
          format: double
          nullable: true
        productType:
          type: string
          nullable: true
      additionalProperties: false
      description: Details of a product, including its product code, name,
        description, options (if any), and current state--whether the product
        can be purchased given the options selected currently.
    BundledProductSummary:
      type: object
      allOf:
        - $ref: "#/components/schemas/BundledProductBase"
      properties:
        productShortDescription:
          type: string
          nullable: true
        productName:
          type: string
          nullable: true
      additionalProperties: false
    CampaignResult:
      type: object
      properties:
        tenantId:
          type: integer
          format: int32
        siteId:
          type: integer
          format: int32
        campaignName:
          type: string
          nullable: true
        campaignId:
          type: string
          nullable: true
        json:
          type: string
          nullable: true
        campaignDescription:
          type: string
          nullable: true
        campaignStartDate:
          type: string
          format: date-time
          nullable: true
        campaignEndDate:
          type: string
          format: date-time
          nullable: true
        statusId:
          type: integer
          format: int32
          nullable: true
        siteSearchSettings:
          $ref: "#/components/schemas/CampaignSiteSearchSettings"
        productSuggestSettings:
          $ref: "#/components/schemas/CampaignProductSuggestSettings"
        listingSettings:
          $ref: "#/components/schemas/CampaignListingSettings"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Campaign result from db
    CategoryContent:
      type: object
      properties:
        categoryImages:
          type: array
          items:
            $ref: "#/components/schemas/CategoryImage"
          description: Images associated with the category.
          nullable: true
        name:
          type: string
          description: Name of the category as it appears on the storefront.
          nullable: true
        description:
          type: string
          description: Description of the category as it appears on the storefront.
          nullable: true
        pageTitle:
          type: string
          description: Title that appears at the top of new pages.
          nullable: true
        metaTagTitle:
          type: string
          description:
            Metadata title. Metadata can be used to manage information
            internally.
          nullable: true
        metaTagDescription:
          type: string
          description:
            Metadata description. Metadata can be used to manage information
            internally.
          nullable: true
        metaTagKeywords:
          type: string
          description:
            Metadata keywords. Metadata can be used to manage information
            internally.
          nullable: true
        slug:
          type: string
          description:
            Human-readable identifier given to the category to create friendly
            URLs.
          nullable: true
      additionalProperties: false
      description:
        Name of the category and optionally, a description, page title,
        friendly URL, associated images, and any metadata.
    CategoryImage:
      type: object
      properties:
        imageLabel:
          type: string
          description: Image title.  Unicode data with a maximum length of 50 characters.
          nullable: true
        altText:
          type: string
          description:
            Descriptive text associated with the image. Unicode data with a
            maximum length of 200 characters.
          nullable: true
        imageUrl:
          type: string
          description: Image URL. Unicode data with a maximum length of 4000 characters.
          nullable: true
        cmsId:
          type: string
          description: Id of the image in the CMS.
          nullable: true
        videoUrl:
          type: string
          description:
            URL of the video. Unicode data with a maximum length of 4000
            characters.
          nullable: true
        mediaType:
          type: string
          description:
            Type of media. Used by the client to determine how to render the
            image or video or what have you.
          nullable: true
        sequence:
          type: integer
          description:
            For categories with multiple images, the sequence is the order in
            which this image appears. Whole number data. Required.
          format: int32
          nullable: true
      additionalProperties: false
      description: Image or video associated with a category.
    ConfiguredProduct:
      type: object
      properties:
        productCode:
          type: string
          description:
            Merchant-created code associated with the product, for example, a
            SKU.
          nullable: true
        purchaseLocation:
          type: string
          description:
            "The location where the product is being purchased.. default is
            null. Products can have different prices\r

            by purchaseLocation via custom priceListResolution...."
          nullable: true
        fulfillmentTypesSupported:
          type: array
          items:
            type: string
          description: Indicates the fulfillment types the product supports.
          nullable: true
        variationProductCode:
          type: string
          description:
            "For a product with options, the code of the product variation that
            represents the current selection of product options. \r

            Question: is this right?"
          nullable: true
        upc:
          type: string
          description: UPC code of the product.
          nullable: true
        mfgPartNumber:
          type: string
          description: Manufacturer part number.
          nullable: true
        purchasableState:
          $ref: "#/components/schemas/ProductPurchasableState"
        priceRange:
          $ref: "#/components/schemas/ProductPriceRange"
        volumePriceBands:
          type: array
          items:
            $ref: "#/components/schemas/ProductVolumePrice"
          description:
            For products with bulk pricing... this will be populated with
            pricebands, depending on what options have been selected...
          nullable: true
        volumePriceRange:
          $ref: "#/components/schemas/ProductPriceRange"
        price:
          $ref: "#/components/schemas/StoreFrontProductProductPrice"
        availableShippingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductDiscount"
          description: List of potential shipping discounts available for this product.
          nullable: true
        measurements:
          $ref: "#/components/schemas/StoreFrontProductPackageMeasurements"
        inventoryInfo:
          $ref: "#/components/schemas/StoreFrontProductProductInventoryInfo"
        options:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProductOption"
          description:
            Remaining options and option values that can be selected given the
            shopper's current selection of options.
          nullable: true
        properties:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProductProperty"
          description:
            Remaining options and option values that can be selected given the
            shopper's current selection of options.
          nullable: true
        priceListEntryTypeProperty:
          $ref: "#/components/schemas/StoreFrontProductProductProperty"
        productImages:
          type: array
          items:
            $ref: "#/components/schemas/ProductImage"
          description: Images associated with the product.
          nullable: true
      additionalProperties: false
      description: Product as it is currently configured on the storefront. The
        configuration changes each time the shopper changes the product order.
    DiscountSelections:
      type: object
      properties:
        discountIds:
          type: array
          items:
            type: integer
            format: int32
          description: Discount Ids
          nullable: true
      additionalProperties: false
      description: Discount Selections
    DiscountValidationSummary:
      type: object
      properties:
        applicableDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductDiscount"
          description: Applicable/Valid Discounts
          nullable: true
      additionalProperties: false
      description:
        Provides a summary (more accurately it is a container) for valid
        discounts for potentially valid discounts for a product
    FacetValue:
      type: object
      properties:
        label:
          type: string
          nullable: true
        isApplied:
          type: boolean
          description:
            True if this FacetValue was supplied as a facet value filter in the
            current search
          nullable: true
        count:
          type: integer
          description: Number of occurrences of FacetValue in result set.
          format: int32
        value:
          type: string
          description: String representation of Facet Value
          nullable: true
        filterValue:
          type: string
          description: Submit this as a facet value filter
          nullable: true
        rangeQueryValueStart:
          type: string
          description: When range query Facet
          nullable: true
        rangeQueryValueEnd:
          type: string
          description: When range query Facet
          nullable: true
        parentFacetValue:
          type: string
          description: When hierarchical Facet
          nullable: true
        isDisplayed:
          type: boolean
          description: Indicates whether the FacetValue should be displayed
        childrenFacetValues:
          type: array
          items:
            $ref: "#/components/schemas/FacetValue"
          description: When hierarchical Facet
          nullable: true
      additionalProperties: false
      description: ""
    LocationInventoryQuery:
      type: object
      properties:
        locationCodes:
          type: array
          items:
            type: string
          nullable: true
        productCodes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      description: The inventory for a product at a specific Location
    PriceListNode:
      type: object
      properties:
        priceListCode:
          type: string
          nullable: true
        priceListId:
          type: integer
          format: int32
        parentPriceListId:
          type: integer
          format: int32
          nullable: true
        priceListLevel:
          type: integer
          format: int32
      additionalProperties: false
    ProductCollectionMember:
      type: object
      properties:
        memberKey:
          $ref: "#/components/schemas/StoreFrontProductProductCollectionMemberKey"
      additionalProperties: false
      description: List of products that belong to a product collection product.
    ProductContent:
      type: object
      properties:
        productName:
          type: string
          description: Name of the product.
          nullable: true
        productFullDescription:
          type: string
          description:
            Detailed description of the product typically used for a product
            details page.
          nullable: true
        productShortDescription:
          type: string
          description:
            Brief description of the product typically used when the product is
            displayed in a list or search results.
          nullable: true
        metaTagTitle:
          type: string
          description: Metadata title used to manage information internally.
          nullable: true
        metaTagDescription:
          type: string
          description: Metadata description used to manage information internally.
          nullable: true
        metaTagKeywords:
          type: string
          description: Metadata keywords used to manage information internally.
          nullable: true
        seoFriendlyUrl:
          type: string
          description:
            Human-readable identifier defined for the product to create
            friendly URLs.
          nullable: true
        productImages:
          type: array
          items:
            $ref: "#/components/schemas/ProductImage"
          description: Images associated with the product.
          nullable: true
      additionalProperties: false
      description: Name of the product and, if supplied, description, metatags,
        friendly URL, and associated images.
    ProductCostCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProductCost"
          nullable: true
      additionalProperties: false
    ProductCostQuery:
      type: object
      properties:
        productCodes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ProductForIndexing:
      type: object
      allOf:
        - $ref: "#/components/schemas/StoreFrontProductProduct"
      properties:
        slices:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProduct"
          nullable: true
      additionalProperties: false
    ProductImage:
      type: object
      properties:
        imageLabel:
          type: string
          description: Image title.  Unicode data with a maximum length of 50 characters.
          nullable: true
        altText:
          type: string
          description:
            Descriptive text associated with the image. Unicode data with a
            maximum length of 200 characters.
          nullable: true
        imageUrl:
          type: string
          description: Image URL. Unicode data with a maximum length of 4000 characters.
          nullable: true
        cmsId:
          type: string
          description: Id of the image in the CMS.
          nullable: true
        videoUrl:
          type: string
          description:
            URL of the video. Unicode data with a maximum length of 4000
            characters.
          nullable: true
        mediaType:
          type: string
          description:
            Type of media. Used by the client to determine how to render the
            image or video or what have you.
          nullable: true
        sequence:
          type: integer
          description:
            For products with multiple images, the sequence is the order in
            which this image appears. Whole number data. Required.
          format: int32
          nullable: true
        productImageGroupId:
          type: string
          nullable: true
      additionalProperties: false
      description: Image or video associated with a product.
    ProductOptionSelection:
      type: object
      properties:
        attributeFQN:
          type: string
          description: Fully Qualified Name of the selected option's attribute
          nullable: true
        value:
          description: Value of the selected option
          nullable: true
        attributeValueId:
          type: integer
          description:
            The unique ValueId of the Attribute (this can be sent as an
            alternative the to the AttributeFqn and Value)
          format: int32
          nullable: true
        shopperEnteredValue:
          description:
            Value that shopper entered if this is an Extra of VaolueType
            ShopperEntered.  This allows shopper data entry (such as the
            shopper's initials).
          nullable: true
      additionalProperties: false
      description: Name of the option that has been selected, and, if this is a
        stand-alone option, the value that the shopper entered.
    ProductOptionSelections:
      type: object
      properties:
        variationProductCode:
          type: string
          description:
            For a product with options, the code of the product variation that
            represents the current selection of product options.
          nullable: true
        options:
          type: array
          items:
            $ref: "#/components/schemas/ProductOptionSelection"
          description: List of the product options that the shopper has currently selected.
          nullable: true
      additionalProperties: false
      description:
        If the product has configurable options, the current state of the
        shopper's selections.
    ProductPriceRange:
      type: object
      properties:
        lower:
          $ref: "#/components/schemas/StoreFrontProductProductPrice"
        upper:
          $ref: "#/components/schemas/StoreFrontProductProductPrice"
      additionalProperties: false
      description:
        For products with options that vary the cost of the product, the
        range between lowest and highest possible price of the product based on
        the current selection of options.
    ProductPurchasableState:
      type: object
      properties:
        isPurchasable:
          type: boolean
          description:
            If true, this product is currently available for purchase. For
            products with options, this is false until the shopper selects all
            required options.
        messages:
          type: array
          items:
            $ref: "#/components/schemas/ValidationMessage"
          description:
            Message associated with this product if it is not ready to be
            purchased. For products with options, message contains which
            required options are missing.
          nullable: true
      additionalProperties: false
      description:
        Current state of the product purchase, that is, whether it is ready
        to be purchased. For products with configurable options,     /// the
        product is purchaseable if the shopper has selected all required
        options. If not, a message lists which required options are missing.
    ProductSearchRandomAccessCursor:
      type: object
      properties:
        cursorMarks:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      description:
        A calculated set of cursor marks for a given query that can be
        accessed in any order, providing the ability to page through all results
        in random/paralellized order
    ProductSearchResult:
      type: object
      properties:
        searchEngine:
          type: string
          nullable: true
        facets:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductFacet"
          nullable: true
        solrDebugInfo:
          $ref: "#/components/schemas/SolrDebugInfo"
        nextCursorMark:
          type: string
          nullable: true
        searchRedirect:
          type: string
          nullable: true
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProduct"
          nullable: true
      additionalProperties: false
      description:
        Products and facets returned from search criteria supplied in a
        ProductSearch query.
    ProductValidationSummary:
      type: object
      properties:
        productCode:
          type: string
          description:
            Merchant-created code associated with the product, for example, a
            SKU.
          nullable: true
        purchaseLocation:
          type: string
          description:
            "The location where the product is being purchased.. default is
            null. Products can have different prices\r

            by purchaseLocation via custom priceListResolution...."
          nullable: true
        productUsage:
          type: string
          description:
            The UsageType of this product (Standard, Configurable, Bundle,
            Component)
          nullable: true
        fulfillmentTypesSupported:
          type: array
          items:
            type: string
          description: Indicates the fulfillment types the product supports.
          nullable: true
        goodsType:
          type: string
          description: The GoodsType of the product (Physical, Digital, DigitalCredit....)
          nullable: true
        bundledProducts:
          type: array
          items:
            $ref: "#/components/schemas/BundledProductSummary"
          description:
            The list of Bundled products included in this product. This is only
            populated when ProductUsage=Bundle
          nullable: true
        upc:
          type: string
          description: UPC code of the product.
          nullable: true
        mfgPartNumber:
          type: string
          description: Manufacturer part number.
          nullable: true
        variationProductCode:
          type: string
          description:
            For a product with options, the code of the product variation that
            represents the current selection of product options.
          nullable: true
        purchasableState:
          $ref: "#/components/schemas/ProductPurchasableState"
        price:
          $ref: "#/components/schemas/StoreFrontProductProductPrice"
        measurements:
          $ref: "#/components/schemas/StoreFrontProductPackageMeasurements"
        isPackagedStandAlone:
          type: boolean
          description: Is this product shipped in its own package
          nullable: true
        image:
          $ref: "#/components/schemas/ProductImage"
        productShortDescription:
          type: string
          description:
            Brief description of the product typically used when the product is
            displayed in a list or search results.
          nullable: true
        productName:
          type: string
          description: Name of the product.
          nullable: true
        categories:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductCategory"
          description: Categories to which the product belongs.
          nullable: true
        properties:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProductProperty"
          description: List of product Properties.
          nullable: true
        pricingBehavior:
          $ref: "#/components/schemas/StoreFrontProductProductPricingBehaviorInfo"
        inventoryInfo:
          $ref: "#/components/schemas/StoreFrontProductProductInventoryInfo"
        isTaxable:
          type: boolean
          description: If true, the product listed on the live order is subject to tax.
        productType:
          type: string
          nullable: true
      additionalProperties: false
    ProductVolumePrice:
      type: object
      properties:
        isCurrent:
          type: boolean
        minQty:
          type: integer
          format: int32
        maxQty:
          type: integer
          format: int32
          nullable: true
        priceRange:
          $ref: "#/components/schemas/ProductPriceRange"
        price:
          $ref: "#/components/schemas/StoreFrontProductProductPrice"
      additionalProperties: false
    RequestFilter:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    ResolvedPriceList:
      type: object
      properties:
        priceListCode:
          type: string
          nullable: true
        priceListId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    SearchSuggestion:
      type: object
      properties:
        suggestionType:
          type: string
          description:
            "The type of Suggestion (e.g. Term, Product, Category). \r

            Will be one of the values of the SuggestionTypeConst
            type."
          nullable: true
        suggestion:
          description: "A suggested entity based on the search query. Use the
            SuggestionType to determine the type of entity.\r

            Could be a SearchTerm, Product, or Category"
          nullable: true
      additionalProperties: false
      description: A suggested result based on the search query
    SearchSuggestionGroup:
      type: object
      properties:
        name:
          type: string
          description: Group Name
          nullable: true
        suggestions:
          type: array
          items:
            $ref: "#/components/schemas/SearchSuggestion"
          description: List of related SearchSuggestions
          nullable: true
      additionalProperties: false
    SearchSuggestionResult:
      type: object
      properties:
        query:
          type: string
          description: Text that the shopper types in a search query.
          nullable: true
        suggestionGroups:
          type: array
          items:
            $ref: "#/components/schemas/SearchSuggestionGroup"
          description: List of SearchSuggestionGroups
          nullable: true
      additionalProperties: false
      description:
        List of items to suggest to the shopper who is entering a search
        query, for example, a search box on the storefront.
    SolrDebugInfo:
      type: object
      properties:
        searchTuningRuleCode:
          type: string
          nullable: true
        boostedProductCodes:
          type: array
          items:
            type: string
          nullable: true
        blockedProductCodes:
          type: array
          items:
            type: string
          nullable: true
        boostQueries:
          type: array
          items:
            type: string
          nullable: true
        boostFunctions:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ValidationMessage:
      type: object
      properties:
        severity:
          type: string
          description: "Severity level of the validation failure.\r

            \ Must be one of the values in SeverityConst."
          nullable: true
        source:
          type: string
          description:
            What invoked the validation.  Must be one of the values in
            SourceTypeConst.
          nullable: true
        message:
          type: string
          description: Message displayed to the user when this validation failure occurred.
          nullable: true
        validationType:
          type: string
          description:
            "Type of validation error that occurred. This can be checked
            programatically. \r

            \ Must be one of the values in ValidationTypeConst."
          nullable: true
        sourceId:
          type: string
          description: Unique identifier of the source that invoked the validation failure.
          nullable: true
      additionalProperties: false
    VariationOption:
      type: object
      properties:
        valueSequence:
          type: integer
          format: int32
        attributeFQN:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    VariationSummary:
      type: object
      properties:
        productCode:
          type: string
          description:
            Merchant-created code associated with the variation product, for
            example, a SKU.
          nullable: true
        options:
          type: array
          items:
            $ref: "#/components/schemas/VariationOption"
          description: The combination of options that resolve to this variation product
          nullable: true
        inventoryInfo:
          $ref: "#/components/schemas/StoreFrontProductProductInventoryInfo"
      additionalProperties: false
      description: Details of a product, including its product code, name,
        description, options (if any), and current state--whether the product
        can be purchased given the options selected currently.
    VisualSearchResult:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            additionalProperties: {}
          nullable: true
        trackingId:
          type: string
          nullable: true
        pageId:
          type: string
          nullable: true
      additionalProperties: false
    StoreFrontProductAppliedDiscount:
      type: object
      properties:
        couponCode:
          type: string
          description: If the discount is a coupon, code associated with the coupon.
          nullable: true
        discount:
          $ref: "#/components/schemas/StoreFrontProductDiscount"
        discounts:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductDiscount"
          description: Discount name and expiration date.
          nullable: true
        impact:
          type: number
          description:
            The new calculated price of the product. That is, the product price
            minus the discount amount.
          format: double
      additionalProperties: false
      description: Discount applied to the product.
    StoreFrontProductBundledProduct:
      type: object
      allOf:
        - $ref: "#/components/schemas/BundledProductBase"
      properties:
        content:
          $ref: "#/components/schemas/ProductContent"
      additionalProperties: false
    StoreFrontProductCategory:
      type: object
      properties:
        categoryId:
          type: integer
          description:
            Internal unique identifier of the category. System-supplied and
            read-only.
          format: int32
        parentCategory:
          $ref: "#/components/schemas/StoreFrontProductCategory"
        content:
          $ref: "#/components/schemas/CategoryContent"
        childrenCategories:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductCategory"
          description: List of subcategories that belong to this category.
          nullable: true
        sequence:
          type: integer
          description:
            Order in which categories appear when they are at the same level
            (siblings). For example, categories can be sequenced so that a
            specific category always appears first (or last).
          format: int32
          nullable: true
        isDisplayed:
          type: boolean
          description: Indicates whether the category should be displayed.
        categoryCode:
          type: string
          description: External unique identifier of the category.
          nullable: true
        count:
          type: integer
          description: Indicates whether the category should be displayed.
          format: int32
          nullable: true
        updateDate:
          type: string
          description: Last Modified Date Time
          format: date-time
        shouldSlice:
          type: boolean
          description: Indicates whether the category should be sliced
      additionalProperties: false
      description: The category hierarchy of your store as it appears on the
        storefront. This is the category heirarchy defined with the
        admin/category resource except for any categories with an IsDisplayed
        value set to false.
    StoreFrontProductDiscount:
      type: object
      properties:
        discountId:
          type: integer
          description: Unique identifier of the discount.
          format: int32
        expirationDate:
          type: string
          description: Date when the discount expires.
          format: date-time
          nullable: true
        name:
          type: string
          description: Name of the discount.
          nullable: true
        friendlyDescription:
          type: string
          description: Description of the discount.
          nullable: true
        impact:
          type: number
          description: The Impact of the individual Discount
          format: double
      additionalProperties: false
      description: Discount name and expiration date.
    StoreFrontProductPackageMeasurements:
      type: object
      properties:
        packageHeight:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        packageWidth:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        packageLength:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        packageWeight:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
      additionalProperties: false
      description:
        Physical dimensions of the package required to ship the product and
        its weight.
    StoreFrontProductProduct:
      type: object
      properties:
        productCode:
          type: string
          description:
            Merchant-created code associated with the product, for example, a
            SKU.
          nullable: true
        purchaseLocation:
          type: string
          description:
            "The location where the product is being purchased.. default is
            null. Products can have different prices\r

            by purchaseLocation via custom priceListResolution...."
          nullable: true
        productSequence:
          type: integer
          description: System generated monotonically increasing sequence
          format: int32
          nullable: true
        productUsage:
          type: string
          description:
            The UsageType of this product (Standard, Configurable, Bundle,
            Component, Collection)
          nullable: true
        fulfillmentTypesSupported:
          type: array
          items:
            type: string
          description: Indicates the fulfillment types the product supports.
          nullable: true
        goodsType:
          type: string
          description: The GoodsType of the product (Physical, Digital, DigitalCredit....)
          nullable: true
        bundledProducts:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductBundledProduct"
          description:
            The list of Bundled products included in this product. This is only
            populated when ProductUsage=Bundle
          nullable: true
        content:
          $ref: "#/components/schemas/ProductContent"
        purchasableState:
          $ref: "#/components/schemas/ProductPurchasableState"
        isActive:
          type: boolean
          description:
            If true, the product exists. If not, the product should not appear
            in search results.
          nullable: true
        publishState:
          type: string
          description:
            Represents the published state of the product returned. Valid
            values for ValueType are defined in PublishStateConst.
          nullable: true
        price:
          $ref: "#/components/schemas/StoreFrontProductProductPrice"
        priceRange:
          $ref: "#/components/schemas/ProductPriceRange"
        volumePriceBands:
          type: array
          items:
            $ref: "#/components/schemas/ProductVolumePrice"
          description:
            For products with bulk pricing... this will be populated with
            pricebands, depending on what options have been selected...
          nullable: true
        volumePriceRange:
          $ref: "#/components/schemas/ProductPriceRange"
        availableShippingDiscounts:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductDiscount"
          description: List of potential shipping discounts available for this product.
          nullable: true
        productType:
          type: string
          nullable: true
        productTypeId:
          type: integer
          format: int32
          nullable: true
        isTaxable:
          type: boolean
          description: If true, the product is subject to tax.
        isRecurring:
          type: boolean
          description:
            If true, the product can be purchased or fulfilled at regular
            intervals, for example, monthly billing or a subscription.
        pricingBehavior:
          $ref: "#/components/schemas/StoreFrontProductProductPricingBehaviorInfo"
        inventoryInfo:
          $ref: "#/components/schemas/StoreFrontProductProductInventoryInfo"
        createDate:
          type: string
          description: When the product was created with the product admin resource.
          format: date-time
        updateDate:
          type: string
          description: When the product was last modified with the product admin resource.
          format: date-time
        dateFirstAvailableInCatalog:
          type: string
          format: date-time
          nullable: true
        catalogStartDate:
          type: string
          format: date-time
          nullable: true
        catalogEndDate:
          type: string
          format: date-time
          nullable: true
        daysAvailableInCatalog:
          type: integer
          format: int32
          nullable: true
        upc:
          type: string
          description: UPC code of the product.
          nullable: true
        upCs:
          type: array
          items:
            type: string
          description: UPC code of the products (populated for configurable products).
          nullable: true
        mfgPartNumber:
          type: string
          description: Manufacturer part number.
          nullable: true
        mfgPartNumbers:
          type: array
          items:
            type: string
          description: Manufacturer part numbers (populated for configurable products).
          nullable: true
        variationProductCode:
          type: string
          description:
            When a configurable product has IsPurchasable=true on a GetProduct,
            this property will be populated for submission to cart.
          nullable: true
        categories:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductCategory"
          description: List of categories to which this product belongs.
          nullable: true
        measurements:
          $ref: "#/components/schemas/StoreFrontProductPackageMeasurements"
        isPackagedStandAlone:
          type: boolean
          description: Is this product shipped in its own package
          nullable: true
        properties:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProductProperty"
          description:
            List of product properties. These are attributes that might apply
            to multiple products, for example, price, size, manufacturer. These
            attributes cannot be configured by the shopper.
          nullable: true
        options:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProductOption"
          description:
            "List of the product's configurable options and extras. \r

            Includes whether an option is configurable (for example,
            a T-shirt) or an Extra (for example, monogram or gift-wrapping)."
          nullable: true
        variations:
          type: array
          items:
            $ref: "#/components/schemas/VariationSummary"
          nullable: true
        validPriceLists:
          type: array
          items:
            type: string
          nullable: true
        locationsInStock:
          type: array
          items:
            type: string
          nullable: true
        slicingAttributeFQN:
          type: string
          nullable: true
        productImageGroups:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProductImageGroup"
          description: "List of the image groups this product uses.\r

            Image groups are used to map different images to
            different product options.\r

            If the product doesn't have options then all images will
            be in the default\r

            image group."
          nullable: true
        sliceValue:
          type: string
          description:
            Readonly value of the selected value of the option corresponding to
            the Mozu.ProductRuntime.Contracts.Product.SlicingAttributeFQN
          nullable: true
        productCollections:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProductCollectionInfo"
          description:
            List of product codes of product collections that this product is a
            member of.
          nullable: true
        productCollectionMembers:
          type: array
          items:
            $ref: "#/components/schemas/ProductCollectionMember"
          description:
            "list of member products that are part of the collection\r

            This requires that the ProductUsage be set to
            Collection"
          nullable: true
        collectionMembersProductContent:
          type: array
          items:
            $ref: "#/components/schemas/ProductContent"
          description: Only used for indexing
          nullable: true
      additionalProperties: false
      description: Details of a product, including its product code, name,
        description, options (if any), and current state--whether the product
        can be purchased given the options selected currently.
    StoreFrontProductProductOption:
      type: object
      properties:
        attributeFQN:
          type: string
          description: Attribute fully qualified name
          nullable: true
        isRequired:
          type: boolean
          description:
            If true, the shopper must provide a value for the option before it
            can be purchased.
          nullable: true
        isMultiValue:
          type: boolean
          description:
            If true, more than one value can be assigned to an option. Only
            possible with stand-alone options.
          nullable: true
        values:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProductOptionValue"
          description:
            Possible choices for an option, for example, values of the option
            "Color" can be "red," "white," and "blue."
          nullable: true
        attributeDetail:
          $ref: "#/components/schemas/AttributeDetail"
        isProductImageGroupSelector:
          type: boolean
      additionalProperties: false
      description: An option for a product and its list of values, if any. Also
        includes whether the option is configurable or stand-alone, whether it
        is required, whether it can have mulitple values and whether the shopper
        can supply its value (for example, engraved initials).
    StoreFrontProductProductPrice:
      type: object
      properties:
        msrp:
          type: number
          description:
            Manufacturer suggested Retail price, this may be null if one is not
            set in the catalog.
          format: double
          nullable: true
        price:
          type: number
          description:
            Listed Price of the product. This is the price that the merchant
            intends to sell the product for if no sale is active.
          format: double
          nullable: true
        priceType:
          type: string
          description:
            Futher clarification of what value is being returned in the Price
            field
          nullable: true
        salePrice:
          type: number
          description:
            Current sale price of the product. This can be either a specific
            numerical amount or it can be calculated based on an active
            discount. Optional.
          format: double
          nullable: true
        salePriceType:
          type: string
          nullable: true
        catalogSalePrice:
          type: number
          description:
            Current sale price of the product listed in the catalog. This is
            not typically dispalyed directly to the user as it will be listed in
            SalePrice if applicable.
          format: double
          nullable: true
        catalogListPrice:
          type: number
          description: Current Price Listed in the catalog.
          format: double
          nullable: true
        discount:
          $ref: "#/components/schemas/StoreFrontProductAppliedDiscount"
        creditValue:
          type: number
          description:
            Credit Value applicable to this product. Should only be present on
            DigitalCredit goodsType....
          format: double
          nullable: true
        effectivePricelistCode:
          type: string
          description: The priceList that was applied to this product
          nullable: true
        priceListEntryCode:
          type: string
          description: The specific PriceListCode that was applied (includes inheritence
          nullable: true
        priceListEntryMode:
          type: string
          description:
            IF a PriceList Entry was applied to this price it will be (simple,
            bulk...)
          nullable: true
      additionalProperties: false
      description: Price of the product with any sale and discounts applied.
    StoreFrontProductProductProperty:
      type: object
      properties:
        attributeFQN:
          type: string
          description: Attribute fully qualified name
          nullable: true
        isHidden:
          type: boolean
          description:
            Indicates whether the product property should be hidden from the
            customer
          nullable: true
        isMultiValue:
          type: boolean
          description:
            Indicates whether it's possible for there to be more than one value
            in the Values field
          nullable: true
        attributeDetail:
          $ref: "#/components/schemas/AttributeDetail"
        values:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProductPropertyValue"
          description: Value(s) of the product property
          nullable: true
        propertyType:
          type: string
          description: Property Type of the Property
          nullable: true
      additionalProperties: false
      description: An attribute used as a property of a product
    StoreFrontProductProductPropertyValue:
      type: object
      properties:
        value:
          nullable: true
        stringValue:
          type: string
          description: Localized Value in the language of the locale code
          nullable: true
        displayInfo:
          $ref:
            "#/components/schemas/StoreFrontProductAttributeVocabularyValueDisplayInf\
            o"
      additionalProperties: false
      description: Value of product property
    StoreFrontProductFacet:
      type: object
      properties:
        label:
          type: string
          nullable: true
        facetType:
          type: string
          description: Value, RangeQuery, Hierarchy
          nullable: true
        field:
          type: string
          nullable: true
        values:
          type: array
          items:
            $ref: "#/components/schemas/FacetValue"
          nullable: true
      additionalProperties: false
      description:
        For faceted searches, name of the facet and list of facet values.
        For example, a facet called "Brands" may have the facet values "Apple,"
        "Motorola," and "Samsung."
    StoreFrontProductAttributeVocabularyValueDisplayInfo:
      type: object
      properties:
        cmsId:
          type: string
          description: Id of the image in the CMS.
          nullable: true
        imageUrl:
          type: string
          description: URL of the image.
          nullable: true
        colorValue:
          type: string
          description: Hex Color value to display in a color picker
          nullable: true
      additionalProperties: false
      description:
        Product Attribute properties common between a Product Propery,
        Option, and Extra
    StoreFrontProductCurrencyExchangeRate:
      type: object
      properties:
        fromCurrencyCode:
          type: string
          description: The source currency code
          nullable: true
        toCurrencyCode:
          type: string
          description: The target currency code
          nullable: true
        rate:
          type: number
          description: The exchange rate
          format: double
          nullable: true
        multiplier:
          type: number
          description: An additional multiplier to use in calculations
          format: double
          nullable: true
        decimalPlaces:
          type: integer
          description: Number of decimal places
          format: int32
          nullable: true
        roundingStrategy:
          type: integer
          description: Rounding strategy
          format: int32
          nullable: true
        referenceData:
          type: string
          description: Reference data for miscellaneous metadata from updates
          nullable: true
      additionalProperties: false
      description: The currency exchange rates from one currency to another.
    StoreFrontProductLocationInventory:
      type: object
      properties:
        productCode:
          type: string
          nullable: true
        locationCode:
          type: string
          nullable: true
        stockAvailable:
          type: integer
          format: int32
          nullable: true
        softStockAvailable:
          type: integer
          format: int32
          nullable: true
        sku:
          type: string
          nullable: true
        mfgPartNumber:
          type: string
          nullable: true
      additionalProperties: false
      description: The inventory for a product at a specific Location
    StoreFrontProductLocationInventoryCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductLocationInventory"
          nullable: true
      additionalProperties: false
    StoreFrontProductPriceList:
      type: object
      properties:
        priceListCode:
          type: string
          nullable: true
        priceListId:
          type: integer
          format: int32
        enabled:
          type: boolean
        name:
          type: string
          nullable: true
        resolvable:
          type: boolean
        isIndexed:
          type: boolean
          nullable: true
        filteredInStoreFront:
          type: boolean
        isSiteDefault:
          type: boolean
        description:
          type: string
          nullable: true
        ancestors:
          type: array
          items:
            $ref: "#/components/schemas/PriceListNode"
          nullable: true
        descendants:
          type: array
          items:
            $ref: "#/components/schemas/PriceListNode"
          nullable: true
        validSites:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    StoreFrontProductProductCollection:
      type: object
      properties:
        nextCursorMark:
          type: string
          description: "If a cursorMark is provided on the request, then the
            nextCursorMark will be populated on the response.\r

            Provide this value as the cursorMark argument on the
            next request. If a cursorMark is provided on the request and the
            nextCursorMark value is null, then the end of the resultset was
            reached"
          nullable: true
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProduct"
          nullable: true
      additionalProperties: false
    StoreFrontProductProductCollectionInfo:
      type: object
      properties:
        productCode:
          type: string
          description: Product Code of the collection
          nullable: true
        isPrimary:
          type: boolean
          description:
            True if the collection is the primary collection for the containing
            product.
      additionalProperties: false
    StoreFrontProductProductCollectionMemberKey:
      type: object
      properties:
        value:
          type: string
          nullable: true
      additionalProperties: false
      description:
        This is the key of the product collection member.  For now, it's
        just product code, but may expand in future
    StoreFrontProductProductCost:
      type: object
      properties:
        productCode:
          type: string
          nullable: true
        cost:
          type: number
          format: double
      additionalProperties: false
      description: The inventory for a product at a specific Location
    StoreFrontProductProductImageGroupTag:
      type: object
      properties:
        attributeFqn:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    StoreFrontProductProductInventoryInfo:
      type: object
      properties:
        manageStock:
          type: boolean
          description: If true, the Products service manages inventory for this product.
          nullable: true
        outOfStockBehavior:
          type: string
          description:
            The behvior when the ManageStock is true and the product is not in
            stock.
          nullable: true
        onlineStockAvailable:
          type: integer
          description: Number of product items currently available for purchase.
          format: int32
          nullable: true
        onlineSoftStockAvailable:
          type: integer
          description: Number of product items currently available for purchase.
          format: int32
          nullable: true
        onlineLocationCode:
          type: string
          description: Directship location code for OnlineStockAvailable
          nullable: true
        availableDate:
          type: string
          description: Date the item will become available for back order if out of stock
          format: date-time
          nullable: true
      additionalProperties: false
      description:
        Use the Products resource to create and manage products for your
        store. You can create products with options that a shopper configures
        (such as a T-shirt color and size). The system can manage inventory for
        all combinations of your product options, and can calculate tax and
        shipping costs.
    StoreFrontProductProductOptionValue:
      type: object
      properties:
        value:
          nullable: true
        attributeValueId:
          type: integer
          description: Unique Id for the Value
          format: int32
        stringValue:
          type: string
          description:
            Localized Value in the language of the locale code only available
            for dataType string
          nullable: true
        isEnabled:
          type: boolean
          description:
            If true, this option is enabled and can be selected. During
            configuration, this returns false of this option value is invalid
            with other current selected options.
          nullable: true
        isSelected:
          type: boolean
          description:
            If true, this is the option that is currently selected. It can be
            either the default value or one that the shopper has selected.
          nullable: true
        isDefault:
          type: boolean
          description: If true, this is the default value that the merchant supplied.
          nullable: true
        deltaWeight:
          type: number
          description: How much this option weighs above the weight of the product.
          format: double
          nullable: true
        deltaPrice:
          type: number
          description: How much this option costs above the cost of the product.
          format: double
          nullable: true
        shopperEnteredValue:
          description: How much this option costs above the cost of the product.
          nullable: true
        bundledProduct:
          $ref: "#/components/schemas/StoreFrontProductBundledProduct"
        displayInfo:
          $ref:
            "#/components/schemas/StoreFrontProductAttributeVocabularyValueDisplayInf\
            o"
      additionalProperties: false
      description: Value of product option..."red," "white," "blue."
    StoreFrontProductProductPricingBehaviorInfo:
      type: object
      properties:
        discountsRestricted:
          type: boolean
          nullable: true
        discountsRestrictedStartDate:
          type: string
          format: date-time
          nullable: true
        discountsRestrictedEndDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    StoreFrontProductCategoryCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductCategory"
          nullable: true
      additionalProperties: false
      description: Collection of categories returned as a whole. A collection is not paged.
    StoreFrontProductCategoryPagedCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductCategory"
          nullable: true
      additionalProperties: false
      description:
        Collection of categories where categories are returned in a series
        of pages.
    StoreFrontProductProductImageGroup:
      required:
        - productImageGroupId
      type: object
      properties:
        productImageGroupId:
          type: string
        productImageGroupTags:
          type: array
          items:
            $ref: "#/components/schemas/StoreFrontProductProductImageGroupTag"
          nullable: true
      additionalProperties: false
    AddressSchema:
      type: object
      properties:
        countryCode:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        countryLabel:
          type: string
          nullable: true
        fields:
          type: array
          items:
            $ref: "#/components/schemas/Field"
          nullable: true
      additionalProperties: false
    AddressSchemaCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/AddressSchema"
          nullable: true
      additionalProperties: false
    BehaviorCategory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    BehaviorCategoryCollection:
      type: object
      allOf:
        - $ref: "#/components/schemas/BehaviorCategoryCollectionBase"
      additionalProperties: false
    BehaviorCategoryCollectionBase:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/BehaviorCategory"
          nullable: true
      additionalProperties: false
    BehaviorCollection:
      type: object
      allOf:
        - $ref: "#/components/schemas/BehaviorCollectionBase"
      additionalProperties: false
    BehaviorCollectionBase:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Behavior"
          nullable: true
      additionalProperties: false
    ContentLocale:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    ContentLocaleCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ContentLocale"
          nullable: true
      additionalProperties: false
    Country:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    CountryCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Country"
          nullable: true
      additionalProperties: false
    CountryWithStates:
      type: object
      properties:
        code:
          type: string
          nullable: true
        states:
          type: array
          items:
            $ref: "#/components/schemas/ReferenceState"
          nullable: true
      additionalProperties: false
    CountryWithStatesCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CountryWithStates"
          nullable: true
      additionalProperties: false
    Currency:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    CurrencyCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/Currency"
          nullable: true
      additionalProperties: false
    Field:
      type: object
      properties:
        type:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        data:
          type: array
          items:
            $ref: "#/components/schemas/FieldData"
          nullable: true
        id:
          type: integer
          format: int32
        order:
          type: integer
          format: int32
      additionalProperties: false
    FieldData:
      type: object
      properties:
        value:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    TimeZone:
      type: object
      properties:
        id:
          type: string
          description:
            'The Id of the TimeZone (examples include: "Central Standard Time",
            ...)'
          nullable: true
        offset:
          type: number
          description: The current offset for this TimeZone in hours
          format: double
        isDaylightSavingsTime:
          type: boolean
      additionalProperties: false
    TimeZoneCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/TimeZone"
          nullable: true
      additionalProperties: false
    TopLevelDomainCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UnitOfMeasure:
      type: object
      properties:
        symbol:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        pluralName:
          type: string
          nullable: true
        unitOfMeasureType:
          type: string
          description: This value can be "Length", "Weight", or "Volume"
          nullable: true
      additionalProperties: false
    UnitOfMeasureCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/UnitOfMeasure"
          nullable: true
      additionalProperties: false
    ReferenceState:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
      additionalProperties: false
    CarrierConfiguration:
      type: object
      properties:
        id:
          type: string
          nullable: true
        enabled:
          type: boolean
        enabledForReturns:
          type: boolean
        settings:
          type: array
          items:
            $ref: "#/components/schemas/Setting"
          nullable: true
        customTableRates:
          type: array
          items:
            $ref: "#/components/schemas/CustomTableRate"
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        areCredentialsSet:
          type: boolean
      additionalProperties: false
    CarrierConfigurationCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CarrierConfiguration"
          nullable: true
      additionalProperties: false
    CarrierCredential:
      type: object
      properties:
        carrierId:
          type: string
          nullable: true
        siteId:
          type: integer
          format: int32
          nullable: true
        locationGroupCode:
          type: string
          nullable: true
        locationCode:
          type: string
          nullable: true
        credentialSet:
          $ref: "#/components/schemas/CarrierCredentialSet"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    CarrierCredentialCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CarrierCredential"
          nullable: true
      additionalProperties: false
    CarrierCredentialSet:
      type: object
      properties:
        carrierId:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        values:
          type: array
          items:
            $ref: "#/components/schemas/CarrierCredentialSetValue"
          nullable: true
        integrationId:
          type: string
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    CarrierCredentialSetCollection:
      type: object
      properties:
        startIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/CarrierCredentialSet"
          nullable: true
      additionalProperties: false
    CarrierCredentialSetValue:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    CustomTableRate:
      type: object
      properties:
        id:
          type: string
          nullable: true
        content:
          $ref: "#/components/schemas/CustomTableRateContent"
        rateType:
          type: string
          nullable: true
        value:
          type: number
          format: double
        deliveryDuration:
          type: string
          nullable: true
      additionalProperties: false
    CustomTableRateContent:
      type: object
      properties:
        localeCode:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    HandlingFeeRule:
      type: object
      properties:
        id:
          type: string
          nullable: true
        sequence:
          type: integer
          format: int32
        shippingTargetRuleCodes:
          type: array
          items:
            type: string
          nullable: true
        productTargetRuleCodes:
          type: array
          items:
            type: string
          nullable: true
        serviceTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceType"
          nullable: true
        valueType:
          type: string
          nullable: true
        appliesTo:
          type: string
          nullable: true
        value:
          type: number
          format: double
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    HandlingFeeRuleCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/HandlingFeeRule"
          nullable: true
      additionalProperties: false
    ServiceType:
      type: object
      properties:
        code:
          type: string
          nullable: true
        deliveryDuration:
          type: string
          nullable: true
        content:
          $ref: "#/components/schemas/ServiceTypeLocalizedContent"
      additionalProperties: false
    ServiceTypeLocalizedContent:
      type: object
      properties:
        localeCode:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    Setting:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    ShippingInclusionRule:
      type: object
      properties:
        id:
          type: string
          nullable: true
        sequence:
          type: integer
          format: int32
        shippingTargetRuleCodes:
          type: array
          items:
            type: string
          nullable: true
        productTargetRuleCodes:
          type: array
          items:
            type: string
          nullable: true
        serviceTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceType"
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    ShippingInclusionRuleCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ShippingInclusionRule"
          nullable: true
      additionalProperties: false
    ShippingProfile:
      type: object
      properties:
        code:
          type: string
          nullable: true
        targetedSiteIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        shippingInclusionRules:
          type: array
          items:
            $ref: "#/components/schemas/ShippingInclusionRule"
          nullable: true
        productHandlingFeeRules:
          type: array
          items:
            $ref: "#/components/schemas/HandlingFeeRule"
          nullable: true
        orderHandlingFeeRules:
          type: array
          items:
            $ref: "#/components/schemas/HandlingFeeRule"
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    ShippingProfileCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/ShippingProfile"
          nullable: true
      additionalProperties: false
    ShippingStates:
      type: object
      properties:
        countryCode:
          type: string
          nullable: true
        states:
          uniqueItems: true
          type: array
          items:
            $ref: "#/components/schemas/ShippingAdminState"
          nullable: true
      additionalProperties: false
    TargetRule:
      type: object
      properties:
        code:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        domain:
          type: string
          nullable: true
        expression:
          type: string
          nullable: true
      additionalProperties: false
    TargetRuleCollection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int32
        items:
          type: array
          items:
            $ref: "#/components/schemas/TargetRule"
          nullable: true
      additionalProperties: false
    ShippingAdminHttpResponseMessage:
      type: object
      properties:
        version:
          type: string
          nullable: true
        content:
          $ref: "#/components/schemas/MZDBHttpContent"
        statusCode:
          $ref: "#/components/schemas/HttpStatusCode"
        reasonPhrase:
          type: string
          nullable: true
        headers:
          type: array
          items:
            $ref: "#/components/schemas/StringStringIEnumerableKeyValuePair"
          nullable: true
          readOnly: true
        trailingHeaders:
          type: array
          items:
            $ref: "#/components/schemas/StringStringIEnumerableKeyValuePair"
          nullable: true
          readOnly: true
        requestMessage:
          $ref: "#/components/schemas/MZDBHttpRequestMessage"
        isSuccessStatusCode:
          type: boolean
          readOnly: true
      additionalProperties: false
    ShippingAdminState:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    ShippingAdminCurlResponseMessage:
      type: object
      allOf:
        - $ref: "#/components/schemas/ShippingAdminHttpResponseMessage"
      additionalProperties: false
    CarrierMethods:
      type: object
      properties:
        carrierId:
          type: string
          nullable: true
        shippingMethods:
          type: array
          items:
            type: string
          description: Selected Shipping Service Type.
          nullable: true
      additionalProperties: false
    CarrierRatesResponse:
      type: object
      properties:
        carrierId:
          type: string
          nullable: true
        shippingRates:
          type: array
          items:
            $ref: "#/components/schemas/ShippingRuntimeShippingRate"
          nullable: true
        customAttributes:
          type: array
          items:
            $ref: "#/components/schemas/CustomAttribute"
          nullable: true
          deprecated: true
      additionalProperties: false
    CustomAttribute:
      type: object
      properties:
        childAttributes:
          type: array
          items:
            $ref: "#/components/schemas/CustomAttribute"
          nullable: true
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    ExternalRateRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/RateRequest"
      properties:
        carrierRates:
          type: array
          items:
            $ref: "#/components/schemas/CarrierMethods"
          description:
            The list of carriers and their respected rates for which this
            request needs calculated
          nullable: true
      additionalProperties: false
    ItemMeasurements:
      type: object
      properties:
        height:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        width:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        length:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        weight:
          $ref: "#/components/schemas/CommerceRuntimeMeasurement"
        girth:
          type: number
          description: Not exposed publicly
          format: double
          nullable: true
      additionalProperties: false
    ProductSummary:
      type: object
      properties:
        productCode:
          type: string
          description: Merchant-created code that uniquely identifies the product.
          nullable: true
        productType:
          type: string
          nullable: true
        categories:
          type: array
          items:
            $ref: "#/components/schemas/ShippingRuntimeCategory"
          nullable: true
        unitMeasurements:
          $ref: "#/components/schemas/ItemMeasurements"
        properties:
          type: array
          items:
            $ref: "#/components/schemas/ShippingRuntimeProductProperty"
          nullable: true
        options:
          type: array
          items:
            $ref: "#/components/schemas/ShippingRuntimeProductOption"
          nullable: true
        productDescription:
          type: string
          description: Product name/description
          nullable: true
        quantity:
          type: integer
          description: Product quantity
          format: int32
        price:
          type: number
          description: Price (unit price * quantity)
          format: double
      additionalProperties: false
    RateRequest:
      type: object
      properties:
        id:
          type: string
          nullable: true
        isoCurrencyCode:
          type: string
          nullable: true
        originAddress:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
        destinationAddress:
          $ref: "#/components/schemas/CommerceRuntimeAddress"
        carrierIds:
          type: array
          items:
            type: string
          description:
            Optional.  If one or more Carrier Ids are specified then only the
            rates for the specified carrier('s/s') configured service types or
            shipping methods will be calculated resulting in better performance.
          nullable: true
        shippingServiceTypes:
          type: array
          items:
            type: string
          description:
            Optional.  If one or more Shipping Service Type Codes are specified
            then only the specified rates for the specified carrier('s/s')
            configured service types or shipping methods will be calculated
            resulting in better performance.
          nullable: true
        orderTotal:
          type: number
          description: The OrderTotal to be used in rate calculation
          format: double
          nullable: true
        orderDiscountedSubTotal:
          type: number
          description: The Order SubTotal After Discounts to be used in rate calculation
          format: double
          nullable: true
        handlingTotal:
          type: number
          description:
            The order Handling total after discounts to be used in rate
            calculation
          format: double
          nullable: true
        relatedOrderId:
          type: string
          description: "The Order ID to be used in rate calculation\r

            Informational only"
          nullable: true
        relatedOrderNumber:
          type: integer
          description: "The Order Number to be used in rate calculation\r

            Informational only"
          format: int32
          nullable: true
        isDestinationAddressCommercial:
          type: boolean
          description: Is the destination address a commercial address?
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/RateRequestItem"
          nullable: true
        estimatedShipmentDate:
          type: string
          description: Estimate Date/Time when the shipment for this will be
            sent.  Primarily utilize to estimate delivery date.
          format: date-time
          nullable: true
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/RateRequestAttribute"
          description: Order Attributes. Made available for Arc.js to use
          nullable: true
        customAttributes:
          type: array
          items:
            $ref: "#/components/schemas/CustomAttribute"
          nullable: true
          deprecated: true
        data:
          type: object
          nullable: true
      additionalProperties: false
    RateRequestAttribute:
      type: object
      properties:
        fullyQualifiedName:
          type: string
          nullable: true
        attributeDefinitionId:
          type: integer
          format: int32
          nullable: true
        values:
          type: array
          items: {}
          nullable: true
      additionalProperties: false
    RateRequestGroup:
      type: object
      properties:
        rateRequests:
          type: array
          items:
            $ref: "#/components/schemas/RateRequest"
          nullable: true
        id:
          type: string
          nullable: true
      additionalProperties: false
    RateRequestItem:
      type: object
      properties:
        itemId:
          type: string
          nullable: true
        shipsByItself:
          type: boolean
          nullable: true
        productSummaries:
          type: array
          items:
            $ref: "#/components/schemas/ProductSummary"
          description:
            If Product Summaries are populated, this information will be
            utilized in Product Rules (e.g. ProductCode eq "ABC" or (Weight.Unit
            eq "lbs" and Weight.Value ge 50)
          nullable: true
        unitMeasurements:
          $ref: "#/components/schemas/ItemMeasurements"
        quantity:
          type: integer
          format: int32
          nullable: true
        data:
          type: object
          nullable: true
      additionalProperties: false
    RatesResponse:
      type: object
      properties:
        id:
          type: string
          description:
            "Resolved Shipping Zone Code.  This value can be null if the
            tenant/site does not have shipping zones defined or there are no
            matching \r

            shipping zones for the request (e.g. the only zone
            defined is \"UNITED-STATES\" and the destination address of the rate
            request is in Canada)"
          nullable: true
        resolvedShippingZoneCode:
          type: string
          nullable: true
        shippingZoneCodes:
          type: array
          items:
            type: string
          nullable: true
        rates:
          type: array
          items:
            $ref: "#/components/schemas/CarrierRatesResponse"
          nullable: true
      additionalProperties: false
    RatesResponseGroup:
      type: object
      properties:
        id:
          type: string
          nullable: true
        ratesResponse:
          $ref: "#/components/schemas/RatesResponse"
        componentRates:
          type: array
          items:
            $ref: "#/components/schemas/RatesResponse"
          nullable: true
      additionalProperties: false
    ShippingItemRate:
      type: object
      properties:
        itemId:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
          nullable: true
        amount:
          type: number
          format: double
          nullable: true
      additionalProperties: false
      description: The shipping rate for a particular line item
    ShippingRateLocalizedContent:
      type: object
      properties:
        localeCode:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    ShippingRateValidationMessage:
      type: object
      properties:
        severity:
          type: string
          description: Severity
          nullable: true
        message:
          type: string
          description: Message
          nullable: true
        helpLink:
          type: string
          description: Help Link
          nullable: true
      additionalProperties: false
      description: Shipping Rate Validation Message
    ShippingRuntimeCategory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        parent:
          $ref: "#/components/schemas/ShippingRuntimeCategory"
      additionalProperties: false
      description: Categories to which the product belongs.
    ShippingRuntimeProductOption:
      type: object
      properties:
        attributeFQN:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    ShippingRuntimeProductProperty:
      type: object
      properties:
        attributeFQN:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
        values:
          type: array
          items: {}
          nullable: true
      additionalProperties: false
    ShippingRuntimeShippingRate:
      type: object
      properties:
        code:
          type: string
          nullable: true
        content:
          $ref: "#/components/schemas/ShippingRateLocalizedContent"
        amount:
          type: number
          format: double
          nullable: true
        daysInTransit:
          type: integer
          format: int32
          nullable: true
        shippingItemRates:
          type: array
          items:
            $ref: "#/components/schemas/ShippingItemRate"
          nullable: true
        customAttributes:
          type: array
          items:
            $ref: "#/components/schemas/CustomAttribute"
          nullable: true
        messages:
          type: array
          items:
            $ref: "#/components/schemas/ShippingRateValidationMessage"
          nullable: true
        data:
          type: object
          nullable: true
      additionalProperties: false
    AutoCaptureJob:
      type: object
      allOf:
        - $ref: "#/components/schemas/OrderJob"
      properties:
        flexibleCapture:
          $ref: "#/components/schemas/FlexibleCapture"
      additionalProperties: false
    BPMConfiguration:
      type: object
      properties:
        containerId:
          type: string
          nullable: true
        processId:
          type: string
          nullable: true
      additionalProperties: false
    CacheSettings:
      type: object
      properties:
        cdnCacheBustKey:
          type: string
          nullable: true
      additionalProperties: false
    Cancellation:
      type: object
      properties:
        onParentShipment:
          type: boolean
        restrictedSteps:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    CartSettings:
      type: object
      properties:
        enableHandlingFee:
          type: boolean
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description: Cart settings defined for this site.
    CheckoutSettings:
      type: object
      properties:
        paymentSettings:
          $ref: "#/components/schemas/PaymentSettings"
        customerCheckoutSettings:
          $ref: "#/components/schemas/CustomerCheckoutSettings"
        orderProcessingSettings:
          $ref: "#/components/schemas/OrderProcessingSettings"
      additionalProperties: false
      description:
        "Checkout and payment settings defined for this site. Can set which
        payment gateway to use, whether a shopper is required to login to place
        an order,\r

        when credit cards are authorized and charged (when the order is
        placed or shipped), and, in the future, \r

        whether the checkout page displays an option for shoppers to
        receive your email marketing campaigns."
    CustomerCheckoutSettings:
      type: object
      properties:
        customerCheckoutType:
          type: string
          description:
            "Checkout login setting. Value can be either \"LoginOptional,\"
            where shoppers are prompted to sign in\r

            but are not required to do so, or \"LoginRequired,\"
            where shopppers must login before purchasing."
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description:
        "Checkout requirements for customers, for example, whether they
        must login before purchasing from your store. \r

        Other customized checkout requirements can be defined."
    CustomRouteSettings:
      type: object
      properties:
        mappings:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Mapping"
          nullable: true
        validators:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Validator"
          nullable: true
        routes:
          type: array
          items:
            $ref: "#/components/schemas/Route"
          nullable: true
      additionalProperties: false
    EmailTransactionSettings:
      type: object
      properties:
        backInStock:
          type: boolean
          nullable: true
        orderChanged:
          type: boolean
          nullable: true
        orderShipped:
          type: boolean
          nullable: true
        orderFulfillmentDetailsChanged:
          type: boolean
          nullable: true
        shopperLoginCreated:
          type: boolean
          nullable: true
        shopperPasswordReset:
          type: boolean
          nullable: true
        returnCreated:
          type: boolean
          nullable: true
        returnAuthorized:
          type: boolean
          nullable: true
        returnUpdated:
          type: boolean
          nullable: true
        returnRejected:
          type: boolean
          nullable: true
        returnCancelled:
          type: boolean
          nullable: true
        returnClosed:
          type: boolean
          nullable: true
        refundCreated:
          type: boolean
          nullable: true
        storeCreditCreated:
          type: boolean
          nullable: true
        storeCreditUpdated:
          type: boolean
          nullable: true
        giftCardCreated:
          type: boolean
          nullable: true
        orderCancellation:
          type: boolean
          nullable: true
        backorder:
          type: boolean
          nullable: true
        shipmentConfirmation:
          type: boolean
          nullable: true
        orderPickupReady:
          type: boolean
          nullable: true
        orderPickupReminder:
          type: boolean
          nullable: true
        shipmentBackorderDateChanged:
          type: boolean
          nullable: true
        shipmentItemCanceled:
          type: boolean
          nullable: true
        shipmentAssigned:
          type: boolean
          nullable: true
        transferShipmentCreated:
          type: boolean
          nullable: true
        transferShipmentShipped:
          type: boolean
          nullable: true
        partialPickupReady:
          type: boolean
          nullable: true
        transferShipmentCreatedByFulfiller:
          type: boolean
          nullable: true
        intransitConfirmation:
          type: boolean
          nullable: true
        curbsideReady:
          type: boolean
          nullable: true
        partialCurbsideReady:
          type: boolean
          nullable: true
        gatewayGiftCardCreated:
          type: boolean
          nullable: true
        customerIntransit:
          type: boolean
          nullable: true
        customerAtCurbside:
          type: boolean
          nullable: true
      additionalProperties: false
    EmailTypeSetting:
      type: object
      properties:
        id:
          type: string
          nullable: true
        senderEmailAddressOverride:
          type: string
          nullable: true
        senderEmailAliasOverride:
          type: string
          nullable: true
        replyToEmailAddressOverride:
          type: string
          nullable: true
        bccEmailAddressOverride:
          type: string
          nullable: true
      additionalProperties: false
    ExternalPaymentWorkflowDefinition:
      type: object
      properties:
        name:
          type: string
          description: Should be one of Contracts.Constants.ThirdPartyWorkflowNames.
          nullable: true
        namespace:
          type: string
          nullable: true
        fullyQualifiedName:
          type: string
          nullable: true
        description:
          type: string
          description:
            "Information about this definition for display purposes in the
            'Payment and Checkout Settings'\r

            admin ui.  This field may contain valid html tags"
          nullable: true
        isEnabled:
          type: boolean
        isLegacy:
          type: boolean
          description:
            "Indicates if this is a legacy implementation using ARC only\r

            or using the new extensible implementation."
          nullable: true
        credentials:
          type: array
          items:
            $ref: "#/components/schemas/ThirdPartyCredentialField"
          nullable: true
      additionalProperties: false
      description:
        "This class describes credentials and enablement for the various
        third-party payment workflows that we will integrate with.\r

        Examples include Paypal Express, Amazon Payments, Google Wallet,
        etc."
    FlexibleCapture:
      type: object
      properties:
        sthFlow:
          $ref: "#/components/schemas/FlexibleCaptureFlow"
        bopisFlow:
          $ref: "#/components/schemas/FlexibleCaptureFlow"
      additionalProperties: false
    FlexibleCaptureFlow:
      type: object
      properties:
        captureBy:
          type: string
          nullable: true
        captureOn:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ForceCaptureJob:
      type: object
      allOf:
        - $ref: "#/components/schemas/OrderJob"
      properties:
        captureAfterDays:
          type: integer
          format: int32
      additionalProperties: false
    FulfillerSettings:
      type: object
      properties:
        editShipment:
          type: boolean
      additionalProperties: false
    FulfillmentJob:
      type: object
      properties:
        isEnabled:
          type: boolean
        interval:
          type: integer
          format: int32
      additionalProperties: false
    FulfillmentJobSettings:
      type: object
      properties:
        pickupReminderJob:
          $ref: "#/components/schemas/PickupReminderJob"
        releaseBackorderJob:
          $ref: "#/components/schemas/ReleaseBackorderJob"
      additionalProperties: false
    FulfillmentSettings:
      type: object
      properties:
        defaultBackOrderDays:
          type: integer
          format: int32
          nullable: true
        bpmConfiguration:
          $ref: "#/components/schemas/BPMConfiguration"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        fulfillmentJobSettings:
          $ref: "#/components/schemas/FulfillmentJobSettings"
        shipToStore:
          $ref: "#/components/schemas/ShipToStore"
        fulfillerSettings:
          $ref: "#/components/schemas/FulfillerSettings"
        actionOnBOPISReject:
          type: string
          nullable: true
      additionalProperties: false
    Gateway:
      type: object
      properties:
        gatewayDefinition:
          $ref: "#/components/schemas/GatewayDefinition"
        areGatewayCredentialFieldsSet:
          type: boolean
          description:
            Returns true if Gateway CredentialsField is set. For security
            purposes, Gateway subresource CredentialFields will not be returned.
        gatewayAccount:
          $ref: "#/components/schemas/GatewayAccount"
        supportedCards:
          type: array
          items:
            type: string
          description: Which credit cards the Merchant supports
          nullable: true
        siteGatewaySupportedCards:
          type: array
          items:
            $ref: "#/components/schemas/SiteGatewaySupportedCard"
          description: Which credit cards the Merchant supports
          nullable: true
      additionalProperties: false
    GatewayAccount:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        gatewayDefinitionId:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        isActive:
          type: boolean
        credentialFields:
          type: array
          items:
            $ref: "#/components/schemas/GatewayCredentialFieldValue"
          nullable: true
        binPatterns:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    GatewayCredentialFieldDefinition:
      type: object
      properties:
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        adminDisplayOrder:
          type: integer
          format: int32
        isPublic:
          type: boolean
      additionalProperties: false
    GatewayCredentialFieldValue:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        isValueSet:
          type: boolean
      additionalProperties: false
    GatewayDefinition:
      type: object
      properties:
        id:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        prodServiceURL:
          type: string
          nullable: true
        testServiceURL:
          type: string
          nullable: true
        integrationImplTypeName:
          type: string
          nullable: true
        supportedCards:
          type: array
          items:
            $ref: "#/components/schemas/SupportedCard"
          nullable: true
        features:
          type: array
          items:
            type: string
          nullable: true
        credentialDefinitions:
          type: array
          items:
            $ref: "#/components/schemas/GatewayCredentialFieldDefinition"
          nullable: true
        preAuthorizeDefinition:
          $ref: "#/components/schemas/PreAuthorizeDefinition"
        administationUi:
          type: array
          items:
            type: object
          nullable: true
      additionalProperties: false
    GeneralSettings:
      type: object
      properties:
        isMozuWebSite:
          type: boolean
        websiteName:
          type: string
          nullable: true
        customCdnHostName:
          type: string
          nullable: true
        missingImageSubstitute:
          type: string
          nullable: true
        cacheSettings:
          $ref: "#/components/schemas/CacheSettings"
        templateSiteId:
          type: integer
          format: int32
          nullable: true
        siteTimeZone:
          type: string
          nullable: true
        siteTimeFormat:
          type: string
          nullable: true
        senderEmailAddress:
          type: string
          nullable: true
        senderEmailAlias:
          type: string
          nullable: true
        replyToEmailAddress:
          type: string
          nullable: true
        bccEmailAddress:
          type: string
          nullable: true
        favIconPath:
          type: string
          nullable: true
        favIconMobilePath:
          type: string
          nullable: true
        logoText:
          type: string
          nullable: true
        logoPath:
          type: string
          nullable: true
        theme:
          type: string
          nullable: true
        mobileTheme:
          type: string
          nullable: true
        tabletTheme:
          type: string
          nullable: true
        googleAnalyticsCode:
          type: string
          nullable: true
        isGoogleAnalyticsEnabled:
          type: boolean
          nullable: true
        isGoogleAnalyticsEcommerceEnabled:
          type: boolean
          nullable: true
        isWishlistCreationEnabled:
          type: boolean
          nullable: true
        isMultishipEnabled:
          type: boolean
          nullable: true
        isAddressValidationEnabled:
          type: boolean
          nullable: true
        allowInvalidAddresses:
          type: boolean
          nullable: true
        taxableTerritories:
          type: array
          items:
            $ref: "#/components/schemas/TaxableTerritory"
          nullable: true
        supressedEmailTransactions:
          $ref: "#/components/schemas/EmailTransactionSettings"
        emailTransactionsOnlyOnRequest:
          $ref: "#/components/schemas/EmailTransactionSettings"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        viewAuthorizations:
          $ref: "#/components/schemas/ViewAuthorizations"
        customRoutes:
          $ref: "#/components/schemas/CustomRouteSettings"
        emailTypes:
          type: array
          items:
            $ref: "#/components/schemas/EmailTypeSetting"
          nullable: true
        supressedSmsTransactions:
          $ref: "#/components/schemas/SMSTransactionSettings"
        smsTypes:
          type: array
          items:
            $ref: "#/components/schemas/SMSTypeSetting"
          nullable: true
      additionalProperties: false
    InventoryExportJob:
      type: object
      allOf:
        - $ref: "#/components/schemas/Job"
      additionalProperties: false
    InventorySettings:
      type: object
      properties:
        inventoryExportJob:
          $ref: "#/components/schemas/InventoryExportJob"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    Job:
      type: object
      properties:
        isEnabled:
          type: boolean
        timesOfDay:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    LocalizedContent:
      type: object
      properties:
        localeCode:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    Mapping:
      type: object
      properties:
        type:
          type: string
          nullable: true
        beforeRouting:
          type: boolean
          nullable: true
        listFqn:
          type: string
          nullable: true
        docId:
          type: string
          nullable: true
        mapTo:
          type: string
          nullable: true
        facetId:
          type: string
          nullable: true
        pattern:
          type: string
          nullable: true
        replacement:
          type: string
          nullable: true
        mappings:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    OrderJob:
      type: object
      properties:
        isEnabled:
          type: boolean
        interval:
          type: integer
          format: int32
      additionalProperties: false
    OrderJobSettings:
      type: object
      properties:
        autoCaptureJob:
          $ref: "#/components/schemas/AutoCaptureJob"
        forceCaptureJob:
          $ref: "#/components/schemas/ForceCaptureJob"
      additionalProperties: false
    OrderProcessingSettings:
      type: object
      properties:
        paymentProcessingFlowType:
          type: string
          description:
            "Credit card payment authorization setting. Options can be
            authorize and charge the shopper's credit card when the order is
            placed, \"AuthorizeAndCaptureOnOrderPlacement,\" \r

            authorize the shopper's credit card when the order is
            placed and charge the credit card when the shipped,
            \"AuthorizeOnOrderPlacementAndCaptureOnOrderShipment,\" \r

            or authorize and charge the shopper's credit card for
            the full amount when the order is shipped,
            \"AuthorizeAndCaptureOnOrderShipment.\""
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
        useOverridePriceToCalculateDiscounts:
          type: boolean
          description: Use the override price on products to calculate discounts
        abandonedOrderThresholdInMinutes:
          type: integer
          description:
            Abandoned Order Threshold in minutes indicates the number of
            minutes until a pending order is considered abandoned.
          format: int32
          nullable: true
        giftCardProcessingType:
          type: string
          description:
            "Gift card payment authorization setting. Options can be authorize
            and charge the shopper's credit card when the order is placed,
            \"AuthorizeAndCaptureOnOrderPlacement,\" \r

            authorize the shopper's gift card when the order is
            placed and charge the gift card when it is shipped,
            \"AuthorizeOnOrderPlacementAndCaptureOnOrderShipment,\" \r

            or authorize and charge the shopper's gift card for the
            full amount when the order is shipped,
            \"AuthorizeAndCaptureOnOrderShipment.\""
          nullable: true
        thirdPartyPaymentSettings:
          type: array
          items:
            $ref: "#/components/schemas/ThirdPartyPaymentSetting"
          description: "Order processing settings for Third party payments\r

            Ex- ApplePay using
            AuthorizeOnOrderPlacementAndCaptureOnOrderShipment for processing
            orders"
          nullable: true
      additionalProperties: false
      description: "Order processing (credit card payment authorization) setting
        defined for this site. \r

        Can choose when the shopper’s credit card is authorized and
        charged. Possibilities include, \"authorize and charge the shopper's
        credit card for the full \r

        order amount when the order is placed,\" \"authorize the
        shopper's credit card for the full amount when the order is placed and
        charge the credit card when the order is shipped,\" or \r

        \"authorize and charge the shopper's credit card for the full
        amount when the order is shipped.\""
    PaymentSettings:
      type: object
      properties:
        gateways:
          type: array
          items:
            $ref: "#/components/schemas/Gateway"
          nullable: true
        externalPaymentWorkflowDefinitions:
          type: array
          items:
            $ref: "#/components/schemas/ExternalPaymentWorkflowDefinition"
          nullable: true
        payByMail:
          type: boolean
        purchaseOrder:
          $ref: "#/components/schemas/PurchaseOrderPaymentDefinition"
        jobSettings:
          $ref: "#/components/schemas/OrderJobSettings"
        paymentRanking:
          type: string
          nullable: true
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description:
        "Payment gateway settings defined for this site. A payment gateway
        is an e-commerce application service provider that authorizes \r

        payments for e-businesses and online retailers. You can define
        multiple payment gateway settings but only one is active at a time. \r

        Authorize.net is the only payment gateway supported currently."
    PickupReminderJob:
      type: object
      allOf:
        - $ref: "#/components/schemas/FulfillmentJob"
      additionalProperties: false
    PreAuthorizeDefinition:
      type: object
      properties:
        id:
          type: integer
          format: int32
        preAuthorizeTestUrl:
          type: string
          nullable: true
        preAuthorizeProdUrl:
          type: string
          nullable: true
        type:
          $ref: "#/components/schemas/PreAuthorizeTransactionTypeDataContract"
      additionalProperties: false
    PreAuthorizeTransactionTypeDataContract:
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    PurchaseOrderPaymentDefinition:
      type: object
      properties:
        isEnabled:
          type: boolean
          description: Is purchase order payment enabled
        paymentTerms:
          type: array
          items:
            $ref: "#/components/schemas/SiteSettingsPurchaseOrderPaymentTerm"
          description: Allowed net terms
          nullable: true
        allowSplitPayment:
          type: boolean
          description: Indicates whether another payment can be used with the purchase order
        customFields:
          type: array
          items:
            $ref: "#/components/schemas/SiteSettingsPurchaseOrderCustomField"
          description: ""
          nullable: true
      additionalProperties: false
    ReleaseBackorderJob:
      type: object
      allOf:
        - $ref: "#/components/schemas/FulfillmentJob"
      additionalProperties: false
    ReturnSettings:
      type: object
      properties:
        defaultProcessingFee:
          type: number
          format: double
        defaultShippingLocation:
          type: string
          nullable: true
        createLabelOnFulfillment:
          type: boolean
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    Route:
      type: object
      properties:
        template:
          type: string
          nullable: true
        defaults:
          type: object
          additionalProperties: {}
          nullable: true
        internalRoute:
          type: string
          nullable: true
        functionId:
          type: string
          nullable: true
        mappings:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
        canonical:
          type: boolean
          nullable: true
        validators:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
        urlScheme:
          type: string
          nullable: true
      additionalProperties: false
    ShippingMethod:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    ShipToStore:
      type: object
      properties:
        isEnabled:
          type: boolean
        alwaysCreateTransferShipments:
          type: boolean
        shippingMethod:
          $ref: "#/components/schemas/ShippingMethod"
        cancellation:
          $ref: "#/components/schemas/Cancellation"
      additionalProperties: false
    SiteGatewaySupportedCard:
      type: object
      properties:
        gatewayAccountId:
          type: string
          nullable: true
        processingGatewayAccountId:
          type: string
          nullable: true
        cardTypeId:
          type: string
          nullable: true
        paymentType:
          type: string
          nullable: true
      additionalProperties: false
    SiteShippingHandlingFee:
      type: object
      properties:
        amount:
          type: number
          description:
            Site setting for the name that appears as the sender of the
            shipping origin.
          format: double
          nullable: true
      additionalProperties: false
      description: The site setting that specifies the store's handling fees
    SiteShippingSettings:
      type: object
      properties:
        orderHandlingFee:
          $ref: "#/components/schemas/SiteShippingHandlingFee"
        signatureRequirement:
          $ref: "#/components/schemas/SiteShippingSignatureRequirement"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
      description:
        "Defines the site setting for the active shipping rate provider
        that rate provider calculates domestic and international shipping
        rates.\r

        Your site may have multiple shipping rate providers, for
        example, FedEx, DHL, USPS. However, only one shipping rate provider can
        be active at the same time."
    SiteShippingSignatureRequirement:
      type: object
      properties:
        minimumValueThreshold:
          type: number
          description:
            If set, this is exact amount a shipment must be greater than to
            trigger usage of the IsSignatureRequired property
          format: double
          nullable: true
        isSignatureRequired:
          type: boolean
          description: Is Signature Required?
          nullable: true
      additionalProperties: false
      description: The site setting that specifies the store's handling fees
    SMSTransactionSettings:
      type: object
      properties:
        shipmentItemCanceled:
          type: boolean
          nullable: true
        shipmentAssigned:
          type: boolean
          nullable: true
        customerIntransit:
          type: boolean
          nullable: true
        customerAtCurbside:
          type: boolean
          nullable: true
        intransitConfirmation:
          type: boolean
          nullable: true
        shipmentFulfilled:
          type: boolean
          nullable: true
        orderConfirmation:
          type: boolean
          nullable: true
        curbsideReady:
          type: boolean
          nullable: true
        storeItemsCanceled:
          type: boolean
          nullable: true
        optOutAcknowledgement:
          type: boolean
          nullable: true
        orderPickupReady:
          type: boolean
          nullable: true
        orderPickupReminder:
          type: boolean
          nullable: true
        customerAtStore:
          type: boolean
          nullable: true
      additionalProperties: false
    SMSTypeSetting:
      type: object
      properties:
        id:
          type: string
          nullable: true
      additionalProperties: false
    SupportedCard:
      type: object
      properties:
        type:
          type: string
          nullable: true
        friendlyName:
          type: string
          nullable: true
        paymentType:
          type: string
          nullable: true
      additionalProperties: false
    TaxableTerritory:
      type: object
      properties:
        countryCode:
          type: string
          nullable: true
        stateOrProvinceCode:
          type: string
          nullable: true
        isShippingTaxable:
          type: boolean
          nullable: true
      additionalProperties: false
    ThirdPartyCredentialField:
      type: object
      properties:
        displayName:
          type: string
          description: The displayable name of this credential field
          nullable: true
        apiName:
          type: string
          description: The name of this credential that should be used for web requests.
          nullable: true
        value:
          type: string
          description: The value for this credential that should be used for web requests.
          nullable: true
        vocabularyValues:
          type: array
          items:
            $ref: "#/components/schemas/VocabularyValue"
          nullable: true
        inputType:
          type: string
          description: The input field type for the value.
          nullable: true
        isSensitive:
          type: boolean
          description: the value holds sensitive information.
          nullable: true
      additionalProperties: false
      description: Describes the name and value of a third party credential field.
    ThirdPartyPaymentSetting:
      type: object
      properties:
        type:
          type: string
          nullable: true
        paymentProcessingFlowType:
          type: string
          nullable: true
      additionalProperties: false
    Validator:
      type: object
      properties:
        type:
          type: string
          nullable: true
        pattern:
          type: string
          nullable: true
        listFqn:
          type: string
          nullable: true
        field:
          type: string
          nullable: true
        docId:
          type: string
          nullable: true
        values:
          type: array
          items:
            type: string
          nullable: true
        attributeFQN:
          type: string
          nullable: true
      additionalProperties: false
    ViewAuthorizations:
      type: object
      properties:
        requireAuthForLive:
          type: boolean
        requireAuthForPending:
          type: boolean
        enforceSitewideSSL:
          type: boolean
          nullable: true
      additionalProperties: false
    VocabularyValue:
      type: object
      properties:
        key:
          type: string
          nullable: true
        contents:
          type: array
          items:
            $ref: "#/components/schemas/LocalizedContent"
          nullable: true
      additionalProperties: false
    SiteSettingsPurchaseOrderCustomField:
      type: object
      properties:
        code:
          type: string
          description: Unique code/name for memo field
          nullable: true
        label:
          type: string
          description: Memo field label that appers on the store front
          nullable: true
        sequenceNumber:
          type: integer
          description: Sequence Number
          format: int32
        isEnabled:
          type: boolean
          description: Whether this memo field is enabled
        isRequired:
          type: boolean
          description:
            Whether this memo field is mandatory to be filled in when placing
            an order
      additionalProperties: false
    SiteSettingsPurchaseOrderPaymentTerm:
      type: object
      properties:
        code:
          type: string
          description: A unique code for purchase order payment term
          nullable: true
        sequenceNumber:
          type: integer
          description: Sequence Number
          format: int32
        description:
          type: string
          description: Value of the net term
          nullable: true
      additionalProperties: false
    FieldTypeDefinitionRepositoryEntry:
      type: object
      properties:
        name:
          type: string
          nullable: true
        suffix:
          type: string
          nullable: true
        solrFieldType:
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    SchemaDefinition:
      required:
        - fields
        - language
      type: object
      properties:
        language:
          type: string
        isPublished:
          type: boolean
        fields:
          type: array
          items:
            $ref: "#/components/schemas/SchemaDefinitionField"
        auditInfo:
          $ref: "#/components/schemas/AdminUserAuditInfo"
      additionalProperties: false
    SchemaDefinitionField:
      required:
        - fieldDefinition
        - fieldName
      type: object
      properties:
        fieldName:
          type: string
        fieldDefinition:
          type: string
        friendlyName:
          type: string
          nullable: true
        searchFieldName:
          type: string
          nullable: true
        ingestFieldName:
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    bearerAuth:
      type: http
      description: "JWT Authorization header using the Bearer scheme. \r

        \r

        \ Enter 'Bearer' [space] and then your token in the text input
        below.\r

        \r

        Example: \"Bearer 12345abcdef\""
      scheme: bearer
      bearerFormat: JWT
    clientOauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /api/platform/applications/authtickets/oauth
          scopes: {}
  parameters:
    x-vol-tenant:
      name: x-vol-tenant
      in: header
      description: Tenant ID
      required: true
      schema:
        type: integer
    x-vol-site:
      name: x-vol-site
      in: header
      description: Site ID
      required: false
      schema:
        type: integer
    type:
      name: type
      in: query
      description: Type of request enum
      required: true
      schema:
        type: string
        enum:
          - ALL
          - PARTIAL
          - ANY
          - ALL_STORES
    items:
      name: items
      in: query
      description: List of Items to search on
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/ItemQuantity"
    requestLocation:
      name: requestLocation
      in: query
      description: Location for Request
      required: false
      schema:
        $ref: "#/components/schemas/RequestLocation"
    locationWhitelist:
      name: locationWhitelist
      in: query
      description: List of location codes that are allowed to be included in results
      required: false
      schema:
        type: array
        items:
          type: string
    locationBlacklist:
      name: locationBlacklist
      in: query
      description: List of location codes that are NOT allowed to be included in results
      required: false
      schema:
        type: array
        items:
          type: string
    limit:
      name: limit
      in: query
      description: The maximum number of results to return, defaults to 100 for most
      required: false
      schema:
        type: integer
    ignoreSafetyStock:
      name: ignoreSafetyStock
      in: query
      description: Whether to ignore the safety stock buffer put in place
      required: false
      schema:
        type: boolean
    includeNegativeInventory:
      name: includeNegativeInventory
      in: query
      description: Whether to allow items with negative inventory in the results
      required: false
      schema:
        type: boolean
    shippingLocation:
      name: shippingLocation
      in: query
      description: Whether to limit results to locations that are shipping enabled
      required: false
      schema:
        type: boolean
    pickup:
      name: pickup
      in: query
      description: Filter results by locations that are pickup-enabled (true) or not (false)
      required: false
      schema:
        type: boolean
    transferEnabled:
      name: transferEnabled
      in: query
      description:
        Filter results by locations that have transfer enabled (true) or
        don't (false)
      required: false
      schema:
        type: boolean
    includeInAggregate:
      name: includeInAggregate
      in: query
      description:
        Filter results by locations that have aggregate export enabled
        (true) or don't (false)
      required: false
      schema:
        type: boolean
    includeAttributes:
      name: includeAttributes
      in: query
      description: Flag to include attributes or not
      required: false
      schema:
        type: boolean
    locationName:
      name: locationName
      in: query
      description: Location Name
      required: false
      schema:
        type: string
    locationID:
      name: locationID
      in: query
      description: Location Identifier
      required: false
      schema:
        type: integer
    currentPage:
      name: currentPage
      in: query
      description: Current display page
      required: false
      schema:
        type: integer
    numberPerPage:
      name: numberPerPage
      in: query
      description: Number of items shown per page
      required: false
      schema:
        type: integer
    sortBy:
      name: sortBy
      in: query
      description: Field to sort by (enum = {'QUANTITY', 'FROM', 'TO', 'TYPE',
        'ORDER_ID', 'WEIGHT'})
      required: false
      schema:
        type: string
    shipmentID:
      name: shipmentID
      in: query
      description: Shipment ID
      required: false
      schema:
        type: integer
    exportSettingsName:
      name: exportSettingsName
      in: query
      description: Export Settings Name
      required: true
      schema:
        type: string
    exportSettingsFTPName:
      name: exportSettingsFTPName
      in: path
      description: Export Settings FTP Name
      required: false
      schema:
        type: string
    exportSettingsS3Name:
      name: exportSettingsS3Name
      in: path
      description: Export Settings S3 Name
      required: false
      schema:
        type: string
    tagCategoryName:
      name: tagCategoryName
      in: query
      description: Tag Category Name
      required: true
      schema:
        type: string
    tagValue:
      name: tagValue
      in: query
      description: Tag Value
      required: true
      schema:
        type: string
  requestBodies:
    AllocateInventoryRequest:
      description: Request to allocate inventory
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AllocateInventoryRequest"
    CreateBinRequest:
      description: Request to create a new bin
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateBinRequest"
    BinSearchRequest:
      description: Request to allocate inventory
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BinSearchRequest"
    LoadBinInventoryRequest:
      description: Request to load bin inventory
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoadBinInventoryRequest"
    UpdateBinsRequest:
      description: Request to update multiple bins
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateBinsRequest"
    UpdateBinRequest:
      description: Request to update a bin
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateBinRequest"
    AuditSearchRequest:
      description: Request to search audits
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AuditSearchRequest"
    CreateAuditRequest:
      description: Request to create an audit
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateAuditRequest"
    FetchFileConfigRequest:
      description: Request to fetch file configs
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/FetchFileConfigRequest"
    InventoryRequest:
      description: Request to get inventory
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InventoryRequest"
    AggregateRequest:
      description: Request to aggregate inventory
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AggregateRequest"
    RefreshRequest:
      description: Request to refresh inventory
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RefreshRequest"
    AdjustRequest:
      description: Request to adjust inventory
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AdjustRequest"
    DeleteItemRequest:
      description: Request to delete item(s)
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeleteItemRequest"
    OrderItemInformationRequest:
      description: Request to retrieve order item information
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderItemInformationRequest"
    OrderItemLogRequest:
      description: Request to retrieve order item log(s)
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderItemLogRequest"
    ClearEventQueueRequest:
      description: Request to clear events that are waiting to send.
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ClearEventQueueRequest"
    CreateSiteRequest:
      description: Request to create a new site
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InventoryCreateSiteRequest"
    ProvisionSiloRequest:
      description: Request to create to provision a new silo for a given tenant.
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProvisionSiloRequest"
    CreateTenantRequest:
      description: Request to create a tenant
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InventoryCreateTenantRequest"
    UpdateTenantConfigRequest:
      description: Request to create tenant config
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateTenantConfigRequest"
    CloneTenantRequest:
      description: Request to clone a tenant
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InventoryCloneTenantRequest"
    CreateExportSettingsRequest:
      description: Request to create a new Export Settings
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateExportSettingsRequest"
    UpdateExportSettingsRequest:
      description: Request to update an existing Export Settings
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateExportSettingsRequest"
    CreateExportSettingsFTPRequest:
      description: Request to create a new Export Settings FTP
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateExportSettingsFTPRequest"
    UpdateExportSettingsFTPRequest:
      description: Request to update an existing Export Settings FTP
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateExportSettingsFTPRequest"
    CreateExportSettingsS3Request:
      description: Request to create a new Export Settings S3
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateExportSettingsS3Request"
    UpdateExportSettingsS3Request:
      description: Request to update an existing Export Settings S3
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateExportSettingsS3Request"
    ExportInventoryRequest:
      description: Request to run an inventory export
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ExportInventoryRequest"
    WaveSuggestionRequest:
      description: Request to query for a pick wave suggestion
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WaveSuggestionRequest"
    ProductMappingRequest:
      description: Request to work with Product Mappings
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProductMappingRequest"
    TagCategory:
      description: Request create or modify Tag Categories
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TagCategory"
    Tag:
      description: Request create or modify Tag
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Tag"
