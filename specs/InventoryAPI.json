{
    "openapi": "3.0.0",
    "info": {
        "title": "Inventory",
        "description": "Swagger JSON for inventory apis",
        "version": "5.0"
    },
    "servers": [
        {
            "url": "https://localhost/",
            "description": "Local Server"
        },
        {
            "url": "https://fakedevserver/coex/",
            "description": "Development Server"
        },
        {
            "url": "https://fakeqaserver/coex/",
            "description": "QA Server"
        },
        {
            "url": "https://fakestagingserver/coex/",
            "description": "Staging Server"
        },
        {
            "url": "https://fakeprodserver/coex/",
            "description": "Production Server"
        }
    ],
    "paths": {
        "/v5/inventory/allocate/": {
            "post": {
                "tags": [
                    "Allocation Controller"
                ],
                "description": "Allocates inventory based on the given request",
                "operationId": "allocateInventory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/AllocateInventoryRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobQueueResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "$ref": "#/components/schemas/BaseResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v5/inventory/deallocate/": {
            "post": {
                "tags": [
                    "Allocation Controller"
                ],
                "description": "Deallocates inventory based on the given request",
                "operationId": "deallocateInventory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/AllocateInventoryRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "$ref": "#/components/schemas/BaseResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v5/inventory/fulfill/": {
            "post": {
                "tags": [
                    "Allocation Controller"
                ],
                "description": "Fulfills inventory based on the given request",
                "operationId": "fulfillInventory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/AllocateInventoryRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "$ref": "#/components/schemas/BaseResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/audit/search/": {
            "post": {
                "tags": [
                    "Audit Controller"
                ],
                "description": "Search for a list of Audits",
                "operationId": "searchAudits",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/AuditSearchRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuditSearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/audit/allOpen/{location_code}/": {
            "get": {
                "tags": [
                    "Audit Controller"
                ],
                "description": "Get all of the open   audits at the given location",
                "operationId": "getOpenAudits",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "Id of location",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Audit"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/audit/": {
            "post": {
                "tags": [
                    "Audit Controller"
                ],
                "description": "Create a new audit",
                "operationId": "createAudit",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateAuditRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Audit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/audit/{audit_id}/complete/": {
            "post": {
                "tags": [
                    "Audit Controller"
                ],
                "description": "Complete an audit",
                "operationId": "completeAudit",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "audit_id",
                        "in": "path",
                        "description": "Id of audit",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/LoadBinInventoryRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Audit"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/audit/{audit_id}/cancel/": {
            "post": {
                "tags": [
                    "Audit Controller"
                ],
                "description": "Cancel an audit",
                "operationId": "cancelAudit",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "audit_id",
                        "in": "path",
                        "description": "Id of audit",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v1/audit/{audit_id}/": {
            "get": {
                "tags": [
                    "Audit Controller"
                ],
                "description": "Get details of the specified audit",
                "operationId": "getAuditDetails",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "audit_id",
                        "in": "path",
                        "description": "Id of audit",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Audit"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/bin/": {
            "get": {
                "tags": [
                    "Bin Controller"
                ],
                "description": "Get a list of bins",
                "operationId": "getBins",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "locationID",
                        "in": "query",
                        "description": "Id of location",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "description": "Term to match in bins",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to show",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BinResponseModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bins Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Bin Controller"
                ],
                "description": "Create a bin",
                "operationId": "createBin",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateBinRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BinIDResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/bin/{bin_id}": {
            "get": {
                "tags": [
                    "Bin Controller"
                ],
                "description": "Get a bin",
                "operationId": "getBin",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "bin_id",
                        "in": "path",
                        "description": "Id of bin to get",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bin"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bin Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bin Controller"
                ],
                "description": "Delete a bin",
                "operationId": "deleteBin",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "bin_id",
                        "in": "path",
                        "description": "Id of bin to get",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/binName"
                    },
                    {
                        "$ref": "#/components/parameters/locationCode"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bin Not Found"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/bin/searchInventory/": {
            "post": {
                "tags": [
                    "Bin Controller"
                ],
                "description": "Search bins for a inventory by bin name or any product identifier",
                "operationId": "searchBins",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/BinSearchRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BinSearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/bin/loadInventory/": {
            "post": {
                "tags": [
                    "Bin Controller"
                ],
                "description": "Loads bin inventory for designated bins",
                "operationId": "loadInventory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/LoadBinInventoryRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoadBinInventoryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/bin/binTypes/": {
            "get": {
                "tags": [
                    "Bin Controller"
                ],
                "description": "Get list of bin types",
                "operationId": "getBinTypes",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BinTypeModel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/bin/binStatuses/": {
            "get": {
                "tags": [
                    "Bin Controller"
                ],
                "description": "Get list of bin statuses",
                "operationId": "getBinStatuses",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BinStatusModel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/bin/updateBins/": {
            "post": {
                "tags": [
                    "Bin Controller"
                ],
                "description": "Update the designated bins",
                "operationId": "updateBins",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateBinsRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateBinsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/bin/{bin_id}/": {
            "post": {
                "tags": [
                    "Bin Controller"
                ],
                "description": "Update the designated bin",
                "operationId": "updateBin",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "bin_id",
                        "in": "path",
                        "description": "Id of bin to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateBinRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bin"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/export/": {
            "post": {
                "tags": [
                    "Export Inventory Controller"
                ],
                "description": "Run Export Settings Job",
                "operationId": "runExport",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/ExportInventoryRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportInventoryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Service Error"
                    }
                }
            }
        },
        "/v1/export/create": {
            "post": {
                "tags": [
                    "Export Inventory Controller"
                ],
                "description": "Create an Export Settings",
                "operationId": "createExportSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateExportSettingsRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportSettingsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Service Error"
                    }
                }
            }
        },
        "/v1/export": {
            "get": {
                "tags": [
                    "Export Inventory Controller"
                ],
                "description": "Get an export settings",
                "operationId": "getExportSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "$ref": "#/components/parameters/exportSettingsName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExportSettings"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Export Setting Not Found"
                    }
                }
            }
        },
        "/v1/export/update": {
            "post": {
                "tags": [
                    "Export Inventory Controller"
                ],
                "description": "Update an Export Settings",
                "operationId": "updateExportSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateExportSettingsRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateExportSettingsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "No Settings Found"
                    },
                    "500": {
                        "description": "Internal Service Error"
                    }
                }
            }
        },
        "/v1/export/{exportSettingsName}": {
            "delete": {
                "tags": [
                    "Export Inventory Controller"
                ],
                "description": "Deletes an Export Settings",
                "operationId": "deleteExportSettings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "$ref": "#/components/parameters/exportSettingsName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeletedCountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/export/ftp/create": {
            "post": {
                "tags": [
                    "Export Inventory Controller"
                ],
                "description": "Create an Export Settings FTP",
                "operationId": "createExportSettingsFTP",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateExportSettingsFTPRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportSettingsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Service Error"
                    }
                }
            }
        },
        "/v1/export/ftp/update": {
            "post": {
                "tags": [
                    "Export Inventory Controller"
                ],
                "description": "Update an Export Settings FTP",
                "operationId": "updateExportSettingsFTP",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateExportSettingsFTPRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateExportSettingsFTPResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "No Settings Found"
                    },
                    "500": {
                        "description": "Internal Service Error"
                    }
                }
            }
        },
        "/v1/export/ftp/{exportSettingsName}/{exportSettingsFTPName}": {
            "delete": {
                "tags": [
                    "Export Inventory Controller"
                ],
                "description": "Deletes an Export Settings FTP. Not specifying exportSettingsFTPID deletes ALL ftp settings for the specified export settings.",
                "operationId": "deleteExportSettingsFTP",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "$ref": "#/components/parameters/exportSettingsName"
                    },
                    {
                        "$ref": "#/components/parameters/exportSettingsFTPName"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeletedCountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/export/s3/create": {
            "post": {
                "tags": [
                    "Export Inventory Controller"
                ],
                "description": "Create an Export Settings S3",
                "operationId": "createExportSettingsS3",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateExportSettingsS3Request"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportSettingsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Service Error"
                    }
                }
            }
        },
        "/v1/export/s3/update": {
            "post": {
                "tags": [
                    "Export Inventory Controller"
                ],
                "description": "Update an Export Settings S3",
                "operationId": "updateExportSettingsS3",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateExportSettingsS3Request"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateExportSettingsS3Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "No Settings Found"
                    },
                    "500": {
                        "description": "Internal Service Error"
                    }
                }
            }
        },
        "/v1/export/s3/{exportSettingsName}/{exportSettingsS3Name}": {
            "delete": {
                "tags": [
                    "Export Inventory Controller"
                ],
                "description": "Deletes an Export Settings S3. Not specifying exportSettingsS3ID deletes ALL s3 settings for the specified export settings.",
                "operationId": "deleteExportSettingsS3",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "$ref": "#/components/parameters/exportSettingsName"
                    },
                    {
                        "$ref": "#/components/parameters/exportSettingsS3Name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeletedCountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/config/fetchfile/": {
            "get": {
                "tags": [
                    "Fetch File Config Controller"
                ],
                "description": "Get the Fetch File Configs for the current tenant",
                "operationId": "getFetchConfig",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/M_FetchFileConfig"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Fetch File Config Controller"
                ],
                "description": "Save a new Fetch File Config",
                "operationId": "saveFetchConfig",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/FetchFileConfigRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/config/fetchfile/{fetchFileConfigID}": {
            "delete": {
                "tags": [
                    "Fetch File Config Controller"
                ],
                "description": "Deletes a fetch file config",
                "operationId": "deleteFetchConfig",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "fetchFileConfigID",
                        "in": "path",
                        "description": "Id of fetch file config",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeletedResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v5/inventory/": {
            "get": {
                "tags": [
                    "Inventory Controller"
                ],
                "description": "Get inventory from specified location",
                "operationId": "getInventory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "$ref": "#/components/parameters/x-vol-site"
                    },
                    {
                        "$ref": "#/components/parameters/type"
                    },
                    {
                        "$ref": "#/components/parameters/items"
                    },
                    {
                        "$ref": "#/components/parameters/requestLocation"
                    },
                    {
                        "$ref": "#/components/parameters/locationWhitelist"
                    },
                    {
                        "$ref": "#/components/parameters/locationBlacklist"
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "$ref": "#/components/parameters/ignoreSafetyStock"
                    },
                    {
                        "$ref": "#/components/parameters/includeNegativeInventory"
                    },
                    {
                        "$ref": "#/components/parameters/shippingLocation"
                    },
                    {
                        "$ref": "#/components/parameters/transferEnabled"
                    },
                    {
                        "$ref": "#/components/parameters/pickup"
                    },
                    {
                        "$ref": "#/components/parameters/includeInAggregate"
                    },
                    {
                        "$ref": "#/components/parameters/includeAttributes"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InventoryResponse"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bins Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Inventory Controller"
                ],
                "description": "Queries for specified inventory at given location",
                "operationId": "postQueryInventory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "$ref": "#/components/parameters/x-vol-site"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/InventoryRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InventoryResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v5/inventory/aggregate/": {
            "post": {
                "tags": [
                    "Inventory Controller"
                ],
                "description": "Aggregates Inventory",
                "operationId": "aggregate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "$ref": "#/components/parameters/x-vol-site"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/AggregateRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AggregateResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/queue/{jobID}/": {
            "get": {
                "tags": [
                    "Job Controller"
                ],
                "description": "Get the specified job",
                "operationId": "getJob",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "jobID",
                        "in": "path",
                        "description": "Id of bin to get",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobQueueResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Job Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/queue/": {
            "get": {
                "tags": [
                    "Job Controller"
                ],
                "description": "Get the requested jobs",
                "operationId": "getJobs",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "locationCode",
                        "in": "query",
                        "description": "Tenant specified unique Identifier of the owning location",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/limit"
                    },
                    {
                        "name": "owner",
                        "in": "query",
                        "description": "User that owns the job",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "description": "Type of the Job Queue Request",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "REFRESH",
                                    "ADJUST",
                                    "RELEASE_SHIPMENTS",
                                    "CREATE_PICK_WAVE",
                                    "CLOSE_PICK_WAVE",
                                    "PUT_AWAY_FILE",
                                    "SHORT_PICK_ERROR",
                                    "BIN_AUDIT_START",
                                    "BIN_AUDIT_COMPLETION",
                                    "CREATE_BIN_AUDIT",
                                    "RELEASE_PENDING_ITEMS"
                                ]
                            }
                        }
                    },
                    {
                        "name": "originalFilename",
                        "in": "query",
                        "description": "The full name of the file that was picked up at the secure droppoint server before being split up by location.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JobQueueResponse"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Job Not Found"
                    }
                }
            }
        },
        "/v5/inventory/refresh/": {
            "post": {
                "tags": [
                    "Modify Inventory Controller"
                ],
                "description": "Refresh Inventory",
                "operationId": "refresh",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/RefreshRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobIDResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v5/inventory/sync-refresh/": {
            "post": {
                "tags": [
                    "Modify Inventory Controller"
                ],
                "description": "Refresh Inventory - synchronous",
                "operationId": "sync-refresh",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/RefreshRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InventoryResponse"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v5/inventory/adjust/": {
            "post": {
                "tags": [
                    "Modify Inventory Controller"
                ],
                "description": "Adjust Inventory",
                "operationId": "adjust",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/AdjustRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobIDResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v5/inventory/sync-adjust/": {
            "post": {
                "tags": [
                    "Modify Inventory Controller"
                ],
                "description": "Adjust Inventory - synchronous",
                "operationId": "sync-adjust",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/AdjustRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InventoryResponse"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v5/inventory/delete/": {
            "post": {
                "tags": [
                    "Modify Inventory Controller"
                ],
                "description": "Delete Inventory",
                "operationId": "delete",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "$ref": "#/components/parameters/x-vol-site"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/DeleteItemRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteItemResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v5/inventory/getOrderItemInformation/": {
            "post": {
                "tags": [
                    "Order Item Controller"
                ],
                "description": "Get Order Item Information",
                "operationId": "getOrderItemInformation",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/OrderItemInformationRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrderItemInformation"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v5/inventory/getOrderItemLog/": {
            "post": {
                "tags": [
                    "Order Item Controller"
                ],
                "description": "Get Order Item Log",
                "operationId": "getOrderItemLog",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/OrderItemLogRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrderItemLogResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v5/inventory/clearEventQueue/": {
            "post": {
                "tags": [
                    "Order Item Controller"
                ],
                "description": "Clear pending events",
                "operationId": "clearEventQueue",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/ClearEventQueueRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrderItemLogResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/pendingItem/": {
            "get": {
                "tags": [
                    "Pending Items Controller"
                ],
                "description": "Get Pending Items",
                "operationId": "getPendingItems",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "$ref": "#/components/parameters/locationName"
                    },
                    {
                        "$ref": "#/components/parameters/locationID"
                    },
                    {
                        "$ref": "#/components/parameters/currentPage"
                    },
                    {
                        "$ref": "#/components/parameters/numberPerPage"
                    },
                    {
                        "$ref": "#/components/parameters/sortBy"
                    },
                    {
                        "$ref": "#/components/parameters/shipmentID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPendingItemsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/pendingItem/{pendingItemID}": {
            "delete": {
                "tags": [
                    "Pending Items Controller"
                ],
                "description": "Delete Pending Items",
                "operationId": "deletePendingItems",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "pendingItemID",
                        "in": "path",
                        "description": "Pending Item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeletedResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/pendingItem/release/": {
            "post": {
                "tags": [
                    "Pending Items Controller"
                ],
                "description": "Release All Pending Items",
                "operationId": "releaseAllPendingItems",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/pendingItem/release/{tenantID}": {
            "post": {
                "tags": [
                    "Pending Items Controller"
                ],
                "description": "Release Pending Items",
                "operationId": "releasePendingItems",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "tenantID",
                        "in": "path",
                        "description": "Tenant ID to release",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/productMapping": {
            "get": {
                "tags": [
                    "Product Mapping Controller"
                ],
                "description": "Gets a list Product Mappings for the specified tenant",
                "operationId": "getProductMapping",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductMappingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Product Mapping Controller"
                ],
                "description": "Creates a Product Mapping",
                "operationId": "createProductMapping",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/ProductMappingRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductMapping"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/productMapping/{direction}": {
            "delete": {
                "tags": [
                    "Product Mapping Controller"
                ],
                "description": "Delete a Product Mapping",
                "operationId": "deleteProductMapping",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "Direction",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/ProductMappingRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeletedResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/silo/provision": {
            "post": {
                "tags": [
                    "Silo Controller"
                ],
                "description": "Provision a silo based on a tenant ID.",
                "operationId": "provisionSiloForTenant",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ProvisionSiloRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantIDResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/site/": {
            "post": {
                "tags": [
                    "Site Controller"
                ],
                "description": "Creates a site",
                "operationId": "createSite",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateSiteRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SiteIDResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/site": {
            "delete": {
                "tags": [
                    "Site Controller"
                ],
                "description": "Deletes a site",
                "operationId": "deleteSite",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    },
                    {
                        "name": "x-vol-site",
                        "in": "header",
                        "description": "Site ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeletedResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/tenantConfig/": {
            "get": {
                "tags": [
                    "Tenant Config Controller"
                ],
                "description": "Gets tenant config",
                "operationId": "getTenantConfig",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantConfigModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tenant Config Controller"
                ],
                "description": "Creates or updates tenant config",
                "operationId": "createTenantConfig",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateTenantConfigRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantConfigModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/tenant/": {
            "post": {
                "tags": [
                    "Tenant Controller"
                ],
                "description": "Creates a tenant",
                "operationId": "createTenant",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateTenantRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantIDResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/tenant/clone": {
            "post": {
                "tags": [
                    "Tenant Controller"
                ],
                "description": "Clones a tenant",
                "operationId": "cloneTenant",
                "requestBody": {
                    "$ref": "#/components/requestBodies/CloneTenantRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantIDResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/tenant": {
            "delete": {
                "tags": [
                    "Tenant Controller"
                ],
                "description": "Deletes a tenant",
                "operationId": "deleteTenant",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-vol-tenant"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeletedResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/v1/wave/suggestion/": {
            "post": {
                "tags": [
                    "Wave Controller"
                ],
                "description": "Query Wave Suggestion (as a post)",
                "operationId": "queryWaveSuggestion",
                "requestBody": {
                    "$ref": "#/components/requestBodies/WaveSuggestionRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WaveSuggestionResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BaseRequest": {
                "title": "Base Request",
                "description": "Base Request Model",
                "properties": {
                    "locationCode": {
                        "title": "location code",
                        "description": "Location Code",
                        "type": "string"
                    },
                    "userID": {
                        "description": "user id",
                        "type": "integer"
                    },
                    "pageSize": {
                        "description": "how many results to show per page",
                        "type": "integer"
                    },
                    "pageNum": {
                        "description": "which page to show",
                        "type": "integer"
                    },
                    "sortBy": {
                        "description": "index to sort results by",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BaseResponse": {
                "title": "Base Response",
                "description": "Base Response Model",
                "properties": {
                    "success": {
                        "description": "Flag for success",
                        "type": "boolean"
                    },
                    "messages": {
                        "description": "List of messages",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "numResults": {
                        "description": "Number of results",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DateRange": {
                "title": "Date Range",
                "description": "Range of dates",
                "properties": {
                    "startDate": {
                        "description": "Start Date",
                        "type": "string"
                    },
                    "endDate": {
                        "description": "End Date",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeletedCountResponse": {
                "title": "Deleted Count Response",
                "description": "Deleted Count Response Model",
                "properties": {
                    "deleted": {
                        "description": "Count of deleted entries",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "DeletedResponse": {
                "title": "Deleted Response",
                "description": "Deleted Response Model",
                "properties": {
                    "deleted": {
                        "description": "Whether the delete was successful",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "FetchFileConfigRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Fetch File Config Request",
                        "description": "Request for Fetch File Configs",
                        "required": [
                            "active",
                            "lockName",
                            "ftpServer",
                            "ftpUsername",
                            "ftpPassword",
                            "ftpRemotePath",
                            "postProcessAction"
                        ],
                        "properties": {
                            "fetchFileConfigID": {
                                "description": "Fetch File Config ID",
                                "type": "integer"
                            },
                            "active": {
                                "description": "Flag for active state",
                                "type": "boolean"
                            },
                            "emailList": {
                                "description": "Email List",
                                "type": "string"
                            },
                            "refreshEnabled": {
                                "description": "Flag for Refresh Enabled",
                                "type": "boolean"
                            },
                            "refreshFileDescription": {
                                "description": "Description for the refresh file",
                                "type": "string"
                            },
                            "updateEnabled": {
                                "description": "Flag for Update Enabled",
                                "type": "boolean"
                            },
                            "updateFileDescription": {
                                "description": "Description for the update file",
                                "type": "string"
                            },
                            "ftpServer": {
                                "description": "FTP server address",
                                "type": "string"
                            },
                            "ftpUsername": {
                                "description": "FTP server username",
                                "type": "string"
                            },
                            "ftpPassword": {
                                "description": "FTP server password",
                                "type": "string"
                            },
                            "ftpPort": {
                                "description": "FTP server port",
                                "type": "integer"
                            },
                            "ftpRemotePath": {
                                "description": "FTP server remote path",
                                "type": "string"
                            },
                            "ftpRemotePathArchive": {
                                "description": "FTP server remote path archive",
                                "type": "string"
                            },
                            "region": {
                                "description": "S3 Region",
                                "type": "string"
                            },
                            "version": {
                                "description": "S3 Version",
                                "type": "string"
                            },
                            "s3Key": {
                                "description": "S3 Key",
                                "type": "string"
                            },
                            "secret": {
                                "description": "S3 Secret",
                                "type": "string"
                            },
                            "bucket": {
                                "description": "S3 Bucket",
                                "type": "string"
                            },
                            "s3Path": {
                                "description": "S3 Bucket Path (directory)",
                                "type": "string"
                            },
                            "archiveBucket": {
                                "description": "S3 Archive Bucket",
                                "type": "string"
                            },
                            "s3ArchivePath": {
                                "description": "S3 Archive Bucket Path (directory)",
                                "type": "string"
                            },
                            "lockName": {
                                "description": "Lock name",
                                "type": "string"
                            },
                            "postProcessAction": {
                                "description": "Enum denoting action post processing",
                                "type": "integer"
                            },
                            "useControlFile": {
                                "description": "Flag for using control file",
                                "type": "boolean"
                            },
                            "multipleFiles": {
                                "description": "Flag for using multiple files",
                                "type": "boolean"
                            },
                            "zeroOutNegatives": {
                                "description": "Flag for converting negatives to zero",
                                "type": "boolean"
                            },
                            "testFTPConfigs": {
                                "description": "Flag for if its a test ftp config",
                                "type": "boolean"
                            },
                            "fieldNameMap": {
                                "description": "List of field names",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "ignoreExtraFields": {
                                "description": "Flag for ignoring extra fields",
                                "type": "boolean"
                            },
                            "blankQuantityIsZero": {
                                "description": "Flag to convert null quantities to zero",
                                "type": "boolean"
                            },
                            "csvDelimiter": {
                                "description": "Delimiter",
                                "type": "string"
                            },
                            "productMapping": {
                                "title": "productMapping",
                                "description": "Enum for fetch file productMapping",
                                "type": "string",
                                "enum": [
                                    "SWAP_PART_NUMBER_WITH_UPC",
                                    "SWAP_SKU_WITH_UPC"
                                ]
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateExportSettingsFTPRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Create Export Settings FTP Request",
                        "description": "Request needed for creating Export Settings FTP",
                        "required": [
                            "exportSettingsFTP",
                            "exportSettingsName"
                        ],
                        "properties": {
                            "exportSettingsName": {
                                "description": "Export Settings Name to associate the ftp settings with",
                                "type": "string"
                            },
                            "exportSettingsFTP": {
                                "description": "Export Settings FTP to create",
                                "type": "object",
                                "$ref": "#/components/schemas/ExportSettingsFTP"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateExportSettingsRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Create Export Settings Request",
                        "description": "Request needed for creating Export Settings",
                        "required": [
                            "exportSettings"
                        ],
                        "properties": {
                            "exportSettings": {
                                "description": "Export Settings to create",
                                "type": "object",
                                "$ref": "#/components/schemas/ExportSettings"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateExportSettingsS3Request": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Create Export Settings S3 Request",
                        "description": "Request needed for creating Export Settings S3",
                        "required": [
                            "exportSettingsS3",
                            "exportSettingsName"
                        ],
                        "properties": {
                            "exportSettingsName": {
                                "description": "Export Settings Name to associate the ftp settings with",
                                "type": "string"
                            },
                            "exportSettingsS3": {
                                "description": "Export Settings S3 to create",
                                "type": "object",
                                "$ref": "#/components/schemas/ExportSettingsS3"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "ExportInventoryJobResponse": {
                "title": "Export Inventory Job Response",
                "description": "Response for each export job creation",
                "properties": {
                    "exportSettingsID": {
                        "description": "Export Settings ID",
                        "type": "integer"
                    },
                    "jobID": {
                        "description": "ID of newly created job",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ExportInventoryRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Export Inventory Request",
                        "description": "Export Inventory Request",
                        "properties": {
                            "exportSettingsName": {
                                "description": "Name of the Export Settings to use",
                                "type": "string"
                            },
                            "exportSettingsFTPName": {
                                "description": "Name of the FTP Settings to use. Will only check for this if exportID is already set",
                                "type": "string"
                            },
                            "exportSettingsS3Name": {
                                "description": "Name of the S3 Settings to use. Will only check for this if exportID is already set",
                                "type": "string"
                            },
                            "development": {
                                "description": "Flag for sending the exports to the development droppoint",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "ExportInventoryResponse": {
                "title": "Export Inventory Response",
                "description": "Response for Export Inventory api",
                "properties": {
                    "exportInventoryJobResponses": {
                        "description": "List of Export Inventory Job Responses",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExportInventoryJobResponse"
                        }
                    }
                },
                "type": "object"
            },
            "ExportSettings": {
                "title": "Export Settings",
                "description": "Export Settings",
                "required": [
                    "name",
                    "fileFormat",
                    "exportType",
                    "ftpInformation"
                ],
                "properties": {
                    "name": {
                        "description": "Export Settings Name",
                        "type": "string"
                    },
                    "fileFormat": {
                        "description": "Format for the export file",
                        "type": "string",
                        "enum": [
                            "XML",
                            "CSV"
                        ]
                    },
                    "exportType": {
                        "description": "Type of exportGG for the settings",
                        "type": "string",
                        "enum": [
                            "AGGREGATE",
                            "LOCATION"
                        ]
                    },
                    "onlySendAvailable": {
                        "description": "Flag for only sending available",
                        "type": "boolean"
                    },
                    "onlySendActiveLocations": {
                        "description": "Flag for only sending from active locations",
                        "type": "boolean"
                    },
                    "ftpInformation": {
                        "description": "List of export FTP settings",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExportSettingsFTP"
                        }
                    },
                    "s3Information": {
                        "description": "List of export S3 settings",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExportSettingsS3"
                        }
                    },
                    "exportSingleFile": {
                        "description": "Flag for exporting as a single file",
                        "type": "boolean"
                    },
                    "safetyStock": {
                        "description": "Safety Stock",
                        "type": "string",
                        "enum": [
                            "SAFETY_STOCK_MAX",
                            "SAFETY_STOCK_MIN",
                            "SAFETY_STOCK_AVG",
                            "SAFETY_STOCK_SUM"
                        ]
                    },
                    "floor": {
                        "description": "Floor",
                        "type": "string",
                        "enum": [
                            "FLOOR_MAX",
                            "FLOOR_MIN",
                            "FLOOR_AVG",
                            "FLOOR_SUM"
                        ]
                    },
                    "ltd": {
                        "description": "LTD",
                        "type": "string",
                        "enum": [
                            "LTD_MAX",
                            "LTD_MIN",
                            "LTD_AVG",
                            "LTD_SUM"
                        ]
                    },
                    "fileName": {
                        "description": "Name for the export file",
                        "type": "string"
                    },
                    "includeAttributes": {
                        "description": "Flag for including attributes",
                        "type": "boolean"
                    },
                    "zipFiles": {
                        "description": "Flag for zipping the files",
                        "type": "boolean"
                    },
                    "zipFileName": {
                        "description": "Name for the zipped file",
                        "type": "string"
                    },
                    "untransformedFileName": {
                        "description": "Untransformed File Name",
                        "type": "string"
                    },
                    "untransformedZipFileName": {
                        "description": "Untransformed Zip File Name",
                        "type": "string"
                    },
                    "locationGroupIDs": {
                        "description": "Location Group Ids associated with the settings",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "siteIDs": {
                        "description": "Site Ids associated with the settings",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "directShip": {
                        "description": "Flag for only using locations with Direct Ship enabled",
                        "type": "boolean"
                    },
                    "pickup": {
                        "description": "Flag for only using locations with In Store Pickup enabled",
                        "type": "boolean"
                    },
                    "transfer": {
                        "description": "Flag for only using locations with Transfer enabled",
                        "type": "boolean"
                    },
                    "productMapping": {
                        "title": "productMapping",
                        "description": "Enum for export productMapping",
                        "type": "string",
                        "enum": [
                            "SWAP_PART_NUMBER_WITH_UPC",
                            "SWAP_SKU_WITH_UPC"
                        ]
                    },
                    "isClassic": {
                        "description": "Flag for marking the setting as a classic export",
                        "type": "boolean"
                    },
                    "ignoreNegativeInventoryLocations": {
                        "description": "Flag for excluding negative inventory locations",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ExportSettingsFTP": {
                "title": "Export Settings FTP",
                "description": "Export Settings FTP",
                "required": [
                    "name",
                    "ftpServer",
                    "ftpPort",
                    "ftpDirectory"
                ],
                "properties": {
                    "active": {
                        "description": "Flag for Active State",
                        "type": "boolean"
                    },
                    "exportSettingsID": {
                        "description": "Export Settings ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Export Settings FTP Name",
                        "type": "string"
                    },
                    "ftpServer": {
                        "description": "FTP Server Address",
                        "type": "string"
                    },
                    "ftpPort": {
                        "description": "FTP Server Port",
                        "type": "integer"
                    },
                    "ftpDirectory": {
                        "description": "FTP Server Directory",
                        "type": "string"
                    },
                    "ftpDirectoryControlFile": {
                        "description": "FTP Server Control File Directory",
                        "type": "string"
                    },
                    "ftpUser": {
                        "description": "FTP Username",
                        "type": "string"
                    },
                    "ftpPassword": {
                        "description": "FTP Password",
                        "type": "string"
                    },
                    "deliveryClass": {
                        "description": "FTP Delivery Class. Defaults to ExportDeliveryDefault",
                        "type": "string"
                    },
                    "controlFile": {
                        "description": "Control File",
                        "type": "string"
                    },
                    "controlFileEmail": {
                        "description": "Control File Email",
                        "type": "string"
                    },
                    "remoteFileName": {
                        "description": "Remote File Name",
                        "type": "string"
                    },
                    "controlFileName": {
                        "description": "Control File Name",
                        "type": "string"
                    },
                    "endpoint": {
                        "description": "Endpoint",
                        "type": "string"
                    },
                    "environment": {
                        "description": "Environment",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExportSettingsResponse": {
                "title": "Job ID Response",
                "description": "Job ID Response",
                "properties": {
                    "exportSettingsName": {
                        "description": "Created Export Settings Name",
                        "type": "string"
                    },
                    "exportSettingsFTPName": {
                        "description": "Created Export Settings FTP Name",
                        "type": "string"
                    },
                    "exportSettingsS3Name": {
                        "description": "Created Export Settings S3 Name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ExportSettingsS3": {
                "title": "Export Settings S3",
                "description": "Export Settings S3",
                "required": [
                    "name",
                    "region",
                    "version",
                    "key",
                    "secret",
                    "bucket"
                ],
                "properties": {
                    "exportSettingsID": {
                        "description": "Export Settings ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Export Settings S3 Name",
                        "type": "string"
                    },
                    "active": {
                        "description": "Flag for Active State",
                        "type": "boolean"
                    },
                    "region": {
                        "description": "S3 Region",
                        "type": "string"
                    },
                    "version": {
                        "description": "S3 Version",
                        "type": "string"
                    },
                    "s3Key": {
                        "description": "S3 Key",
                        "type": "string"
                    },
                    "secret": {
                        "description": "S3 Secret",
                        "type": "string"
                    },
                    "bucket": {
                        "description": "S3 Bucket (directory)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateExportSettingsFTPRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Update Export Settings FTP Request",
                        "description": "Request needed updating existing Export Settings FTP",
                        "required": [
                            "exportSettingsName",
                            "exportSettingsFTP"
                        ],
                        "properties": {
                            "exportSettingsName": {
                                "description": "Export Settings Name to associate the ftp settings with",
                                "type": "string"
                            },
                            "exportSettingsFTP": {
                                "description": "Export Settings FTP to update",
                                "type": "object",
                                "$ref": "#/components/schemas/ExportSettingsFTP"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateExportSettingsFTPResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Update Export Settings FTP Response",
                        "description": "Update Export Settings FTP Response",
                        "properties": {
                            "tenantID": {
                                "description": "Tenant ID",
                                "type": "integer"
                            },
                            "exportSettingsFTPName": {
                                "description": "Export Settings FTP Name",
                                "type": "string"
                            },
                            "exportSettingsName": {
                                "description": "Export Settings Name to associate the ftp settings with",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateExportSettingsRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Update Export Settings Request",
                        "description": "Request needed updating existing Export Settings",
                        "required": [
                            "exportSettingsID",
                            "exportSettings"
                        ],
                        "properties": {
                            "exportSettings": {
                                "description": "Export Settings to update",
                                "type": "object",
                                "$ref": "#/components/schemas/ExportSettings"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateExportSettingsResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Update Export Settings Response",
                        "description": "Update Export Settings Response",
                        "properties": {
                            "tenantID": {
                                "description": "Tenant ID",
                                "type": "integer"
                            },
                            "name": {
                                "description": "Name",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateExportSettingsS3Request": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Update Export Settings S3 Request",
                        "description": "Request needed updating existing Export Settings S3",
                        "required": [
                            "exportSettingsName",
                            "exportSettingsS3"
                        ],
                        "properties": {
                            "exportSettingsName": {
                                "description": "Export Settings Name to associate the ftp settings with",
                                "type": "string"
                            },
                            "exportSettingsS3": {
                                "description": "Export Settings S3 to update",
                                "type": "object",
                                "$ref": "#/components/schemas/ExportSettingsS3"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateExportSettingsS3Response": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Update Export Settings S3 Response",
                        "description": "Update Export Settings S3 Response",
                        "properties": {
                            "tenantID": {
                                "description": "Tenant ID",
                                "type": "integer"
                            },
                            "exportSettingsS3ID": {
                                "description": "Export Settings S3 ID",
                                "type": "integer"
                            },
                            "exportSettingsID": {
                                "description": "Export Settings ID to associate the s3 settings with",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AdjustItem": {
                "title": "Adjust Item",
                "description": "Adjust Item",
                "properties": {
                    "partNumber": {
                        "description": "Part/Product Number",
                        "type": "string"
                    },
                    "upc": {
                        "description": "Universal Product Code",
                        "type": "string"
                    },
                    "sku": {
                        "description": "Stock Keeping Unit",
                        "type": "string"
                    },
                    "binID": {
                        "description": "Bin Location Identifier",
                        "type": "integer"
                    },
                    "quantity": {
                        "description": "Current Quantity of Item",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AdjustRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Adjust Request",
                        "description": "Request needed for adjusting inventory",
                        "properties": {
                            "items": {
                                "description": "List of items to adjust",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AdjustItem"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AggregateRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Aggregate Request",
                        "description": "Request for aggregating inventory",
                        "required": [
                            "items"
                        ],
                        "properties": {
                            "items": {
                                "description": "List of Items to search on",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            },
                            "ignoreSafetyStock": {
                                "description": "Whether to ignore the safety stock buffer put in place",
                                "type": "boolean"
                            },
                            "includeNegativeInventory": {
                                "description": "Whether to allow items with negative inventory in the results",
                                "type": "boolean"
                            },
                            "directShip": {
                                "description": "Whether to limit results to locations that are shipping enabled",
                                "type": "boolean"
                            },
                            "transferEnabled": {
                                "description": "Filter results by locations that apply tax (true) or don't (false)",
                                "type": "boolean"
                            },
                            "pickup": {
                                "description": "Filter results by pickup enabled (true) or not (false)",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AggregateResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Aggregate Response",
                        "description": "Response for aggregating Inventory",
                        "properties": {
                            "tenantID": {
                                "description": "Manufacturer Identifier",
                                "type": "integer"
                            },
                            "onHand": {
                                "description": "The quantity the location has in its possession",
                                "type": "integer"
                            },
                            "available": {
                                "description": "The quantity the location has that are available for purchase",
                                "type": "integer"
                            },
                            "partNumber": {
                                "description": "Part/Product Number",
                                "type": "string"
                            },
                            "upc": {
                                "description": "Universal Product Code",
                                "type": "string"
                            },
                            "sku": {
                                "description": "Stock Keeping Unit",
                                "type": "string"
                            },
                            "floor": {
                                "description": "Absolute minimum quantity of this item that should be in stock at any time",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AllocateInventoryRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Allocate Inventory Request",
                        "description": "Request needed for allocating inventory",
                        "required": [
                            "tenantID",
                            "items"
                        ],
                        "properties": {
                            "items": {
                                "description": "list of AllocateItems",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AllocateItem"
                                }
                            },
                            "orderDate": {
                                "description": "order date",
                                "type": "string"
                            },
                            "orderWeight": {
                                "description": "order weight",
                                "type": "integer"
                            },
                            "decrementOnHandOnDeallocate": {
                                "description": "flag to determine deallocation on decrements",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AllocateItem": {
                "title": "AllocateItem",
                "description": "Item for Allocation",
                "required": [
                    "quantity",
                    "orderItemID",
                    "orderID",
                    "shipmentID",
                    "locationID"
                ],
                "properties": {
                    "partNumber": {
                        "title": "part number",
                        "description": "part number",
                        "type": "string"
                    },
                    "upc": {
                        "title": "upc",
                        "description": "upc",
                        "type": "string"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku",
                        "type": "string"
                    },
                    "quantity": {
                        "title": "quantity",
                        "description": "quantity",
                        "type": "integer"
                    },
                    "orderID": {
                        "title": "order ID",
                        "description": "order ID",
                        "type": "integer"
                    },
                    "orderItemID": {
                        "title": "order item ID",
                        "description": "order item ID",
                        "type": "integer"
                    },
                    "shipmentID": {
                        "title": "shipment ID",
                        "description": "shipment ID",
                        "type": "integer"
                    },
                    "locationCode": {
                        "title": "location Code",
                        "description": "location Code",
                        "type": "string"
                    },
                    "previousOrderItemID": {
                        "title": "previous order item ID",
                        "description": "previous order item ID",
                        "type": "integer"
                    },
                    "binID": {
                        "title": "bin ID",
                        "description": "Bin Location Identifier",
                        "type": "integer"
                    },
                    "blockAssignment": {
                        "title": "Block Item Assignment",
                        "description": "Block assignment of item at product/location level. ONLY allowed on deallocate.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ClearEventQueueRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "ClearEventQueueRequest",
                        "description": "ClearEventQueueRequest",
                        "properties": {
                            "before": {
                                "description": "Clear events queued before this date. Date format looks like: 2010-01-30",
                                "type": "string"
                            },
                            "after": {
                                "description": "Clear events queued after this date. Date format looks like: 2010-01-30",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "DeleteItemRequest": {
                "title": "Delete Item Request",
                "description": "Request needed for deleting inventory",
                "properties": {
                    "dryRun": {
                        "description": "Flag used to differentiate between a test and a non-test run.",
                        "type": "boolean"
                    },
                    "explicit": {
                        "description": "Flag used to request explicit inventory, location, pick wave, and audit information for each request item.",
                        "type": "boolean"
                    },
                    "locationCodes": {
                        "description": "An array of locationCodes to be considered for item-deletion purposes. Optional.\n    All locationCodes associated with the requesting tenant will be considered if no locationCodes are provided.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "partNumber": {
                        "description": "The part number of the item to be deleted. Supports basic regex operators: .*+?^$[]",
                        "type": "string"
                    },
                    "upc": {
                        "description": "The upc of the item to be deleted. Supports basic regex operators: .*+?^$[]",
                        "type": "string"
                    },
                    "sku": {
                        "description": "The sku of the item to be deleted. Supports basic regex operators: .*+?^$[]",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeleteItemResponse": {
                "title": "Delete Item Response",
                "description": "Delete Item Response",
                "properties": {
                    "dryRun": {
                        "description": "Flag used to differentiate between a test and a non-test run.",
                        "type": "boolean"
                    },
                    "itemsDeleted": {
                        "description": "Items deleted due to the request",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/M_DeleteItem"
                        }
                    },
                    "totalAuditsDeleted": {
                        "description": "Flag used to differentiate between a test and a non-test run.",
                        "type": "boolean"
                    },
                    "totalInventoryEntriesDeleted": {
                        "description": "Flag used to differentiate between a test and a non-test run.",
                        "type": "boolean"
                    },
                    "totalLocationsAffected": {
                        "description": "Flag used to differentiate between a test and a non-test run.",
                        "type": "boolean"
                    },
                    "totalPickWavesDeleted": {
                        "description": "Flag used to differentiate between a test and a non-test run.",
                        "type": "boolean"
                    },
                    "totalProductsDeleted": {
                        "description": "Flag used to differentiate between a test and a non-test run.",
                        "type": "boolean"
                    },
                    "jobIDs": {
                        "description": "Flag used to differentiate between a test and a non-test run.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "InventoryRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Inventory Request",
                        "description": "Request for getting Inventory",
                        "required": [
                            "type",
                            "items"
                        ],
                        "properties": {
                            "type": {
                                "description": "Inventory Request Type Enum",
                                "type": "string",
                                "enum": [
                                    "ALL",
                                    "PARTIAL",
                                    "ANY",
                                    "ALL_STORES"
                                ]
                            },
                            "items": {
                                "description": "List of Items to search on",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ItemQuantity"
                                }
                            },
                            "requestLocation": {
                                "description": "Location for Request",
                                "type": "object",
                                "$ref": "#/components/schemas/RequestLocation"
                            },
                            "limit": {
                                "description": "The maximum number of results to return, defaults to 100 for most",
                                "type": "integer"
                            },
                            "locationWhitelist": {
                                "description": "List of location codes that are allowed to be included in results",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "locationPriorityList": {
                                "description": "List of location codes that should be returned before all others, preventing them from being excluded by limit",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "locationBlacklist": {
                                "description": "List of location codes that are NOT allowed to be included in results",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "ignoreSafetyStock": {
                                "description": "Whether to ignore the safety stock buffer put in place",
                                "type": "boolean"
                            },
                            "includeNegativeInventory": {
                                "description": "Whether to allow items with negative inventory in the results",
                                "type": "boolean"
                            },
                            "directShip": {
                                "description": "Whether to limit results to locations that are shipping enabled",
                                "type": "boolean"
                            },
                            "transferEnabled": {
                                "description": "Filter results by locations that have transfer enabled (true) or don't (false)",
                                "type": "boolean"
                            },
                            "pickup": {
                                "description": "Filter results by locations that have finderbot enabled (true) or don't (false)",
                                "type": "boolean"
                            },
                            "includeInAggregateExport": {
                                "description": "Filter results by locations that have aggregate export enabled (true) or don't (false)",
                                "type": "boolean"
                            },
                            "includeInLocationExport": {
                                "description": "Filter results by locations that have physical storefronts (true) or don't (false)",
                                "type": "boolean"
                            },
                            "excludeBlockedAssignment": {
                                "description": "Filter out results that are blocked from assignment (at the product/location level) ",
                                "type": "boolean"
                            },
                            "includeAttributes": {
                                "description": "Flag to include attributes or not",
                                "type": "boolean"
                            },
                            "sortByEnum": {
                                "description": "What to sort the inventory results by. Only used for GetInventoryByLocation calls (locationCode must be set)",
                                "type": "string",
                                "enum": [
                                    "ON_HAND",
                                    "AVAILABLE",
                                    "ALLOCATED",
                                    "PART_NUMBER",
                                    "PRODUCT_ID"
                                ]
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "InventoryResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Inventory Response",
                        "description": "Inventory Response",
                        "properties": {
                            "locationName": {
                                "description": "Location Name",
                                "type": "string"
                            },
                            "locationCode": {
                                "description": "Location Code",
                                "type": "string"
                            },
                            "tenantID": {
                                "description": "Tenant Identifier",
                                "type": "integer"
                            },
                            "onHand": {
                                "description": "The quantity the location has in its possession",
                                "type": "integer"
                            },
                            "available": {
                                "description": "The quantity the location has that are available for purchase",
                                "type": "integer"
                            },
                            "allocated": {
                                "description": "The quantity the location has that are already allocated.",
                                "type": "integer"
                            },
                            "pending": {
                                "description": "The quantity the location has that are pending.",
                                "type": "integer"
                            },
                            "partNumber": {
                                "description": "Part/Product Number",
                                "type": "string"
                            },
                            "upc": {
                                "description": "Universal Product Code",
                                "type": "string"
                            },
                            "sku": {
                                "description": "Stock Keeping Unit",
                                "type": "string"
                            },
                            "blockAssignment": {
                                "description": "Whether or not the product is blocked for assignment",
                                "type": "boolean"
                            },
                            "ltd": {
                                "description": "Custom field used for store prioritization",
                                "type": "number"
                            },
                            "floor": {
                                "description": "Absolute minimum quantity of this item that should be in stock at any time",
                                "type": "integer"
                            },
                            "safetyStock": {
                                "description": "Quantity of this item the location wants to keep in stock to ensure stock isn't completely depleted",
                                "type": "integer"
                            },
                            "distance": {
                                "description": "The distance in miles from this location to the item's destination",
                                "type": "number"
                            },
                            "directShip": {
                                "description": "Whether this location can ship to a consumer",
                                "type": "boolean"
                            },
                            "transferEnabled": {
                                "description": "Whether the location can ship to another location (store), thus restocking that location.",
                                "type": "boolean"
                            },
                            "pickup": {
                                "description": "Whether a consumer can pick up product at this location (store)",
                                "type": "boolean"
                            },
                            "countryCode": {
                                "description": "The country code of this location",
                                "type": "string"
                            },
                            "currencyID": {
                                "description": "The currency identifier for the retailPrice",
                                "type": "integer"
                            },
                            "retailPrice": {
                                "description": "The price of the product at this location",
                                "type": "number"
                            },
                            "inventoryLocatorName": {
                                "description": "The inventory locator name of the individual item",
                                "type": "string"
                            },
                            "attributes": {
                                "description": "List of Inventory Attributes",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Item": {
                "title": "Item",
                "description": "Item",
                "properties": {
                    "partNumber": {
                        "description": "Part/Product Number",
                        "type": "string"
                    },
                    "upc": {
                        "description": "Universal Product Code",
                        "type": "string"
                    },
                    "sku": {
                        "description": "Stock Keeping Unit",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ItemQuantity": {
                "title": "Item Quantity",
                "description": "Item Quantity Model",
                "properties": {
                    "partNumber": {
                        "description": "Part/Product Number",
                        "type": "string"
                    },
                    "upc": {
                        "description": "Universal Product Code",
                        "type": "string"
                    },
                    "sku": {
                        "description": "Stock Keeping Unit",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "Quantity",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "JobIDResponse": {
                "title": "Job ID Response",
                "description": "Job ID Response",
                "properties": {
                    "jobID": {
                        "description": "Job ID",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "OrderItemInformation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Order Item Information",
                        "description": "Order Item Information",
                        "properties": {
                            "orderID": {
                                "description": "Order Identifier",
                                "type": "integer"
                            },
                            "orderItemID": {
                                "description": "Order Item Identifier",
                                "type": "integer"
                            },
                            "locationID": {
                                "description": "Location Identifier",
                                "type": "integer"
                            },
                            "locationActive": {
                                "description": "Flag for whether the location is active",
                                "type": "boolean"
                            },
                            "locationCode": {
                                "description": "External Store Identifier",
                                "type": "integer"
                            },
                            "locationName": {
                                "description": "Location Name",
                                "type": "string"
                            },
                            "binID": {
                                "description": "Bin Identifier",
                                "type": "integer"
                            },
                            "partNumber": {
                                "description": "Part/Product Number",
                                "type": "string"
                            },
                            "upc": {
                                "description": "Universal Product Code",
                                "type": "string"
                            },
                            "sku": {
                                "description": "Stock Keeping Unit",
                                "type": "string"
                            },
                            "ltd": {
                                "description": "Custom field used for store prioritization",
                                "type": "string"
                            },
                            "floor": {
                                "description": "Absolute minimum quantity of this item that should be in stock at any time",
                                "type": "integer"
                            },
                            "safetyStock": {
                                "description": "Quantity of this item the location wants to keep in stock to ensure stock isn't completely depleted",
                                "type": "integer"
                            },
                            "onHand": {
                                "description": "The quantity the location has in its possession",
                                "type": "integer"
                            },
                            "available": {
                                "description": "The quantity the location has that are available for purchase",
                                "type": "integer"
                            },
                            "allocated": {
                                "description": "The quantity the location has that are allocated",
                                "type": "integer"
                            },
                            "allocates": {
                                "description": "Total number of allocations",
                                "type": "integer"
                            },
                            "deallocates": {
                                "description": "Total number of deallocations",
                                "type": "integer"
                            },
                            "fulfills": {
                                "description": "Total number of fulfillments. Should never be greater than 1.",
                                "type": "integer"
                            },
                            "picks": {
                                "description": "Total number of picks (WMS only)",
                                "type": "integer"
                            },
                            "pendingQuantity": {
                                "description": "Pending quantity (WMS only)",
                                "type": "integer"
                            },
                            "events": {
                                "description": "Order Identifier",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OrderItemInformationEvent"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "OrderItemInformationEvent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Order Item Information Event",
                        "description": "Order Item Information Event",
                        "properties": {
                            "date": {
                                "description": "Date of the event",
                                "type": "string"
                            },
                            "eventType": {
                                "description": "Type of event",
                                "type": "string",
                                "enum": [
                                    "ALLOCATED",
                                    "DEALLOCATED",
                                    "FULFILLED",
                                    "PICKED",
                                    "DEALLOCATE_FULFILL"
                                ]
                            },
                            "quantity": {
                                "description": "Quantity",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "OrderItemInformationRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Order Item Information Request",
                        "description": "Request for getting order item information",
                        "properties": {
                            "orderID": {
                                "description": "Order Identifier",
                                "type": "integer"
                            },
                            "items": {
                                "description": "List of Items to search on",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "OrderItemLogIdentifier": {
                "title": "Order Item Log Identifier",
                "description": "OrderItem Log Identifier",
                "properties": {
                    "orderID": {
                        "description": "Order Identifier",
                        "type": "integer"
                    },
                    "orderItemID": {
                        "description": "Order Item Identifier",
                        "type": "integer"
                    },
                    "shipmentID": {
                        "description": "Shipment Identifier",
                        "type": "integer"
                    },
                    "partNumber": {
                        "description": "Part/Product Number",
                        "type": "string"
                    },
                    "upc": {
                        "description": "Universal Product Code",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "OrderItemLogRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Order Item Log Request",
                        "description": "OrderItem Log Request",
                        "properties": {
                            "identifiers": {
                                "description": "A list of order item log identifiers to search for",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/OrderItemLogIdentifier"
                                }
                            },
                            "orderBy": {
                                "description": "Order Identifier",
                                "type": "string",
                                "enum": [
                                    "ORDER_ID",
                                    "ORDER_ITEM_ID",
                                    "INVENTORY_ID",
                                    "TENANT_ID",
                                    "LOCATION_ID",
                                    "USER_ID",
                                    "QUANTITY",
                                    "TYPE",
                                    "RESOLVED",
                                    "FIXED",
                                    "DATE",
                                    "SHIPMENT_ID"
                                ]
                            },
                            "limit": {
                                "description": "The maximum number of results to return",
                                "type": "integer"
                            },
                            "type": {
                                "description": "The type of logs to retrieve",
                                "type": "string",
                                "enum": [
                                    "ALLOCATE",
                                    "DEALLOCATE",
                                    "FULFILL",
                                    "PICK"
                                ]
                            },
                            "sortAscending": {
                                "description": "Whether to sort results ascending, based on orderBy",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "OrderItemLogResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Order Item Log Response",
                        "description": "OrderItem Log Response",
                        "properties": {
                            "orderID": {
                                "description": "Order Identifier",
                                "type": "integer"
                            },
                            "orderItemID": {
                                "description": "Order Item Identifier",
                                "type": "integer"
                            },
                            "shipmentID": {
                                "description": "Shipment Identifier",
                                "type": "integer"
                            },
                            "inventoryID": {
                                "description": "Inventory Identifier",
                                "type": "integer"
                            },
                            "tenantID": {
                                "description": "Tenant Identifier",
                                "type": "integer"
                            },
                            "locationCode": {
                                "description": "Location Code Identifier",
                                "type": "string"
                            },
                            "userID": {
                                "description": "User Identifier",
                                "type": "integer"
                            },
                            "quantity": {
                                "description": "The number of items affected for this log entry",
                                "type": "integer"
                            },
                            "type": {
                                "description": "The type of logs to retrieve",
                                "type": "string",
                                "enum": [
                                    "ALLOCATE",
                                    "DEALLOCATE",
                                    "FULFILL",
                                    "PICK"
                                ]
                            },
                            "resolved": {
                                "description": "Whether this event is resolved",
                                "type": "boolean"
                            },
                            "fixed": {
                                "description": "Whether this event has been fixed",
                                "type": "boolean"
                            },
                            "date": {
                                "description": "The date of this log entry",
                                "type": "string"
                            },
                            "partNumber": {
                                "description": "Part/Product Number",
                                "type": "string"
                            },
                            "upc": {
                                "description": "Universal Product Code",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "RefreshItem": {
                "title": "Refresh Item",
                "description": "Refresh Item",
                "properties": {
                    "partNumber": {
                        "description": "Part/Product Number",
                        "type": "string"
                    },
                    "upc": {
                        "description": "Universal Product Code",
                        "type": "string"
                    },
                    "sku": {
                        "description": "Stock Keeping Unit",
                        "type": "string"
                    },
                    "binID": {
                        "description": "Bin Location Identifier",
                        "type": "integer"
                    },
                    "ltd": {
                        "description": "Custom field used for store prioritization",
                        "type": "string"
                    },
                    "floor": {
                        "description": "Absolute minimum quantity of this item that should be in stock at any time",
                        "type": "integer"
                    },
                    "safetyStock": {
                        "description": "Quantity of this item the location wants to keep in stock to ensure stock isn't completely depleted",
                        "type": "integer"
                    },
                    "quantity": {
                        "description": "Current Quantity of Item",
                        "type": "integer"
                    },
                    "retailPrice": {
                        "description": "Stock Keeping Unit",
                        "type": "number"
                    },
                    "currencyID": {
                        "description": "The price of the item",
                        "type": "integer"
                    },
                    "inventoryLocatorName": {
                        "description": "The inventory locator name of the item",
                        "type": "string"
                    },
                    "attributes": {
                        "description": "List of Item Attributes",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "RefreshRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Refresh Request",
                        "description": "Request needed for refreshing inventory",
                        "required": [
                            "locationCode"
                        ],
                        "properties": {
                            "items": {
                                "description": "List of items to refresh",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RefreshItem"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "RequestLocation": {
                "title": "Request Location",
                "description": "Request Location",
                "properties": {
                    "unit": {
                        "description": "Unit of distance used for radius",
                        "type": "string",
                        "default": "MILES",
                        "enum": [
                            "MILES",
                            "KM"
                        ]
                    },
                    "radius": {
                        "description": "Distance from location",
                        "type": "number"
                    },
                    "postalCode": {
                        "description": "Postal Code of this location",
                        "type": "string"
                    },
                    "latitude": {
                        "description": "Latitude coordinate of this location",
                        "type": "number"
                    },
                    "longitude": {
                        "description": "Longitude coordinate of this location",
                        "type": "number"
                    },
                    "countryCode": {
                        "description": "Country Code for this location",
                        "type": "string"
                    },
                    "locationCode": {
                        "description": "Location Code for this location. This being set will trigger GetInventoryByLocation",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProductMapping": {
                "title": "Product Mapping",
                "description": "Product Mapping",
                "properties": {
                    "tenantID": {
                        "title": "tenantID",
                        "description": "Tenant Identifier",
                        "type": "integer"
                    },
                    "direction": {
                        "title": "direction",
                        "description": "Enum for direction of the mapping",
                        "type": "string",
                        "enum": [
                            "INBOUND",
                            "OUTBOUND",
                            "SKIP"
                        ]
                    },
                    "mapping": {
                        "title": "mapping",
                        "description": "Enum for mapping rule",
                        "type": "string",
                        "enum": [
                            "DEFAULT_MAPPING",
                            "CUSTOM_MAPPING_PART_TO_ALL",
                            "CUSTOM_MAPPING_PART_TO_SKU",
                            "CUSTOM_MAPPING_ONLY_UPC",
                            "CUSTOM_MAPPING_PART_TO_UPC_IF_EMPTY",
                            "CUSTOM_MAPPING_SKU_TO_PART_UPC_SKU",
                            "CUSTOM_MAPPING_SKU_TO_PART",
                            "CUSTOM_MAPPING_SKU_TO_UPC_IF_EMPTY"
                        ]
                    }
                },
                "type": "object"
            },
            "ProductMappingRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Product Mapping Request",
                        "description": "Request needed to interact with Product Mappings",
                        "properties": {
                            "direction": {
                                "title": "direction",
                                "description": "Enum for direction of the mapping",
                                "type": "string",
                                "enum": [
                                    "INBOUND",
                                    "OUTBOUND",
                                    "SKIP"
                                ]
                            },
                            "mapping": {
                                "title": "mapping",
                                "description": "Enum for mapping rule",
                                "type": "string",
                                "enum": [
                                    "DEFAULT_MAPPING",
                                    "CUSTOM_MAPPING_PART_TO_ALL",
                                    "CUSTOM_MAPPING_PART_TO_SKU",
                                    "CUSTOM_MAPPING_ONLY_UPC",
                                    "CUSTOM_MAPPING_PART_TO_UPC_IF_EMPTY",
                                    "CUSTOM_MAPPING_SKU_TO_PART_UPC_SKU",
                                    "CUSTOM_MAPPING_SKU_TO_PART"
                                ]
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "ProductMappingResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Product Mapping Response",
                        "description": "Product Mapping Response",
                        "properties": {
                            "productMappings": {
                                "description": "Product Mapping",
                                "type": "object",
                                "$ref": "#/components/schemas/ProductMapping"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "ProvisionSiloRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Create Site Request",
                        "description": "Request for creating a site",
                        "properties": {
                            "tenantID": {
                                "title": "tenantID",
                                "description": "Tenant ID",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateSiteRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Create Site Request",
                        "description": "Request for creating a site",
                        "properties": {
                            "name": {
                                "title": "name",
                                "description": "Site name",
                                "type": "string"
                            },
                            "siteID": {
                                "title": "siteID",
                                "description": "Site ID",
                                "type": "integer"
                            },
                            "tenantID": {
                                "title": "tenantID",
                                "description": "Tenant ID",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "SiteIDResponse": {
                "title": "Site ID Response",
                "description": "Site ID Response",
                "properties": {
                    "siteID": {
                        "description": "Site ID",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CloneTenantRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Clone Tenant Request",
                        "description": "Request for creating a tenant",
                        "properties": {
                            "targetTenantName": {
                                "title": "targetTenantName",
                                "description": "Target Tenant name",
                                "type": "string"
                            },
                            "sourceTenantID": {
                                "title": "sourceTenantID",
                                "description": "Source Tenant ID",
                                "type": "integer"
                            },
                            "targetTenantID": {
                                "title": "targetTenantID",
                                "description": "Target Tenant ID",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateTenantRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Create Tenant Request",
                        "description": "Request for creating a tenant",
                        "properties": {
                            "name": {
                                "title": "name",
                                "description": "Tenant name",
                                "type": "string"
                            },
                            "tenantID": {
                                "title": "tenantID",
                                "description": "Tenant ID",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "TenantIDResponse": {
                "title": "Tenant ID Response",
                "description": "Tenant ID Response",
                "properties": {
                    "tenantID": {
                        "description": "Tenant ID",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "UpdateTenantConfigRequest": {
                "title": "Create Tenant Config Request",
                "description": "Request for creating or updating tenant config.",
                "properties": {
                    "numEventSenderWorkers": {
                        "description": "Number of event sender workers to run for this tenant.",
                        "type": "integer"
                    },
                    "fetchWorkerConfigIds": {
                        "description": "Config IDs of Fetch Worker Configs to regularly run. Set this to [0] to run all configs.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "eventsToSend": {
                        "description": "What level of events to send. Must be one of: NO_REFRESH_LOGS, WITH_REFRESH_LOGS, WITH_BASIC_EVENTS, ALL",
                        "type": "string"
                    },
                    "enableSyncApi": {
                        "description": "Whether our secret sync api is enabled for this tenant.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "JobQueueResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Job Queue Response",
                        "description": "Response for getting a job",
                        "properties": {
                            "jobID": {
                                "description": "Internal identifier that uniquely identifies a single job",
                                "type": "integer"
                            },
                            "tenantID": {
                                "description": "Unique internal identifier of the tenant that owns the job",
                                "type": "integer"
                            },
                            "locationID": {
                                "description": "Unique internal Identifier of the owning location",
                                "type": "integer"
                            },
                            "type": {
                                "description": "Purpose of the job",
                                "type": "string",
                                "enum": [
                                    "REFRESH",
                                    "ADJUST",
                                    "RELEASE_SHIPMENTS",
                                    "CREATE_PICK_WAVE",
                                    "CLOSE_PICK_WAVE",
                                    "PUT_AWAY_FILE",
                                    "SHORT_PICK_ERROR",
                                    "BIN_AUDIT_START",
                                    "BIN_AUDIT_COMPLETION",
                                    "CREATE_BIN_AUDIT",
                                    "RELEASE_PENDING_ITEMS"
                                ]
                            },
                            "added": {
                                "description": "Time and date the job was added to the queue in ISO8601 format in UTC",
                                "type": "string"
                            },
                            "started": {
                                "description": "Time and date the job was started in ISO8601 format in UTC",
                                "type": "string"
                            },
                            "finished": {
                                "description": "Time and date the job was finished in ISO8601 format in UTC",
                                "type": "string"
                            },
                            "originalFilename": {
                                "description": "The full name of the file that was picked up at the secure droppoint server before being split up by location. Applies only to refresh and adjust jobs created via file fetch process",
                                "type": "string"
                            },
                            "hasData": {
                                "description": "True if the job was not created from a fetched file",
                                "type": "boolean"
                            },
                            "itemCount": {
                                "description": "The number of items processed, only for job types REFRESH and ADJUST",
                                "type": "integer"
                            },
                            "status": {
                                "description": "Current status of job completion",
                                "type": "string",
                                "enum": [
                                    "PENDING",
                                    "WORKING",
                                    "SUCCESS",
                                    "FAILED"
                                ]
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Product": {
                "title": "Product",
                "description": "Product within a bin",
                "properties": {
                    "partNumber": {
                        "description": "Part Number",
                        "type": "string"
                    },
                    "upc": {
                        "description": "UPC",
                        "type": "string"
                    },
                    "sku": {
                        "description": "SKU",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProductMatch": {
                "title": "Product Match",
                "description": "Product Match",
                "properties": {
                    "matchType": {
                        "description": "How the product matches with the identifier",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "Identifier",
                        "type": "string"
                    },
                    "value": {
                        "description": "Value",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ProductQuantity": {
                "title": "Product Quantities",
                "description": "A product and its associated quantity",
                "properties": {
                    "partNumber": {
                        "description": "Part Number",
                        "type": "string"
                    },
                    "upc": {
                        "description": "UPC",
                        "type": "string"
                    },
                    "sku": {
                        "description": "SKU",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "Quantity of product",
                        "type": "integer"
                    },
                    "binID": {
                        "description": "ID of associated bin",
                        "type": "integer"
                    },
                    "locationID": {
                        "description": "Location Identifier of the owning location",
                        "type": "integer"
                    },
                    "binTypeID": {
                        "description": "Bin Type ID",
                        "type": "integer"
                    },
                    "binStatusID": {
                        "description": "Bin Status ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the product",
                        "type": "string"
                    },
                    "inventoryID": {
                        "description": "Inventory ID",
                        "type": "integer"
                    },
                    "tenantLocProductID": {
                        "description": "Tenant Location Product ID",
                        "type": "integer"
                    },
                    "auditProductID": {
                        "description": "Audit Product ID",
                        "type": "integer"
                    },
                    "auditID": {
                        "description": "Audit ID",
                        "type": "integer"
                    },
                    "onHand": {
                        "description": "Amount of product on hand",
                        "type": "integer"
                    },
                    "available": {
                        "description": "Amount of product available",
                        "type": "integer"
                    },
                    "allocated": {
                        "description": "Amount of product allocated",
                        "type": "integer"
                    },
                    "pending": {
                        "description": "Amount of product pending",
                        "type": "integer"
                    },
                    "ltd": {
                        "description": "Custom field used for store prioritization",
                        "type": "integer"
                    },
                    "floor": {
                        "description": "Absolute minimum quantity of this item that should be in stock at any time",
                        "type": "integer"
                    },
                    "safetystock": {
                        "description": "Quantity of this item the location wants to keep in stock to ensure stock isn't completely depleted",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Audit": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Audit",
                        "description": "Audit",
                        "properties": {
                            "auditID": {
                                "description": "Audit identifier",
                                "type": "integer"
                            },
                            "userID": {
                                "description": "User identifier",
                                "type": "integer"
                            },
                            "locationCode": {
                                "description": "Location code",
                                "type": "string"
                            },
                            "status": {
                                "description": "Audit status",
                                "type": "string"
                            },
                            "dateRequested": {
                                "description": "Date the audit was requested",
                                "type": "string"
                            },
                            "dateStarted": {
                                "description": "Date the audit was started",
                                "type": "string"
                            },
                            "items": {
                                "description": "List of Audit Items",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AuditItem"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AuditItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Audit Item",
                        "description": "Audit Item",
                        "properties": {
                            "auditItemID": {
                                "description": "Audit Item identifier",
                                "type": "integer"
                            },
                            "binName": {
                                "description": "Bin Name",
                                "type": "string"
                            },
                            "product": {
                                "description": "Audit Item and its quantity",
                                "type": "object",
                                "$ref": "#/components/schemas/AuditItemQuantity"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AuditItemQuantity": {
                "title": "Audit Item Quantity",
                "description": "Audit Item Quantity",
                "properties": {
                    "partNumber": {
                        "description": "Part Number",
                        "type": "string"
                    },
                    "upc": {
                        "description": "UPC",
                        "type": "string"
                    },
                    "sku": {
                        "description": "SKU",
                        "type": "string"
                    },
                    "expectedQuantity": {
                        "description": "Expected Quantity of items",
                        "type": "integer"
                    },
                    "actualQuantity": {
                        "description": "Actual quantity of items",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AuditSearchRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Audit Search Request",
                        "description": "Request for searching audits",
                        "properties": {
                            "auditID": {
                                "description": "Audit identifier",
                                "type": "integer"
                            },
                            "binName": {
                                "description": "Name of the bin",
                                "type": "string"
                            },
                            "auditStatus": {
                                "description": "Audit Status",
                                "type": "string"
                            },
                            "dateRange": {
                                "description": "Date Range",
                                "type": "object",
                                "$ref": "#/components/schemas/DateRange"
                            },
                            "products": {
                                "description": "List of matching products",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ProductMatch"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AuditSearchResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Audit Search Response",
                        "description": "Audit Search Response",
                        "properties": {
                            "audits": {
                                "description": "List of found audits",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Audit"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateAuditRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Create Audit Request",
                        "description": "Request for creating an audit",
                        "properties": {
                            "bins": {
                                "description": "List of Create Audit Request Bins",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CreateAuditRequestBin"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateAuditRequestBin": {
                "title": "Create Audit Request Bin",
                "description": "Request for creating an audit bin",
                "properties": {
                    "binName": {
                        "description": "Name of bin",
                        "type": "string"
                    },
                    "products": {
                        "description": "List of Products within a bin",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        }
                    }
                },
                "type": "object"
            },
            "Bin": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Bin Inventory Response",
                        "description": "Response object for a bin",
                        "properties": {
                            "name": {
                                "description": "Bin Name",
                                "type": "string"
                            },
                            "binID": {
                                "description": "Bin ID",
                                "type": "integer"
                            },
                            "locationCode": {
                                "description": "Location Code",
                                "type": "string"
                            },
                            "binTypeID": {
                                "description": "Bin Type ID",
                                "type": "integer"
                            },
                            "binStatusID": {
                                "description": "Bin Status ID",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "BinIDResponse": {
                "title": "Bin ID Response",
                "description": "Bin ID Response",
                "properties": {
                    "binID": {
                        "description": "Bin ID",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "BinProductQuantities": {
                "title": "Bin Product Quantities",
                "description": "A bin and its associated products and quantities",
                "properties": {
                    "binName": {
                        "description": "Name of the bin",
                        "type": "string"
                    },
                    "products": {
                        "description": "List of ProductQuantities - Products with their associated quantity",
                        "type": "object",
                        "$ref": "#/components/schemas/ProductQuantity"
                    }
                },
                "type": "object"
            },
            "BinSearchRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Bin Search Request",
                        "description": "Request needed for searching for bins",
                        "properties": {
                            "binName": {
                                "description": "Partial match of bin name",
                                "type": "string"
                            },
                            "product": {
                                "description": "Product to match bins against",
                                "type": "object",
                                "$ref": "#/components/schemas/Product"
                            },
                            "sortAscending": {
                                "description": "Flag for sorting ascending",
                                "type": "boolean"
                            },
                            "showNegativeInventory": {
                                "description": "Flag for showing negative inventory",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "BinSearchResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Bin Search Response",
                        "description": "Bin Search Response Object",
                        "properties": {
                            "binQuantities": {
                                "description": "List of BinProductQuantities - bins with associated products and quantities",
                                "type": "object",
                                "$ref": "#/components/schemas/BinProductQuantities"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateBinRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Create Bin Request",
                        "description": "Request needed for creating a new bin",
                        "properties": {
                            "binTypeID": {
                                "title": "bin type id",
                                "description": "Bin Type Identifier",
                                "type": "integer"
                            },
                            "binStatusID": {
                                "title": "bin status id",
                                "description": "Bin Status Identifier",
                                "type": "integer"
                            },
                            "name": {
                                "title": "name",
                                "description": "Name",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "GetBinsRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Get Bins Request",
                        "description": "Request needed for getting a list of bins",
                        "properties": {
                            "searchTerm": {
                                "description": "term to search for",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "LoadBinInventoryRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Load Bin Inventory Request",
                        "description": "Request needed for loading bin inventory",
                        "properties": {
                            "bins": {
                                "description": "List of bins and their associated product quantities",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BinProductQuantities"
                                }
                            },
                            "dryRun": {
                                "description": "Flag for dry runs",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "LoadBinInventoryResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Load Bin Inventory Response",
                        "description": "Response object for loading bin inventory",
                        "properties": {
                            "unitsAdded": {
                                "description": "Number of units added",
                                "type": "integer"
                            },
                            "unitsRemoved": {
                                "description": "Number of removed units",
                                "type": "integer"
                            },
                            "binsCreated": {
                                "description": "Names of created bins",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "productsCreated": {
                                "description": "List of products created",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "binQuantities": {
                                "description": "List of new bin product quantities",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BinProductQuantities"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateBinRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Update Bin Request",
                        "description": "Request needed for updating a bin",
                        "required": [
                            "binID",
                            "locationCode"
                        ],
                        "properties": {
                            "binID": {
                                "description": "Bin identifier",
                                "type": "integer"
                            },
                            "binTypeID": {
                                "description": "New Bin's Type ID",
                                "type": "integer"
                            },
                            "binStatusID": {
                                "description": "New Bin's Status ID",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateBinsRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Update Bins Request",
                        "description": "Request needed for updating bins",
                        "properties": {
                            "bins": {
                                "description": "List of Update Bin Requests",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UpdateBinRequest"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateBinsResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Update Bins Response",
                        "description": "Response for updating bins",
                        "properties": {
                            "numberAffected": {
                                "description": "Number of affected bins",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "GetPendingItemsResponse": {
                "title": "Get Pending Items Response",
                "description": "Get Pending Items Response",
                "properties": {
                    "totalCount": {
                        "description": "Total Count of pending items",
                        "type": "integer"
                    },
                    "page": {
                        "description": "Page number",
                        "type": "integer"
                    },
                    "perPage": {
                        "description": "Number per page",
                        "type": "integer"
                    },
                    "prevPage": {
                        "description": "Previous page",
                        "type": "integer"
                    },
                    "sortBy": {
                        "description": "Field to sort by",
                        "type": "string",
                        "enum": [
                            "QUANTITY",
                            "FROM",
                            "TO",
                            "TYPE",
                            "ORDER_ID",
                            "WEIGHT"
                        ]
                    },
                    "sortAscending": {
                        "description": "Flag to sort by ascending",
                        "type": "boolean"
                    },
                    "pendingItems": {
                        "description": "List of pending items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PendingItem"
                        }
                    }
                },
                "type": "object"
            },
            "PendingItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Pending Item",
                        "description": "Pending Item",
                        "properties": {
                            "pendingItemID": {
                                "description": "Pending Item Identifier",
                                "type": "integer"
                            },
                            "orderID": {
                                "description": "Order Identifier",
                                "type": "integer"
                            },
                            "shipmentID": {
                                "description": "Shipment Identifier",
                                "type": "integer"
                            },
                            "type": {
                                "description": "Pending Item type",
                                "type": "string",
                                "enum": [
                                    "TYPE_BIN",
                                    "TYPE_DC",
                                    "TYPE_AUDIT",
                                    "TYPE_RESTOCK"
                                ]
                            },
                            "quantity": {
                                "description": "The number of items affected for this log entry",
                                "type": "integer"
                            },
                            "partNumber": {
                                "description": "Part/Product Number",
                                "type": "string"
                            },
                            "upc": {
                                "description": "Universal Product Code",
                                "type": "string"
                            },
                            "sku": {
                                "description": "Stock Keeping Unit",
                                "type": "string"
                            },
                            "productID": {
                                "description": "Product Identifier",
                                "type": "integer"
                            },
                            "toBin": {
                                "description": "To Bin ID",
                                "type": "string"
                            },
                            "toBinID": {
                                "description": "To Bin ID",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "BinRange": {
                "title": "Bin Range",
                "description": "Range of bins",
                "properties": {
                    "startBinName": {
                        "description": "Start Bin Name",
                        "type": "string"
                    },
                    "endBinName": {
                        "description": "End Bin Name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CompleteWaveResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Complete Wave Response",
                        "description": "Complete Wave Response",
                        "properties": {
                            "recoveryWaveID": {
                                "description": "Recovery Wave Identifier",
                                "type": "integer"
                            },
                            "auditID": {
                                "description": "Audit Identifier",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateWaveResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Create Wave Response",
                        "description": "Create Wave Response",
                        "properties": {
                            "waveID": {
                                "description": "Wave Identifier",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Wave": {
                "title": "Wave",
                "description": "Wave Model",
                "properties": {
                    "waveID": {
                        "description": "Wave Identifier",
                        "type": "integer"
                    },
                    "locationID": {
                        "description": "Location Identifier",
                        "type": "integer"
                    },
                    "created": {
                        "description": "When the wave was created",
                        "type": "string"
                    },
                    "userID": {
                        "description": "User Identifier for the wave creator",
                        "type": "integer"
                    },
                    "orderType": {
                        "description": "Order Type of the wave",
                        "type": "string",
                        "enum": [
                            "ISPU",
                            "STH",
                            "TISPU",
                            "TRANSFER",
                            "DELIVERY"
                        ]
                    },
                    "type": {
                        "description": "Type of wave",
                        "type": "string",
                        "enum": [
                            "NORMAL",
                            "SPECIAL",
                            "SINGLE",
                            "MULTIPLE"
                        ]
                    },
                    "status": {
                        "description": "Status of the wave",
                        "type": "string",
                        "enum": [
                            "ERROR",
                            "PENDING",
                            "IN_PROGRESS",
                            "CLOSED",
                            "PENDING_RECOVERY"
                        ]
                    },
                    "contents": {
                        "description": "List of Wave Contents",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WaveContent"
                        }
                    },
                    "recoveryWaveID": {
                        "description": "Wave Recovery Identifier",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "WaveCompletion": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Wave Completion",
                        "description": "Wave Completion",
                        "properties": {
                            "createRecovery": {
                                "description": "Flag for creating a recovery",
                                "type": "boolean"
                            },
                            "bins": {
                                "description": "Maximum number of orders",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BinProductQuantities"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "WaveContent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                        "title": "Wave Content",
                        "description": "Wave Content Model",
                        "properties": {
                            "orderID": {
                                "description": "Order Identifier",
                                "type": "integer"
                            },
                            "shipmentID": {
                                "description": "Shipment Identifier",
                                "type": "integer"
                            },
                            "binName": {
                                "description": "Bin Name",
                                "type": "string"
                            },
                            "partNumber": {
                                "description": "Part/Product Number",
                                "type": "string"
                            },
                            "upc": {
                                "description": "Universal Product Code",
                                "type": "string"
                            },
                            "sku": {
                                "description": "Stock Keeping Unit",
                                "type": "string"
                            },
                            "quantity": {
                                "description": "Current Quantity of Item",
                                "type": "integer"
                            },
                            "actualQuantity": {
                                "description": "Actual Quantity of Item",
                                "type": "integer"
                            },
                            "slotID": {
                                "description": "Slot Identifier",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "WaveItem": {
                "title": "Wave Shipment Item",
                "description": "An item quantity used in wave shipments",
                "required": [
                    "orderItemID",
                    "quantity"
                ],
                "properties": {
                    "orderItemID": {
                        "description": "Order Item ID",
                        "type": "integer"
                    },
                    "partNumber": {
                        "description": "Part Number",
                        "type": "string"
                    },
                    "upc": {
                        "description": "Upc",
                        "type": "string"
                    },
                    "sku": {
                        "description": "SKU",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "Current Quantity of Item",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "WaveShipment": {
                "title": "Wave Shipment",
                "description": "A shipment (used in getting wave suggestions)",
                "required": [
                    "orderID",
                    "shipmentID",
                    "items"
                ],
                "properties": {
                    "orderID": {
                        "description": "Order Identifier",
                        "type": "integer"
                    },
                    "shipmentID": {
                        "description": "Shipment Identifier",
                        "type": "integer"
                    },
                    "items": {
                        "description": "List of Items in the shipment",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WaveItem"
                        }
                    }
                },
                "type": "object"
            },
            "WaveSuggestionItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WaveItem"
                    },
                    {
                        "title": "Wave Suggestion Item",
                        "description": "A suggestion of where to add an item to a pick wave.",
                        "required": [
                            "orderItemID",
                            "quantity",
                            "binName"
                        ],
                        "properties": {
                            "binName": {
                                "description": "Bin Name",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "WaveSuggestionRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseRequest"
                    },
                    {
                        "title": "Wave Suggestion Request",
                        "description": "Wave Suggestion Request",
                        "required": [
                            "locationCode",
                            "shipments"
                        ],
                        "properties": {
                            "includeZeroInventory": {
                                "description": "Flag for including zero inventory items",
                                "type": "boolean"
                            },
                            "binRanges": {
                                "description": "List of Bin Ranges",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BinRange"
                                }
                            },
                            "shipments": {
                                "description": "List of Wave Shipments",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WaveShipment"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "WaveSuggestionResponse": {
                "title": "Wave suggestion Response",
                "description": "Wave suggestion response",
                "properties": {
                    "shipments": {
                        "description": "List of wave shipment suggestions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WaveSuggestionShipment"
                        }
                    }
                },
                "type": "object"
            },
            "WaveSuggestionShipment": {
                "title": "Wave Shipment",
                "description": "A suggested shipment to put into a pick wave",
                "properties": {
                    "orderID": {
                        "description": "Order Identifier",
                        "type": "integer"
                    },
                    "shipmentID": {
                        "description": "Shipment Identifier",
                        "type": "integer"
                    },
                    "items": {
                        "description": "List of suggested items to put in shipment in a wave.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WaveSuggestionItem"
                        }
                    }
                },
                "type": "object"
            },
            "BinModel": {
                "title": "BinModel",
                "description": "Bin Model",
                "properties": {
                    "binID": {
                        "description": "Unique Bin Identifier assigned by the system",
                        "type": "integer"
                    },
                    "locationID": {
                        "description": "Location Identifier of the owning location",
                        "type": "integer"
                    },
                    "binTypeID": {
                        "description": "New Bin's Type ID",
                        "type": "integer"
                    },
                    "binStatusID": {
                        "description": "New Bin's Status ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Client specified static bin name",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "BinResponseModel": {
                "title": "BinResponseModel",
                "description": "Bin Response Object",
                "properties": {
                    "bins": {
                        "description": "list of resultant bins",
                        "type": "object",
                        "$ref": "#/components/schemas/BinModel"
                    },
                    "resultCount": {
                        "description": "number of results",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "BinStatusModel": {
                "title": "BinStatusModel",
                "description": "Status of Bin",
                "properties": {
                    "binStatusID": {
                        "description": "Bin Status Identifier",
                        "type": "integer"
                    },
                    "description": {
                        "description": "Bin Status Description",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BinTypeModel": {
                "title": "BinTypeModel",
                "description": "Type of Bin",
                "properties": {
                    "binTypeID": {
                        "description": "Bin Type Identifier",
                        "type": "integer"
                    },
                    "description": {
                        "description": "Bin Type Description",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "M_DeleteItem": {
                "title": "M_DeleteItem",
                "description": "Delete Item Model",
                "properties": {
                    "productID": {
                        "description": "Product Identifier",
                        "type": "integer"
                    },
                    "inventoryIDs": {
                        "description": "List of inventory identifiers associated with the deleted item",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "locationIDs": {
                        "description": "List of location identifiers associated with the deleted item",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "auditIDs": {
                        "description": "List of audit identifiers associated with the deleted item",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "pickWaveIDs": {
                        "description": "List of pick wave identifiers associated with the deleted item",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "itemIdentifier": {
                        "description": "Details about the item that was deleted",
                        "$ref": "#/components/schemas/M_ItemIdentifier"
                    }
                },
                "type": "object"
            },
            "M_FetchFileConfig": {
                "title": "M_FetchFileConfig",
                "description": "Fetch File Config Model",
                "properties": {
                    "fetchFileConfigID": {
                        "description": "Fetch File Config ID",
                        "type": "integer"
                    },
                    "tenantID": {
                        "description": "Tenant ID",
                        "type": "integer"
                    },
                    "active": {
                        "description": "Active",
                        "type": "boolean"
                    },
                    "lastModified": {
                        "description": "Time config was last modified",
                        "type": "string"
                    },
                    "emailList": {
                        "description": "Email List",
                        "type": "string"
                    },
                    "refreshEnabled": {
                        "description": "Flag for Refresh Enabled",
                        "type": "boolean"
                    },
                    "refreshFileDescription": {
                        "description": "Description for the refresh file",
                        "type": "string"
                    },
                    "updateEnabled": {
                        "description": "Flag for Update Enabled",
                        "type": "boolean"
                    },
                    "updateFileDescription": {
                        "description": "Description for the update file",
                        "type": "string"
                    },
                    "ftpServer": {
                        "description": "FTP server address",
                        "type": "string"
                    },
                    "ftpUsername": {
                        "description": "FTP server username",
                        "type": "string"
                    },
                    "ftpPassword": {
                        "description": "FTP server password",
                        "type": "string"
                    },
                    "ftpPort": {
                        "description": "FTP server port",
                        "type": "integer"
                    },
                    "ftpRemotePath": {
                        "description": "FTP server remote path",
                        "type": "string"
                    },
                    "ftpRemotePathArchive": {
                        "description": "FTP server remote path archive",
                        "type": "string"
                    },
                    "region": {
                        "description": "S3 Region",
                        "type": "string"
                    },
                    "version": {
                        "description": "S3 Version",
                        "type": "string"
                    },
                    "s3Key": {
                        "description": "S3 Key",
                        "type": "string"
                    },
                    "secret": {
                        "description": "S3 Secret",
                        "type": "string"
                    },
                    "bucket": {
                        "description": "S3 Bucket",
                        "type": "string"
                    },
                    "s3Path": {
                        "description": "S3 Bucket Path (directory)",
                        "type": "string"
                    },
                    "archiveBucket": {
                        "description": "S3 Archive Bucket",
                        "type": "string"
                    },
                    "s3ArchivePath": {
                        "description": "S3 Archive Bucket Path (directory)",
                        "type": "string"
                    },
                    "lockName": {
                        "description": "Lock name",
                        "type": "string"
                    },
                    "postProcessAction": {
                        "description": "Enum denoting action post processing",
                        "type": "integer"
                    },
                    "useControlFile": {
                        "description": "Flag for using control file",
                        "type": "boolean"
                    },
                    "multipleFiles": {
                        "description": "Flag for using multiple files",
                        "type": "boolean"
                    },
                    "zeroOutNegatives": {
                        "description": "Flag for converting negatives to zero",
                        "type": "boolean"
                    },
                    "fieldNameMap": {
                        "description": "List of field names",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ignoreExtraFields": {
                        "description": "Flag for ignoring extra fields",
                        "type": "boolean"
                    },
                    "blankQuantityIsZero": {
                        "description": "Flag to convert null quantities to zero",
                        "type": "boolean"
                    },
                    "csvDelimiter": {
                        "description": "CSV Delimiter",
                        "type": "string"
                    },
                    "exportAfterRefresh": {
                        "description": "Flag for exporting after refresh",
                        "type": "boolean"
                    },
                    "postImportExportId": {
                        "description": "Export id post import",
                        "type": "integer"
                    },
                    "postImportFtpId": {
                        "description": "FTP id post import",
                        "type": "integer"
                    },
                    "productMapping": {
                        "title": "productMapping",
                        "description": "Enum for fetch file mapping",
                        "type": "string",
                        "enum": [
                            "SWAP_PART_NUMBER_WITH_UPC",
                            "SWAP_SKU_WITH_UPC"
                        ]
                    }
                },
                "type": "object"
            },
            "M_ItemIdentifier": {
                "title": "M_ItemIdentifier",
                "description": "Item Identifier Model",
                "properties": {
                    "partNumber": {
                        "description": "Part/Product Number",
                        "type": "string"
                    },
                    "upc": {
                        "description": "Universal Product Code",
                        "type": "string"
                    },
                    "sku": {
                        "description": "Stock Keeping Unit",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TenantConfigModel": {
                "title": "Tenant Config Model",
                "description": "Model of a tenant config.",
                "properties": {
                    "tenantID": {
                        "description": "A Tenant ID",
                        "type": "integer"
                    },
                    "numEventSenderWorkers": {
                        "description": "Number of Event Sender Workers to run for this tenant.",
                        "type": "integer"
                    },
                    "fetchWorkerConfigIds": {
                        "description": "Config IDs of Fetch Worker Configs to regularly run. Set this to [0] to run all configs.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "eventsToSend": {
                        "description": "What level of events to send. Must be one of: NO_REFRESH_LOGS, WITH_REFRESH_LOGS, WITH_BASIC_EVENTS, ALL",
                        "type": "string"
                    },
                    "enableSyncApi": {
                        "description": "Whether our secret sync api is enabled for this tenant.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "x-vol-tenant": {
                "name": "x-vol-tenant",
                "in": "header",
                "description": "Tenant ID",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            "x-vol-site": {
                "name": "x-vol-site",
                "in": "header",
                "description": "Site ID",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "type": {
                "name": "type",
                "in": "query",
                "description": "Type of request enum",
                "required": true,
                "schema": {
                    "type": "string",
                    "enum": [
                        "ALL",
                        "PARTIAL",
                        "ANY",
                        "ALL_STORES"
                    ]
                }
            },
            "items": {
                "name": "items",
                "in": "query",
                "description": "List of Items to search on",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/ItemQuantity"
                    }
                }
            },
            "requestLocation": {
                "name": "requestLocation",
                "in": "query",
                "description": "Location for Request",
                "required": false,
                "schema": {
                    "$ref": "#/components/schemas/RequestLocation"
                }
            },
            "locationWhitelist": {
                "name": "locationWhitelist",
                "in": "query",
                "description": "List of location codes that are allowed to be included in results",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "locationBlacklist": {
                "name": "locationBlacklist",
                "in": "query",
                "description": "List of location codes that are NOT allowed to be included in results",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "limit": {
                "name": "limit",
                "in": "query",
                "description": "The maximum number of results to return, defaults to 100 for most",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "ignoreSafetyStock": {
                "name": "ignoreSafetyStock",
                "in": "query",
                "description": "Whether to ignore the safety stock buffer put in place",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "includeNegativeInventory": {
                "name": "includeNegativeInventory",
                "in": "query",
                "description": "Whether to allow items with negative inventory in the results",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "shippingLocation": {
                "name": "shippingLocation",
                "in": "query",
                "description": "Whether to limit results to locations that are shipping enabled",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "pickup": {
                "name": "pickup",
                "in": "query",
                "description": "Filter results by locations that are pickup-enabled (true) or not (false)",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "transferEnabled": {
                "name": "transferEnabled",
                "in": "query",
                "description": "Filter results by locations that have transfer enabled (true) or don't (false)",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "includeInAggregate": {
                "name": "includeInAggregate",
                "in": "query",
                "description": "Filter results by locations that have aggregate export enabled (true) or don't (false)",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "includeAttributes": {
                "name": "includeAttributes",
                "in": "query",
                "description": "Flag to include attributes or not",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "dryRun": {
                "name": "dryRun",
                "in": "query",
                "description": "Flag used to differentiate between a test and a non-test run",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "explicit": {
                "name": "explicit",
                "in": "query",
                "description": "Flag used to request explicit inventory, location, pick wave, and audit information for each request item",
                "required": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "locationCodes": {
                "name": "locationCodes",
                "in": "query",
                "description": "An array of locationCodes to be considered for item-deletion purposes. Optional.\nAll locationCodes associated with the requesting tenant will be considered if no locationCodes are provided.",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "partNumber": {
                "name": "partNumber",
                "in": "query",
                "description": "The part number of the item to be deleted. Supports basic regex operators: .*+?^$[]",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "upc": {
                "name": "upc",
                "in": "query",
                "description": "The upc of the item to be deleted. Supports basic regex operators: .*+?^$[]",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "sku": {
                "name": "sku",
                "in": "query",
                "description": "The sku of the item to be deleted. Supports basic regex operators: .*+?^$[]",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "locationName": {
                "name": "locationName",
                "in": "query",
                "description": "Location Name",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "locationID": {
                "name": "locationID",
                "in": "query",
                "description": "Location Identifier",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "currentPage": {
                "name": "currentPage",
                "in": "query",
                "description": "Current display page",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "numberPerPage": {
                "name": "numberPerPage",
                "in": "query",
                "description": "Number of items shown per page",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "sortBy": {
                "name": "sortBy",
                "in": "query",
                "description": "Field to sort by (enum = {'QUANTITY', 'FROM', 'TO', 'TYPE', 'ORDER_ID', 'WEIGHT'})",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "shipmentID": {
                "name": "shipmentID",
                "in": "query",
                "description": "Shipment ID",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "schemaName": {
                "name": "schemaName",
                "in": "path",
                "description": "Name of the schema to query for",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "directory": {
                "name": "directory",
                "in": "path",
                "description": "Name of the directory to look in",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "Last-Modified": {
                "name": "Last-Modified",
                "in": "header",
                "description": "Header value to determine last modified",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "If-Modified-Since": {
                "name": "If-Modified-Since",
                "in": "header",
                "description": "Header value to determine if modified since a certain time",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "wave_id": {
                "name": "wave_id",
                "in": "path",
                "description": "Wave Identifier",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            "exportSettingsName": {
                "name": "exportSettingsName",
                "in": "query",
                "description": "Export Settings Name",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "exportSettingsFTPName": {
                "name": "exportSettingsFTPName",
                "in": "path",
                "description": "Export Settings FTP Name",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "exportSettingsS3Name": {
                "name": "exportSettingsS3Name",
                "in": "path",
                "description": "Export Settings S3 Name",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "binName": {
                "name": "binName",
                "in": "query",
                "description": "Bin Name",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            "locationCode": {
                "name": "locationCode",
                "in": "query",
                "description": "Location Code",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "AllocateInventoryRequest": {
                "description": "Request to allocate inventory",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AllocateInventoryRequest"
                        }
                    }
                }
            },
            "CreateBinRequest": {
                "description": "Request to create a new bin",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateBinRequest"
                        }
                    }
                }
            },
            "BinSearchRequest": {
                "description": "Request to allocate inventory",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BinSearchRequest"
                        }
                    }
                }
            },
            "LoadBinInventoryRequest": {
                "description": "Request to load bin inventory",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/LoadBinInventoryRequest"
                        }
                    }
                }
            },
            "UpdateBinsRequest": {
                "description": "Request to update multiple bins",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateBinsRequest"
                        }
                    }
                }
            },
            "UpdateBinRequest": {
                "description": "Request to update a bin",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateBinRequest"
                        }
                    }
                }
            },
            "AuditSearchRequest": {
                "description": "Request to search audits",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AuditSearchRequest"
                        }
                    }
                }
            },
            "CreateAuditRequest": {
                "description": "Request to create an audit",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateAuditRequest"
                        }
                    }
                }
            },
            "CreateAuditRequestBin": {
                "description": "Request to create an audit bin",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateAuditRequestBin"
                        }
                    }
                }
            },
            "FetchFileConfigRequest": {
                "description": "Request to fetch file configs",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FetchFileConfigRequest"
                        }
                    }
                }
            },
            "InventoryRequest": {
                "description": "Request to get inventory",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InventoryRequest"
                        }
                    }
                }
            },
            "AggregateRequest": {
                "description": "Request to aggregate inventory",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AggregateRequest"
                        }
                    }
                }
            },
            "RefreshRequest": {
                "description": "Request to refresh inventory",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/RefreshRequest"
                        }
                    }
                }
            },
            "AdjustRequest": {
                "description": "Request to adjust inventory",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AdjustRequest"
                        }
                    }
                }
            },
            "DeleteItemRequest": {
                "description": "Request to delete item(s)",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DeleteItemRequest"
                        }
                    }
                }
            },
            "OrderItemInformationRequest": {
                "description": "Request to retrieve order item information",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/OrderItemInformationRequest"
                        }
                    }
                }
            },
            "OrderItemLogRequest": {
                "description": "Request to retrieve order item log(s)",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/OrderItemLogRequest"
                        }
                    }
                }
            },
            "ClearEventQueueRequest": {
                "description": "Request to clear events that are waiting to send.",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ClearEventQueueRequest"
                        }
                    }
                }
            },
            "WaveCompletion": {
                "description": "Request to complete a wave",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/WaveCompletion"
                        }
                    }
                }
            },
            "CreateSiteRequest": {
                "description": "Request to create a new site",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateSiteRequest"
                        }
                    }
                }
            },
            "ProvisionSiloRequest": {
                "description": "Request to create to provision a new silo for a given tenant.",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ProvisionSiloRequest"
                        }
                    }
                }
            },
            "CreateTenantRequest": {
                "description": "Request to create a tenant",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateTenantRequest"
                        }
                    }
                }
            },
            "UpdateTenantConfigRequest": {
                "description": "Request to create tenant config",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateTenantConfigRequest"
                        }
                    }
                }
            },
            "CloneTenantRequest": {
                "description": "Request to clone a tenant",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CloneTenantRequest"
                        }
                    }
                }
            },
            "CreateExportSettingsRequest": {
                "description": "Request to create a new Export Settings",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateExportSettingsRequest"
                        }
                    }
                }
            },
            "UpdateExportSettingsRequest": {
                "description": "Request to update an existing Export Settings",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateExportSettingsRequest"
                        }
                    }
                }
            },
            "CreateExportSettingsFTPRequest": {
                "description": "Request to create a new Export Settings FTP",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateExportSettingsFTPRequest"
                        }
                    }
                }
            },
            "UpdateExportSettingsFTPRequest": {
                "description": "Request to update an existing Export Settings FTP",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateExportSettingsFTPRequest"
                        }
                    }
                }
            },
            "CreateExportSettingsS3Request": {
                "description": "Request to create a new Export Settings S3",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateExportSettingsS3Request"
                        }
                    }
                }
            },
            "UpdateExportSettingsS3Request": {
                "description": "Request to update an existing Export Settings S3",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateExportSettingsS3Request"
                        }
                    }
                }
            },
            "ExportInventoryRequest": {
                "description": "Request to run an inventory export",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ExportInventoryRequest"
                        }
                    }
                }
            },
            "WaveSuggestionRequest": {
                "description": "Request to query for a pick wave suggestion",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/WaveSuggestionRequest"
                        }
                    }
                }
            },
            "ProductMappingRequest": {
                "description": "Request to work with Product Mappings",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ProductMappingRequest"
                        }
                    }
                }
            }
        }
    }
}